/*
 * FormKiQ HTTP API
 * Formkiq API: Document Management Platform API using JWT Authentication
 *
 * The version of the OpenAPI document: 1.12.0
 * Contact: support@formkiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.formkiq.client.api;

import com.formkiq.client.invoker.ApiException;
import com.formkiq.client.model.AddApiKeyRequest;
import com.formkiq.client.model.AddApiKeyResponse;
import com.formkiq.client.model.DeleteApiKeyResponse;
import com.formkiq.client.model.GetApiKeysResponse;
import com.formkiq.client.model.GetConfigurationResponse;
import com.formkiq.client.model.GetSitesRequest;
import com.formkiq.client.model.GetVersionRequest;
import com.formkiq.client.model.SetConfigRequest;
import com.formkiq.client.model.SetConfigResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SystemManagementApi
 */
@Disabled
public class SystemManagementApiTest {

    private final SystemManagementApi api = new SystemManagementApi();

    /**
     * Adds a new API Key
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ddApiKeyTest() throws ApiException {
        AddApiKeyRequest addApiKeyRequest = null;
        String siteId = null;
        AddApiKeyResponse response = api.ddApiKey(addApiKeyRequest, siteId);
        // TODO: test validations
    }

    /**
     * Adds a new API Key
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteApiKeyTest() throws ApiException {
        String apiKey = null;
        String siteId = null;
        DeleteApiKeyResponse response = api.deleteApiKey(apiKey, siteId);
        // TODO: test validations
    }

    /**
     * Returns the list of ApiKeys
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApiKeysTest() throws ApiException {
        String siteId = null;
        GetApiKeysResponse response = api.getApiKeys(siteId);
        // TODO: test validations
    }

    /**
     * Returns the list of sites that the user has access to
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigsTest() throws ApiException {
        String siteId = null;
        GetConfigurationResponse response = api.getConfigs(siteId);
        // TODO: test validations
    }

    /**
     * Returns the list of sites that the user has access to
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSitesTest() throws ApiException {
        GetSitesRequest response = api.getSites();
        // TODO: test validations
    }

    /**
     * Return the version of FormKiQ
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVersionTest() throws ApiException {
        GetVersionRequest response = api.getVersion();
        // TODO: test validations
    }

    /**
     * Update the System Management configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateConfigTest() throws ApiException {
        SetConfigRequest setConfigRequest = null;
        String siteId = null;
        SetConfigResponse response = api.updateConfig(setConfigRequest, siteId);
        // TODO: test validations
    }

}
