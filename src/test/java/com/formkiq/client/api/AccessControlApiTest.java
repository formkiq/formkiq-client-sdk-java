/*
 * FormKiQ API JWT Formkiq API: Document Management Platform API using OAuth(JWT) Authentication You
 * can find out more about FormKiQ at [https://formkiq.com](http://formkiq.com). ## Introduction
 * FormKiQ is an API-first (head-less), battle-tested document management API. The FormKiQ API
 * provides all the API endpoints to build your Perfect Document Management Platform. FormKiQ API
 * was built on top of [OpenAPI specification](https://www.openapis.org), so it is easy to use the
 * API spec file with any application that supports the OpenAPI specification. Open API OAuth
 * Specification -
 * https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-jwt.yaml Open
 * API IAM Specification -
 * https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-iam.yaml ##
 * Authentication FormKiQ offers three forms of authentication: - OAuth(JWT) - AWS IAM - API Key
 *
 * The version of the OpenAPI document: 1.16.1 Contact: support@formkiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */


package com.formkiq.client.api;

import com.formkiq.client.invoker.ApiException;
import com.formkiq.client.model.DeleteResponse;
import com.formkiq.client.model.GetOpaAccessPoliciesResponse;
import com.formkiq.client.model.GetOpaAccessPolicyItemsResponse;
import com.formkiq.client.model.GetOpaAccessPolicyResponse;
import com.formkiq.client.model.SetOpaAccessPolicyItemsRequest;
import com.formkiq.client.model.SetResponse;
import com.formkiq.client.model.ValidationErrorsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccessControlApi
 */
@Disabled
public class AccessControlApiTest {

  private final AccessControlApi api = new AccessControlApi();

  /**
   * Delete OPA Access Policy Items
   *
   * Delete OPA Access Policy Items
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void deleteOpaAccessPolicyItemsTest() throws ApiException {
    String siteId = null;
    DeleteResponse response = api.deleteOpaAccessPolicyItems(siteId);
    // TODO: test validations
  }

  /**
   * Get OPAs Access Policies
   *
   * Returns a list of OPA Access Policies, can only be requested with ADMIN privileges
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void getOpaAccessPoliciesTest() throws ApiException {
    GetOpaAccessPoliciesResponse response = api.getOpaAccessPolicies();
    // TODO: test validations
  }

  /**
   * Get OPA Access Policy
   *
   * Returns OPA Access Policy, can only be requested with ADMIN privileges
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void getOpaAccessPolicyTest() throws ApiException {
    String siteId = null;
    GetOpaAccessPolicyResponse response = api.getOpaAccessPolicy(siteId);
    // TODO: test validations
  }

  /**
   * Get OPA Access Policy Items
   *
   * Returns OPA Access Policy Items, can only be requested with ADMIN privileges
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void getOpaAccessPolicyItemsTest() throws ApiException {
    String siteId = null;
    GetOpaAccessPolicyItemsResponse response = api.getOpaAccessPolicyItems(siteId);
    // TODO: test validations
  }

  /**
   * Set opa access policy items, can only be requested with ADMIN privileges
   *
   * Sets opa access policy items
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void setOpaAccessPolicyItemsTest() throws ApiException {
    String siteId = null;
    SetOpaAccessPolicyItemsRequest setOpaAccessPolicyItemsRequest = null;
    SetResponse response = api.setOpaAccessPolicyItems(siteId, setOpaAccessPolicyItemsRequest);
    // TODO: test validations
  }

}
