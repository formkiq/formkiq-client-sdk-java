/*
 * FormKiQ API Formkiq API: Document Management Platform API using OAuth(JWT) Authentication You can
 * find out more about FormKiQ at [https://formkiq.com](http://formkiq.com). ## Introduction FormKiQ
 * is an API-first (head-less), battle-tested document management API. The FormKiQ API provides all
 * the API endpoints to build your Perfect Document Management Platform. FormKiQ API was built on
 * top of [OpenAPI specification](https://www.openapis.org), so it is easy to use the API spec file
 * with any application that supports the OpenAPI specification. Open API OAuth Specification -
 * https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-jwt.yaml Open
 * API IAM Specification -
 * https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-iam.yaml ##
 * Authentication FormKiQ offers three forms of authentication: - OAuth(JWT) - AWS IAM - API Key
 *
 * The version of the OpenAPI document: 1.14.1 Contact: support@formkiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */


package com.formkiq.client.api;

import com.formkiq.client.invoker.ApiException;
import com.formkiq.client.model.AddDocumentRequest;
import com.formkiq.client.model.AddDocumentResponse;
import com.formkiq.client.model.DocumentId;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PublicApi
 */
@Disabled
public class PublicApiTest {

  private final PublicApi api = new PublicApi();

  /**
   * Public add document
   *
   * Allow unauthenticated creation of new documents; must be enabled during installation (disabled
   * by default) See POST /documents/{documentId}/tags for adding tags to document schema See POST
   * /documents/{documentId}/actions for adding actions to document schema
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void publicAddDocumentTest() throws ApiException {
    AddDocumentRequest addDocumentRequest = null;
    String siteId = null;
    AddDocumentResponse response = api.publicAddDocument(addDocumentRequest, siteId);
    // TODO: test validations
  }

  /**
   * Public add webhook
   *
   * Receive an incoming public post to a specified webhook and creates a document based on the data
   * sent; must be enabled during installation (disabled by default)
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void publicAddWebhookTest() throws ApiException {
    String webhooksPlus = null;
    Object body = null;
    String siteId = null;
    DocumentId response = api.publicAddWebhook(webhooksPlus, body, siteId);
    // TODO: test validations
  }

}
