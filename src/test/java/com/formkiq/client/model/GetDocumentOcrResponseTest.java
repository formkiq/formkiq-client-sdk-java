/*
 * FormKiQ API JWT Formkiq API: Document Management Platform API using OAuth(JWT) Authentication You
 * can find out more about FormKiQ at [https://formkiq.com](http://formkiq.com). ## Introduction
 * FormKiQ is an API-first (head-less), battle-tested document management API. The FormKiQ API
 * provides all the API endpoints to build your Perfect Document Management Platform. FormKiQ API
 * was built on top of [OpenAPI specification](https://www.openapis.org), so it is easy to use the
 * API spec file with any application that supports the OpenAPI specification. Open API OAuth
 * Specification -
 * https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-jwt.yaml Open
 * API IAM Specification -
 * https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-iam.yaml ##
 * Authentication FormKiQ offers three forms of authentication: - OAuth(JWT) - AWS IAM - API Key
 *
 * The version of the OpenAPI document: 1.17.0 Contact: support@formkiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */


package com.formkiq.client.model;

import com.formkiq.client.model.OcrKeyValues;
import com.formkiq.client.model.OcrTable;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetDocumentOcrResponse
 */
public class GetDocumentOcrResponseTest {
  private final GetDocumentOcrResponse model = new GetDocumentOcrResponse();

  /**
   * Model tests for GetDocumentOcrResponse
   */
  @Test
  public void testGetDocumentOcrResponse() {
    // TODO: test GetDocumentOcrResponse
  }

  /**
   * Test the property 'contentUrls'
   */
  @Test
  public void contentUrlsTest() {
    // TODO: test contentUrls
  }

  /**
   * Test the property 'keyValues'
   */
  @Test
  public void keyValuesTest() {
    // TODO: test keyValues
  }

  /**
   * Test the property 'tables'
   */
  @Test
  public void tablesTest() {
    // TODO: test tables
  }

  /**
   * Test the property 'data'
   */
  @Test
  public void dataTest() {
    // TODO: test data
  }

  /**
   * Test the property 'ocrEngine'
   */
  @Test
  public void ocrEngineTest() {
    // TODO: test ocrEngine
  }

  /**
   * Test the property 'ocrStatus'
   */
  @Test
  public void ocrStatusTest() {
    // TODO: test ocrStatus
  }

  /**
   * Test the property 'contentType'
   */
  @Test
  public void contentTypeTest() {
    // TODO: test contentType
  }

  /**
   * Test the property 'isBase64'
   */
  @Test
  public void isBase64Test() {
    // TODO: test isBase64
  }

  /**
   * Test the property 'userId'
   */
  @Test
  public void userIdTest() {
    // TODO: test userId
  }

  /**
   * Test the property 'documentId'
   */
  @Test
  public void documentIdTest() {
    // TODO: test documentId
  }

  /**
   * Test the property 'insertedDate'
   */
  @Test
  public void insertedDateTest() {
    // TODO: test insertedDate
  }

}
