/*
 * FormKiQ API Formkiq API: Document Management Platform API using OAuth(JWT) Authentication You can
 * find out more about FormKiQ at [https://formkiq.com](http://formkiq.com). ## Introduction FormKiQ
 * is an API-first (head-less), battle-tested document management API. The FormKiQ API provides all
 * the API endpoints to build your Perfect Document Management Platform. FormKiQ API was built on
 * top of [OpenAPI specification](https://www.openapis.org), so it is easy to use the API spec file
 * with any application that supports the OpenAPI specification. Open API OAuth Specification -
 * https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-jwt.yaml Open
 * API IAM Specification -
 * https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-iam.yaml ##
 * Authentication FormKiQ offers three forms of authentication: - OAuth(JWT) - AWS IAM - API Key
 *
 * The version of the OpenAPI document: 1.14.1 Contact: support@formkiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */


package com.formkiq.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DocumentVersion
 */
public class DocumentVersionTest {
  private final DocumentVersion model = new DocumentVersion();

  /**
   * Model tests for DocumentVersion
   */
  @Test
  public void testDocumentVersion() {
    // TODO: test DocumentVersion
  }

  /**
   * Test the property 'path'
   */
  @Test
  public void pathTest() {
    // TODO: test path
  }

  /**
   * Test the property 'deepLinkPath'
   */
  @Test
  public void deepLinkPathTest() {
    // TODO: test deepLinkPath
  }

  /**
   * Test the property 'insertedDate'
   */
  @Test
  public void insertedDateTest() {
    // TODO: test insertedDate
  }

  /**
   * Test the property 'lastModifiedDate'
   */
  @Test
  public void lastModifiedDateTest() {
    // TODO: test lastModifiedDate
  }

  /**
   * Test the property 'checksum'
   */
  @Test
  public void checksumTest() {
    // TODO: test checksum
  }

  /**
   * Test the property 'documentId'
   */
  @Test
  public void documentIdTest() {
    // TODO: test documentId
  }

  /**
   * Test the property 'contentType'
   */
  @Test
  public void contentTypeTest() {
    // TODO: test contentType
  }

  /**
   * Test the property 'userId'
   */
  @Test
  public void userIdTest() {
    // TODO: test userId
  }

  /**
   * Test the property 'contentLength'
   */
  @Test
  public void contentLengthTest() {
    // TODO: test contentLength
  }

  /**
   * Test the property 'version'
   */
  @Test
  public void versionTest() {
    // TODO: test version
  }

  /**
   * Test the property 'versionKey'
   */
  @Test
  public void versionKeyTest() {
    // TODO: test versionKey
  }

  /**
   * Test the property 's3version'
   */
  @Test
  public void s3versionTest() {
    // TODO: test s3version
  }

}
