/*
 * FormKiQ API Formkiq API: Document Management Platform API using OAuth(JWT) Authentication You can
 * find out more about FormKiQ at [https://formkiq.com](http://formkiq.com). ## Introduction FormKiQ
 * is an API-first (head-less), battle-tested document management API. The FormKiQ API provides all
 * the API endpoints to build your Perfect Document Management Platform. FormKiQ API was built on
 * top of [OpenAPI specification](https://www.openapis.org), so it is easy to use the API spec file
 * with any application that supports the OpenAPI specification. Open API OAuth Specification -
 * https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-jwt.yaml Open
 * API IAM Specification -
 * https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-iam.yaml ##
 * Authentication FormKiQ offers three forms of authentication: - OAuth(JWT) - AWS IAM - API Key
 *
 * The version of the OpenAPI document: 1.16.0 Contact: support@formkiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */


package com.formkiq.client.model;

import com.formkiq.client.model.TagSchemaCompositeKey;
import com.formkiq.client.model.TagSchemaOptional;
import com.formkiq.client.model.TagSchemaRequired;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AddTagSchemaTags
 */
public class AddTagSchemaTagsTest {
  private final AddTagSchemaTags model = new AddTagSchemaTags();

  /**
   * Model tests for AddTagSchemaTags
   */
  @Test
  public void testAddTagSchemaTags() {
    // TODO: test AddTagSchemaTags
  }

  /**
   * Test the property 'compositeKeys'
   */
  @Test
  public void compositeKeysTest() {
    // TODO: test compositeKeys
  }

  /**
   * Test the property 'required'
   */
  @Test
  public void requiredTest() {
    // TODO: test required
  }

  /**
   * Test the property 'optional'
   */
  @Test
  public void optionalTest() {
    // TODO: test optional
  }

  /**
   * Test the property 'allowAdditionalTags'
   */
  @Test
  public void allowAdditionalTagsTest() {
    // TODO: test allowAdditionalTags
  }

}
