/*
 * FormKiQ HTTP API Formkiq API: Document Management Platform API using OAuth(JWT) Authentication
 * You can find out more about FormKiQ at [https://formkiq.com](http://formkiq.com). ## Introduction
 * FormKiQ is an API-first (head-less), battle-tested document management API. The FormKiQ API
 * provides all the API endpoints to build your Perfect Document Management Platform. FormKiQ API
 * was built on top of [OpenAPI specification](https://www.openapis.org), so it is easy to use the
 * API spec file with any application that supports the OpenAPI specification. Open API OAuth
 * Specification -
 * https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-jwt.yaml Open
 * API IAM Specification -
 * https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-iam.yaml ##
 * Authentication FormKiQ offers three forms of authentication: - OAuth(JWT) - AWS IAM - API Key
 *
 * The version of the OpenAPI document: 1.14.0 Contact: support@formkiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */


package com.formkiq.client.invoker;

import java.io.IOException;

import java.util.Map;
import java.util.List;

/**
 * Callback for asynchronous API call.
 *
 * @param <T> The return type
 */
public interface ApiCallback<T> {
  /**
   * This is called when the API call fails.
   *
   * @param e The exception causing the failure
   * @param statusCode Status code of the response if available, otherwise it would be 0
   * @param responseHeaders Headers of the response if available, otherwise it would be null
   */
  void onFailure(ApiException e, int statusCode, Map<String, List<String>> responseHeaders);

  /**
   * This is called when the API call succeeded.
   *
   * @param result The result deserialized from response
   * @param statusCode Status code of the response
   * @param responseHeaders Headers of the response
   */
  void onSuccess(T result, int statusCode, Map<String, List<String>> responseHeaders);

  /**
   * This is called when the API upload processing.
   *
   * @param bytesWritten bytes Written
   * @param contentLength content length of request body
   * @param done write end
   */
  void onUploadProgress(long bytesWritten, long contentLength, boolean done);

  /**
   * This is called when the API download processing.
   *
   * @param bytesRead bytes Read
   * @param contentLength content length of the response
   * @param done Read end
   */
  void onDownloadProgress(long bytesRead, long contentLength, boolean done);
}
