openapi: 3.0.1
info:
  contact:
    email: support@formkiq.com
    name: FormKiQ
    url: https://formkiq.com
  description: |-
    Formkiq API: Document Management Platform API using OAuth(JWT) Authentication

    You can find out more about FormKiQ at [https://formkiq.com](http://formkiq.com).

    ## Introduction

    FormKiQ is an API-first (head-less), battle-tested document management API. The FormKiQ API provides all the API endpoints to build your Perfect Document Management Platform.

    FormKiQ API was built on top of [OpenAPI specification](https://www.openapis.org), so it is easy to use the API spec file with any application that supports the OpenAPI specification.

    Open API OAuth Specification - https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-jwt.yaml

    Open API IAM Specification - https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-iam.yaml

    ## Authentication
    FormKiQ offers three forms of authentication:
      - OAuth(JWT)
      - AWS IAM
      - API Key
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: FormKiQ API JWT
  version: 1.16.0
  x-logo:
    url: https://docs.formkiq.com/docs/latest/_images/formkiq-logo.png
    backgroundColor: '#FFFFFF'
    altText: FormKiQ Logo
servers:
- description: Local development server
  url: http://localhost
tags:
- description: "API for the add, updating and fetching of documents"
  name: documents
  x-displayName: Documents
- description: "API for the add, updating and fetching of atttributes"
  name: attributes
  x-displayName: Attributes
- description: "API for the add, updating and fetching of schemas"
  name: schemas
  x-displayName: Schemas
- description: "API for the add, updating and fetching of document tags"
  name: documentTags
  x-displayName: Document Tags
- description: "API for the add, updating and fetching of document attributes"
  name: documentAttributes
  x-displayName: Document Attributes
- description: API for searching for documents
  name: documentSearch
  x-displayName: Document Search
- description: System Management API
  name: systemManagement
  x-displayName: System Management
- description: Advanced Document Search API
  name: advancedDocumentSearch
  x-displayName: Advanced Document Search
- description: Document Actions API
  name: documentActions
  x-displayName: Document Actions
- description: Document OCR API
  name: documentOCR
  x-displayName: Document OCR
- description: Document Versions API
  name: documentVersions
  x-displayName: Document Versions
- description: Document Folders API
  name: documentFolders
  x-displayName: Document Folders
- description: Access Control API
  name: accessControl
  x-displayName: Access Control
- description: Document Shares API
  name: documentShares
  x-displayName: Document Shares
- description: Document Workflows API
  name: documentWorkflows
  x-displayName: Document Workflows
- description: Mappings API
  name: mappings
  x-displayName: Mappings
- description: User Activities API
  name: userActivities
  x-displayName: User Activities
- description: Antivirus API
  name: antivirus
  x-displayName: Antivirus
- description: Examine Objects API
  name: examineObjects
  x-displayName: ExamineObjects
- description: Public API Endpoints
  name: public
  x-displayName: Public Endpoints
- description: Webhooks API
  name: webhooks
  x-displayName: Webhooks
- description: Onlyoffice API
  name: onlyoffice
  x-displayName: Onlyoffice
- description: E-Signature API
  name: e-signature
  x-displayName: E-Signature
- description: Case Management API
  name: caseManagement
  x-displayName: Case Management
- description: Document Generation API
  name: documentGeneration
  x-displayName: Document Generation
- description: Rulesets API
  name: ruleSets
- name: Application
  x-amazon-apigateway-tag-value: FormKiQ
- name: AppEnvironment
  x-amazon-apigateway-tag-value:
    Fn::Sub: "${AppEnvironment}"
paths:
  /version:
    get:
      description: Return the version of FormKiQ
      operationId: GetVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVersionResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get FormKiQ version
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /sites:
    get:
      description: Returns the list of sites that the user has access to
      operationId: GetSites
      parameters:
      - description: Fetch sites with status (only valid when using SitePermissions
          'defined'
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/SiteStatus'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSitesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get site(s) access
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Add Site
      operationId: AddSite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSiteRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Add Site
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /sites/{siteId}:
    patch:
      description: Update Site
      operationId: UpdateSite
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSiteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Update Site
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /sites/{siteId}/groups:
    get:
      description: Returns list of groups and permissions belonging to site
      operationId: GetSiteGroups
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSiteGroupsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get group(s) and permissions belonging to site
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /sites/{siteId}/groups/{groupName}:
    delete:
      description: Deletes Site Group and permissions
      operationId: DeleteSiteGroup
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      - description: Group Name
        explode: false
        in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Deletes Site Group and permissions
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Returns details of a group and permissions belonging to site
      operationId: GetSiteGroup
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      - description: Group Name
        explode: false
        in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSiteGroupResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get group and permissions belonging to site
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /sites/{siteId}/groups/{groupName}/permissions:
    put:
      description: Set Site's Group Permissions
      operationId: SetSiteGroupPermissions
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      - description: Group Name
        explode: false
        in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetGroupPermissionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Set Site's Group Permissions
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /sites/{siteId}/opensearch/index:
    delete:
      description: Deletes the OpenSearch index
      operationId: DeleteOpensearchIndex
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Deletes site(s) OpenSearch index
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Returns the OpenSearch index settings
      operationId: GetOpensearchIndex
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOpenSearchIndexResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get site(s) OpenSearch index settings
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200'
      x-accepts:
      - application/json
    put:
      description: Sets the OpenSearch index settings
      operationId: SetOpensearchIndex
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOpenSearchIndexRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetOpenSearchIndexResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Set site(s) OpenSearch index settings
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /sites/{siteId}/schema/document:
    get:
      description: Gets Sites schema
      operationId: GetSitesSchema
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSitesSchemaResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Sites Schema
      tags:
      - Schemas
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    put:
      description: Sets Sites schema
      operationId: SetSitesSchema
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSitesSchemaRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Set Sites Schema
      tags:
      - Schemas
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /sites/{siteId}/schema/document/attributes/{key}/allowedValues:
    get:
      description: Returns an attribute's allowed values from the site schema
      operationId: GetSitesSchemaAttributeAllowedValues
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      - description: Key Identifier
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAttributeAllowedValuesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Attribute Allowed Values
      tags:
      - Schemas
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /sites/{siteId}/classifications:
    get:
      description: Gets Sites Classifications
      operationId: GetSitesClassifications
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClassificationsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Sites Classifications
      tags:
      - Schemas
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Add Classification
      operationId: AddClassification
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddClassificationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddClassificationResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Add Classification
      tags:
      - Schemas
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /sites/{siteId}/classifications/{classificationId}:
    delete:
      description: Delete Classification
      operationId: DeleteClassification
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      - description: Classification Identifier
        explode: false
        in: path
        name: classificationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete Classification
      tags:
      - Schemas
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Get Classification
      operationId: GetClassification
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      - description: Classification Identifier
        explode: false
        in: path
        name: classificationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClassificationResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Classification
      tags:
      - Schemas
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    put:
      description: Sets Classification
      operationId: SetClassification
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      - description: Classification Identifier
        explode: false
        in: path
        name: classificationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetClassificationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Set Classification
      tags:
      - Schemas
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /sites/{siteId}/classifications/{classificationId}/attributes/{key}/allowedValues:
    get:
      description: Returns an attribute's allowed values that spans for a specific
        classifications and site schema
      operationId: GetClassificationAttributeAllowedValues
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      - description: Classification Identifier
        explode: false
        in: path
        name: classificationId
        required: true
        schema:
          type: string
        style: simple
      - description: Key Identifier
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAttributeAllowedValuesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Classification's Attribute Allowed Values
      tags:
      - Schemas
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /sites/{siteId}/configuration:
    get:
      description: Returns the list of sites that the user has access to
      operationId: GetConfiguration
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigurationResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get site configuration
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    patch:
      description: Update the System Management configuration
      operationId: UpdateConfiguration
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConfigurationResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Update site configuration
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /sites/{siteId}/apiKeys:
    get:
      description: Returns the list of ApiKeys
      operationId: GetApiKeys
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApiKeysResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get API Keys
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Adds a new API Key
      operationId: AddApiKey
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              AddApiKey:
                value:
                  name: My API Key
            schema:
              $ref: '#/components/schemas/AddApiKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddApiKeyResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add API Key
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /sites/{siteId}/apiKeys/{apiKey}:
    delete:
      description: Adds a new API Key
      operationId: DeleteApiKey
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      - description: API Key
        explode: false
        in: path
        name: apiKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApiKeyResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete API Key
      tags:
      - System Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /sites/opa/accessPolicies:
    get:
      description: "Returns a list of OPA Access Policies, can only be requested with\
        \ ADMIN privileges"
      operationId: GetOpaAccessPolicies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOpaAccessPoliciesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get OPAs Access Policies
      tags:
      - Access Control
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /sites/{siteId}/opa/accessPolicy:
    get:
      description: "Returns OPA Access Policy, can only be requested with ADMIN privileges"
      operationId: GetOpaAccessPolicy
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOpaAccessPolicyResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get OPA Access Policy
      tags:
      - Access Control
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /sites/{siteId}/opa/accessPolicy/policyItems:
    delete:
      description: Delete OPA Access Policy Items
      operationId: DeleteOpaAccessPolicyItems
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete OPA Access Policy Items
      tags:
      - Access Control
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: "Returns OPA Access Policy Items, can only be requested with ADMIN\
        \ privileges"
      operationId: GetOpaAccessPolicyItems
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOpaAccessPolicyItemsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get OPA Access Policy Items
      tags:
      - Access Control
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    put:
      description: Sets opa access policy items
      operationId: SetOpaAccessPolicyItems
      parameters:
      - description: Site Identifier
        explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOpaAccessPolicyItemsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetResponse'
          description: 200 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: "Set opa access policy items, can only be requested with ADMIN privileges"
      tags:
      - Access Control
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents:
    get:
      description: "Returns a list of the most recent documents added, ordered by\
        \ inserted, descending"
      operationId: GetDocuments
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Fetch documents with an action status
        explode: true
        in: query
        name: actionStatus
        required: false
        schema:
          enum:
          - FAILED
          - IN_QUEUE
          - PENDING
          - RUNNING
          - SKIPPED
          - FAILED_RETRY
          type: string
        style: form
      - description: Fetch soft deleted documents
        explode: true
        in: query
        name: deleted
        required: false
        schema:
          type: boolean
        style: form
      - description: Fetch documents inserted on a certain date (yyyy-MM-dd)
        explode: true
        in: query
        name: date
        required: false
        schema:
          type: string
        style: form
      - description: "UTC offset to apply to date parameter (IE: -0600)"
        explode: true
        in: query
        name: tz
        required: false
        schema:
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Previous page of results token
        explode: true
        in: query
        name: previous
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Documents listing
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: |-
        Creates a new document; body may include document content if less than 5 MB

        See POST /documents/{documentId}/tags for adding tags to document schema

        See POST /documents/{documentId}/actions for adding actions to document schema
      operationId: AddDocument
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              Simple_File:
                value:
                  path: test.txt
                  contentType: text/plain
                  isBase64: false
                  content: This is sample data file
                  tags:
                  - key: category
                    value: sample
                  - key: players
                    values:
                    - "111"
                    - "222"
                  metadata:
                  - key: info
                    value: "Lorem ipsum dolor sit amet, consectetur adipiscing elit,\
                      \ sed do eiusmod tempor incididunt ut labore et dolore magna\
                      \ aliqua."
              Child_Document:
                value:
                  path: doc1.txt
                  contentType: text/plain
                  content: This is document1 content
                  tags:
                  - key: type
                    value: document1
                  documents:
                    contentType: "text/plain,"
                    content: "This is child document1 content,"
                    tags:
                    - key: type
                      value: childdocument1
              Document_with_Webhook:
                value:
                  path: test.txt
                  contentType: text/plain
                  isBase64: false
                  content: This is sample data file
                  actions:
                  - type: webhook
                    parameters:
                      url: <callback_url>
            schema:
              $ref: '#/components/schemas/AddDocumentRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDocumentResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Add new document
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}:
    delete:
      description: |-
        Delete a document's details, i.e., metadata, contents, etc

        SoftDelete:

        The SoftDelete parameter allows for the temporary removal of a document's metadata, attributes, etc from being retrieved from all API requests.

        The document can be permanently deleted by calling the DELETE /documents/{documentId} with softDelete=false or restored using the PUT /documents/{documentId}/restore.

        Only the GET /documents?deleted=true will return all the soft deleted documents.
      operationId: DeleteDocument
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Whether to soft delete document
        explode: true
        in: query
        name: softDelete
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete document
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: "Retrieves a document's details, i.e., metadata"
      operationId: GetDocument
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    patch:
      description: "Update a document's details, i.e., metadata\n\nIf no content is\
        \ specified, the endpoint will return a S3 Presigned that will allow for the\
        \ uploading of Large document data. \n\nNOTE:\n- provided attributes will\
        \ overwrite existing matching attribute keys in the document. Attributes not\
        \ included in the request body will remain unchanged."
      operationId: UpdateDocument
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              Simple_File:
                value:
                  path: test.txt
                  contentType: text/plain
                  isBase64: false
                  content: This is sample data file
                  tags:
                  - key: category
                    value: sample
                  - key: players
                    values:
                    - "111"
                    - "222"
                  metadata:
                  - key: info
                    value: "Lorem ipsum dolor sit amet, consectetur adipiscing elit,\
                      \ sed do eiusmod tempor incididunt ut labore et dolore magna\
                      \ aliqua."
            schema:
              $ref: '#/components/schemas/UpdateDocumentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDocumentResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Update document
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/content:
    get:
      description: |
        Retrieves the content of the document with the specified `documentId`.
        - If the content is plain text and under 6 MB, the content will be returned directly.
        - If the content is plain text but exceeds 6 MB, an error will be returned.
        - For documents not in plain text format, pre-signed S3 URLs will be returned to download the content from S3.
        It is recommended to use the `/documents/{documentId}/url` endpoint to retrieve pre-signed S3 URLs for downloading the content.
      operationId: GetDocumentContent
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Version Key (version key required URL encoding)
        explode: true
        in: query
        name: versionKey
        required: false
        schema:
          type: string
        style: form
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentContentResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
            Location:
              $ref: '#/components/headers/Location'
      security:
      - ApiAuthorization: []
      summary: Get document's contents
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /documents/{documentId}/attributes:
    get:
      description: Get a listing of a document's attributes
      operationId: GetDocumentAttributes
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentAttributesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document's attributes
      tags:
      - Document Attributes
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Add multiple attributes to a document; this endpoint also accepts
        a different body parameter for adding a single attribute
      operationId: AddDocumentAttributes
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Whether to enable WebSocket real-time communication with the
          request
        explode: true
        in: query
        name: ws
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocumentAttributesRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add attribute to document
      tags:
      - Document Attributes
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: |-
        Set multiple attributes to a document; this endpoint also accepts a different body parameter for setting a single attribute

        Note:
        - attributes in the request will overwrite existing attributes.
      operationId: SetDocumentAttributes
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDocumentAttributesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Set document's attributes
      tags:
      - Document Attributes
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/attributes/{attributeKey}:
    delete:
      description: Delete a document attribute by using its key
      operationId: DeleteDocumentAttribute
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute Key
        explode: false
        in: path
        name: attributeKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete document attribute
      tags:
      - Document Attributes
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Get a document attribute by using its key
      operationId: GetDocumentAttribute
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute Key
        explode: false
        in: path
        name: attributeKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentAttributeResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document attribute by key
      tags:
      - Document Attributes
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    put:
      description: Set attributes value to a document
      operationId: SetDocumentAttributeValue
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute Key
        explode: false
        in: path
        name: attributeKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDocumentAttributeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Set document's attributes value
      tags:
      - Document Attributes
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/attributes/{attributeKey}/{attributeValue}:
    delete:
      description: Delete a specific document attribute key/value combination; the
        request will be ignored if there is no valid key/value combination found
      operationId: DeleteDocumentAttributeAndValue
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute Key
        explode: false
        in: path
        name: attributeKey
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute Value
        explode: false
        in: path
        name: attributeValue
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete document's attribute value
      tags:
      - Document Attributes
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /documents/{documentId}/tags:
    get:
      description: Get a listing of a document's tags
      operationId: GetDocumentTags
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Previous page of results token
        explode: true
        in: query
        name: previous
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentTagsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document's tags
      tags:
      - Document Tags
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    patch:
      description: Updates multiple tags to a document; this endpoint also accepts
        a different body parameter for updating a single tag
      operationId: UpdateDocumentTags
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Add_Key_Only_Tag:
                value:
                  tags:
                  - key: category
              Add_Key_and_Value_Tag:
                value:
                  tags:
                  - key: category
                    value: sample
              Add_Key_and_Values_Tag:
                value:
                  tags:
                  - key: players
                    values:
                    - "111"
                    - "222"
            schema:
              $ref: '#/components/schemas/AddDocumentTagsRequest'
        required: true
      responses:
        "200":
          content: {}
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Update document tags
      tags:
      - Document Tags
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      description: Add multiple tags to a document; this endpoint also accepts a different
        body parameter for adding a single tag
      operationId: AddDocumentTags
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Whether to enable WebSocket real-time communication with the
          request
        explode: true
        in: query
        name: ws
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              Add_Key_Only_Tag:
                value:
                  key: category
              Add_Key_and_Value_Tag:
                value:
                  key: category
                  value: person
              Add_Key_and_Values_Tag:
                value:
                  key: category
                  values:
                  - person
                  - canadian
            schema:
              $ref: '#/components/schemas/AddDocumentTagsRequest'
        required: true
      responses:
        "201":
          content: {}
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add tag to document
      tags:
      - Document Tags
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Set multiple tags to a document; this endpoint also accepts a different
        body parameter for setting a single tag
      operationId: SetDocumentTags
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Add_Key_Only_Tag:
                value:
                  tags:
                  - key: category
              Add_Key_and_Value_Tag:
                value:
                  tags:
                  - key: category
                    value: sample
              Add_Key_and_Values_Tag:
                value:
                  tags:
                  - key: players
                    values:
                    - "111"
                    - "222"
            schema:
              $ref: '#/components/schemas/AddDocumentTagsRequest'
        required: true
      responses:
        "200":
          content: {}
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Set document's tags
      tags:
      - Document Tags
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/tags/{tagKey}:
    delete:
      description: Delete a document tag by using its key
      operationId: DeleteDocumentTag
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Tag Key
        explode: false
        in: path
        name: tagKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete document tag
      tags:
      - Document Tags
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Get a document tag by using its key
      operationId: GetDocumentTag
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Tag Key
        explode: false
        in: path
        name: tagKey
        required: true
        schema:
          type: string
        style: simple
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentTagResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document tag by key
      tags:
      - Document Tags
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    put:
      description: "Update any and all values of a document tag, by using its key;\
        \ you can supply one tag value or a list of tag values in the request body"
      operationId: SetDocumentTag
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Tag Key
        explode: false
        in: path
        name: tagKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDocumentTagKeyRequest'
        required: true
      responses:
        "200":
          content: {}
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Update document tag value(s)
      tags:
      - Document Tags
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/tags/{tagKey}/{tagValue}:
    delete:
      description: Delete a specific document tag's key/value combination; the request
        will be ignored if there is no valid key/value combination found
      operationId: DeleteDocumentTagAndValue
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Tag Key
        explode: false
        in: path
        name: tagKey
        required: true
        schema:
          type: string
        style: simple
      - description: Tag Key Value
        explode: false
        in: path
        name: tagValue
        required: true
        schema:
          type: string
        style: simple
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete document's tag value
      tags:
      - Document Tags
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /documents/tags:
    patch:
      description: This API request allows the adding/updating of multiple document
        tag(s) based on document(s) that have the matching tag.
      operationId: UpdateMatchingDocumentTags
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMatchingDocumentTagsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMatchingDocumentTagsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Mass Update document tag(s)
      tags:
      - Document Tags
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/url:
    get:
      description: Returns a URL for the document's contents; this URL will expire
        (the default is 48 hours)
      operationId: GetDocumentUrl
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Version Key (version key required URL encoding)
        explode: true
        in: query
        name: versionKey
        required: false
        schema:
          type: string
        style: form
      - description: Indicates the number of hours request is valid for
        explode: true
        in: query
        name: duration
        required: false
        schema:
          type: integer
        style: form
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      - description: Set the Content-Disposition to inline
        explode: true
        in: query
        name: inline
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentUrlResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document content url
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /documents/upload:
    get:
      description: Returns a URL that can be used to upload document content and create
        a new document; this endpoint (whether GET or POST) is required in order to
        add content that is larger than 5 MB
      operationId: GetDocumentUpload
      parameters:
      - description: The upload file's path
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Checksum Type
        explode: true
        in: query
        name: checksumType
        required: false
        schema:
          enum:
          - SHA1
          - SHA256
          type: string
        style: form
      - description: Checksum value
        explode: true
        in: query
        name: checksum
        required: false
        schema:
          type: string
        style: form
      - description: Indicates the size of the entity-body
        explode: true
        in: query
        name: contentLength
        required: false
        schema:
          type: integer
        style: form
      - description: Indicates the number of hours request is valid for
        explode: true
        in: query
        name: duration
        required: false
        schema:
          type: integer
        style: form
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentUrlResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get url to add large document
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: "Returns a URL that can be used to upload document content and\
        \ create a new document, while allowing metadata to also be sent; this endpoint\
        \ (whether GET or POST) is required in order to add content that is larger\
        \ than 5 MB"
      operationId: AddDocumentUpload
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Indicates the size of the entity-body
        explode: true
        in: query
        name: contentLength
        required: false
        schema:
          type: integer
        style: form
      - description: Indicates the number of hours request is valid for
        explode: true
        in: query
        name: duration
        required: false
        schema:
          type: integer
        style: form
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              Simple_File:
                value:
                  path: test.txt
                  contentType: text/plain
                  tags:
                  - key: category
                    value: sample
                  - key: players
                    values:
                    - "111"
                    - "222"
                  metadata:
                  - key: info
                    value: "Lorem ipsum dolor sit amet, consectetur adipiscing elit,\
                      \ sed do eiusmod tempor incididunt ut labore et dolore magna\
                      \ aliqua."
            schema:
              $ref: '#/components/schemas/AddDocumentUploadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentUrlResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add large document
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/upload:
    get:
      description: "Returns a URL that can be used to upload documents for a specific\
        \ documentId; this endpoint is required in order to add content that is larger\
        \ than 5 MB. If versions are enabled, this will create a new version of the\
        \ document."
      operationId: GetDocumentIdUpload
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Checksum Type
        explode: true
        in: query
        name: checksumType
        required: false
        schema:
          enum:
          - SHA1
          - SHA256
          type: string
        style: form
      - description: Checksum value
        explode: true
        in: query
        name: checksum
        required: false
        schema:
          type: string
        style: form
      - description: Indicates the size of the entity-body
        explode: true
        in: query
        name: contentLength
        required: false
        schema:
          type: integer
        style: form
      - description: Indicates the number of hours request is valid for
        explode: true
        in: query
        name: duration
        required: false
        schema:
          type: integer
        style: form
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentUrlResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get url to update large document
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /documents/{documentId}/restore:
    put:
      description: Restores a soft deleted document
      operationId: SetDocumentRestore
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetDocumentRestoreResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Restore soft deleted document
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /documents/compress:
    post:
      description: "Compress documents into an .ZIP archive file, and returns a S3\
        \ presigned url for the location of the archive file. The operation is async\
        \ and processing time depends on the number and size of documents included;\
        \ a 404 status code is returned until the file is ready."
      operationId: CompressDocuments
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentsCompressRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsCompressResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Compress multiple documents into a .zip file
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /attributes:
    get:
      description: Returns a list of attributes
      operationId: GetAttributes
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAttributesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Attributes listing
      tags:
      - Attributes
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Creates a new attribute
      operationId: AddAttribute
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAttributeRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAttributeResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Add new attribute
      tags:
      - Attributes
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /attributes/{key}:
    delete:
      description: Delete a attribute
      operationId: DeleteAttribute
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Key Identifier
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Delete attribute
      tags:
      - Attributes
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Returns a attribute
      operationId: GetAttribute
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Key Identifier
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAttributeResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Attribute
      tags:
      - Attributes
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /attributes/{key}/allowedValues:
    get:
      description: Returns an attribute's allowed values that spans across all classifications
        and site schema
      operationId: GetAttributeAllowedValues
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Key Identifier
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAttributeAllowedValuesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Attribute Allowed Values
      tags:
      - Attributes
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /search:
    post:
      description: "Document search query request; \n\nSupports searching DynamoDB\
        \ for document(s) by a single TAG key and/or value. Value can be \"exacted\"\
        \ or \"begins_with\" matched. Search can be filtered to only check certain\
        \ documentIds (up to 100 documentIds accepted).\n\nIf using Enteprise Composite\
        \ Keys feature then multiple tag(s) can be searched for.\n\nIf Typesense is\
        \ enabled, full text search is supported through the \"text\" parameter. Full\
        \ text search will look for the text in the \"content\" and/or document \"\
        metadata\".\n\nDocumentIds parameter allows you to filter your results to\
        \ a specific set of documents. \n\nSee requestBody examples below for commmon\
        \ examples."
      operationId: DocumentSearch
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Previous page of results token
        explode: true
        in: query
        name: previous
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              Search_By_Attribute_Key:
                value:
                  query:
                    attribute:
                      key: category
              Search_By_Attribute_Value:
                value:
                  query:
                    attribute:
                      key: category
                      eq: person
              Search_By_Attribute_Value_Begins_With:
                value:
                  query:
                    attribute:
                      key: firstname
                      beginsWith: jo
              Search_By_Tag_Key:
                value:
                  query:
                    tag:
                      key: category
              Search_By_Tag_Value:
                value:
                  query:
                    tag:
                      key: category
                      eq: person
              Tag_Value_Begins_With:
                value:
                  query:
                    tag:
                      key: firstname
                      beginsWith: jo
              Search_By_Value_for_Specific_Documents:
                value:
                  query:
                    tag:
                      key: category
                      eq: person
                    documentIds:
                    - "1"
                    - "2"
              Typesense_Fulltext_Search:
                value:
                  query:
                    text: my search text
            schema:
              $ref: '#/components/schemas/DocumentSearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSearchResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Document search
      tags:
      - Document Search
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/searchLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /searchFulltext:
    post:
      description: "Document full-text search (and more robust multi-tag search queries,\
        \ powered by OpenSearch); ONLY available with FormKiQ Enterprise"
      operationId: SearchFulltext
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentFulltextRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFulltextResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Document full-text search
      tags:
      - Advanced Document Search
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /queryFulltext:
    post:
      description: |-
        Endpoint for allowing custom, complex queries using the OpenSearch search API (https://opensearch.org/docs/latest/opensearch/rest-api/search/); ONLY available with FormKiQ Enterprise

        Example Request Body: { "query": { "match_all": {} }}
      operationId: QueryFulltext
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryFulltextRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryFulltextResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Direct opensearch search API
      tags:
      - Advanced Document Search
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/actions:
    get:
      description: Get document actions and their status
      operationId: GetDocumentActions
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentActionsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document actions
      tags:
      - Document Actions
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: |-
        Add one or more actions to a document; this appends actions and does not replace previous actions

        Each action type supports a different set of parameters as shown in the table below:

        ### Action Parameters

        | ActionType | Parameter | Description | Example |
        | -------- | ------- | ------- | ------- |
        | OCR  | ocrParseTypes | Ocr Parsing strategy to use | TEXT, FORMS, TABLES |
        | OCR | ocrEngine     | Ocr Engine to use | tesseract or textract |
        | OCR | ocrOutputType     | Convert OCR result to an Output format (textract table only) | true |
        | OCR | ocrNumberOfPages  | Number of pages to OCR (from start) | -1 |
        | OCR    | addPdfDetectedCharactersAsText | PDF Documents convert images to text | true or false |
        | FULLTEXT    | characterMax    | Maximum number of characters to add to Fulltext destination | -1 |
        | DOCUMENTTAGGING    | engine    | Tagging Engine to use | chatgpt |
        | DOCUMENTTAGGING    | tags    | Comma-deliminted list of keywords | author,title,description |
        | WEBHOOK    | url    | Webhook URL | https://yourdomain.com/webhook-endpoint |
        | NOTIFICATION    | notificationType | Type of Notification | email |
        | NOTIFICATION    | notificationToCc    | Notification Carbon Copy | email@yourdomain.com |
        | NOTIFICATION    | notificationToBcc    | Notification Blind Carbon Copy | email@yourdomain.com |
        | NOTIFICATION    | notificationSubject    | Notification Subject | Email Subject |
        | NOTIFICATION    | notificationText    | Notification as Text | Email Text |
        | NOTIFICATION    | notificationHtml    | Notification as Html | Email HTML Text |
        | QUEUE    | queueId    | Id of Queue | |
        | IDP    | mappingId    | Id of Mapping | |
        | EVENTBRIDGE    | eventBusName    | The name or ARN of the Amazon EventBridge to receive the event. | |
      operationId: AddDocumentActions
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocumentActionsRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDocumentActionsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Add document action
      tags:
      - Document Actions
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/actions/retry:
    post:
      description: Retries all failed document action(s). Failed action status changes
        to "FAILED_RETRY" and a new "PENDING" action is created.
      operationId: AddDocumentRetryAction
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDocumentActionsRetryResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Retries failed document action(s)
      tags:
      - Document Actions
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /documents/{documentId}/ocr:
    delete:
      description: "Delete a document's optical character recognition (OCR) result,\
        \ if exists; \n\nTesseract available for all editions, but Textract engine\
        \ and tables and forms options ONLY available with FormKiQ Pro and Enterprise"
      operationId: DeleteDocumentOcr
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete document ocr
      tags:
      - Document OCR
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/ocrLambdaApi200'
      x-accepts:
      - application/json
    get:
      description: "Get a document's optical character recognition (OCR) result, if\
        \ exists; \n\nTesseract available for all editions, but Textract engine and\
        \ tables and forms options ONLY available with FormKiQ Pro and Enterprise"
      operationId: GetDocumentOcr
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Output Format Type
        explode: true
        in: query
        name: outputType
        required: false
        schema:
          enum:
          - TEXT
          - KEY_VALUE
          - CONTENT_URL
          type: string
        style: form
      - description: "Whether to return a \"contentUrl\", set value to 'true' (deprecated)"
        explode: true
        in: query
        name: contentUrl
        required: false
        schema:
          type: string
        style: form
      - description: "Returns raw 'text' of OCR content. e.g. AWS Textract returns\
          \ JSON, setting parameter to 'true' converts JSON to Text (deprecated)"
        explode: true
        in: query
        name: text
        required: false
        schema:
          type: string
        style: form
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentOcrResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document ocr content
      tags:
      - Document OCR
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/ocrLambdaApi200'
      x-accepts:
      - application/json
    post:
      description: "Document optical character recognition (OCR) request; extract\
        \ text and data from a document; \n\nTesseract available for all editions,\
        \ but Textract engine and tables and forms options ONLY available with FormKiQ\
        \ Pro and Enterprise"
      operationId: AddDocumentOcr
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocumentOcrRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDocumentOcrResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Perform document ocr
      tags:
      - Document OCR
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/ocrLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: "Set a document's optical character recognition (OCR) result for\
        \ a document; \n\nTesseract available for all editions, but Textract engine\
        \ and tables and forms options ONLY available with FormKiQ Pro and Enterprise"
      operationId: SetDocumentOcr
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDocumentOcrRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDocumentOcrResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Set document ocr result
      tags:
      - Document OCR
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/ocrLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/versions:
    get:
      description: Get a listing of document content and metadata versions; ONLY available
        with FormKiQ Pro and Enterprise
      operationId: GetDocumentVersions
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentVersionsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document's versions
      tags:
      - Document Versions
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    put:
      description: Set document to a previous document version; ONLY available with
        FormKiQ Pro and Enterprise
      operationId: SetDocumentVersion
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDocumentVersionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetDocumentVersionResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Set version of document
      tags:
      - Document Versions
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/versions/{versionKey}:
    delete:
      description: Delete a specific previous document version; ONLY available with
        FormKiQ Pro and Enterprise
      operationId: DeleteDocumentVersion
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Version Key (version key required URL encoding)
        explode: false
        in: path
        name: versionKey
        required: true
        schema:
          type: string
        style: simple
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete document version
      tags:
      - Document Versions
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /documents/{documentId}/attributes/{attributeKey}/versions:
    get:
      description: Get a listing of a document's attribute versions; ONLY available
        with FormKiQ Pro and Enterprise
      operationId: GetDocumentAttributeVersions
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute Key
        explode: false
        in: path
        name: attributeKey
        required: true
        schema:
          type: string
        style: simple
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentAttributeVersionsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document attribute's versions
      tags:
      - Document Attributes
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /folders:
    get:
      description: Get list of documents in a folder
      operationId: GetFolderDocuments
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Index Key Identifier
        explode: true
        in: query
        name: indexKey
        required: false
        schema:
          type: string
        style: form
      - description: Path query parameter (must be URL Encoded)
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFoldersResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document folders
      tags:
      - Document Folders
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/searchLambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Creates a new folder
      operationId: AddFolder
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFolderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFolderResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add document folder
      tags:
      - Document Folders
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /folders/{indexKey}:
    delete:
      description: Delete a specific folder; folder must be empty
      operationId: DeleteFolder
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Index Key Identifier
        explode: false
        in: path
        name: indexKey
        required: true
        schema:
          type: string
        style: simple
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFolderResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete document folder
      tags:
      - Document Folders
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /shares:
    get:
      description: Get a listing of user folder/document shares; ONLY available with
        FormKiQ Enterprise
      operationId: GetUserShares
      parameters:
      - description: Group Identifier
        explode: true
        in: query
        name: group
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserSharesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get user shared folders
      tags:
      - Document Shares
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /shares/folders/{indexKey}:
    post:
      description: Creates a new folder share; ONLY available with FormKiQ Enterprise
      operationId: AddFolderShare
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Index Key Identifier
        explode: false
        in: path
        name: indexKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFolderShareRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFolderShareResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Add folder share
      tags:
      - Document Shares
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /shares/{shareKey}:
    delete:
      description: Delete a specific document share; ONLY available with FormKiQ Enterprise
      operationId: DeleteShare
      parameters:
      - description: Share Identifier
        explode: false
        in: path
        name: shareKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteShareResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete folder share
      tags:
      - Document Shares
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /workflows:
    get:
      description: Get a listing of workflows; ONLY available with FormKiQ Enterprise
      operationId: GetWorkflows
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Filters Status
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get workflows
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Creates a new Workflow; ONLY available with FormKiQ Pro and Enterprise
      operationId: AddWorkflow
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWorkflowRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddWorkflowResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: 400 BAD REQUEST
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add workflow
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /workflows/{workflowId}:
    delete:
      description: Delete a Workflow; ONLY available with FormKiQ Pro and Enterprise
      operationId: DeleteWorkflow
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Workflow Identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkflowResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete workflow
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Get a workflow; ONLY available with FormKiQ Enterprise
      operationId: GetWorkflow
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Workflow Identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get workflow
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    patch:
      description: Update a Workflow details; ONLY available with FormKiQ Pro and
        Enterprise
      operationId: UpdateWorkflow
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Workflow Identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkflowRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkflowResponse'
          description: 20) OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: 400 BAD REQUEST
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Update workflow
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Set a Workflow details; ONLY available with FormKiQ Pro and Enterprise
      operationId: SetWorkflow
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Workflow Identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetWorkflowRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetWorkflowResponse'
          description: 20) OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: 400 BAD REQUEST
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Set workflow
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /workflows/{workflowId}/documents:
    get:
      description: List documents in Workflow; ONLY available with FormKiQ Pro and
        Enterprise
      operationId: GetWorkflowDocuments
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Workflow Identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowDocumentsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get list of documents in workflow
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/searchLambdaApi200'
      x-accepts:
      - application/json
  /queues:
    get:
      description: Get a listing of queues; ONLY available with FormKiQ Enterprise
      operationId: GetQueues
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQueuesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get queues
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Creates a new Queue; ONLY available with FormKiQ Pro and Enterprise
      operationId: AddQueue
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddQueueRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddQueueResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: 400 BAD REQUEST
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add queue
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /queues/{queueId}:
    delete:
      description: Delete a Queue; ONLY available with FormKiQ Pro and Enterprise
      operationId: DeleteQueue
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Queue Id
        explode: false
        in: path
        name: queueId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteQueueResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete queue
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Get a queue; ONLY available with FormKiQ Enterprise
      operationId: GetQueue
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Queue Id
        explode: false
        in: path
        name: queueId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQueueResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get queue
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /queues/{queueId}/documents:
    get:
      description: List documents in Workflow Queue; ONLY available with FormKiQ Pro
        and Enterprise
      operationId: GetWorkflowQueueDocuments
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Queue Id
        explode: false
        in: path
        name: queueId
        required: true
        schema:
          type: string
        style: simple
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowQueueDocumentsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get list of documents in queue
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/searchLambdaApi200'
      x-accepts:
      - application/json
  /documents/{documentId}/workflows:
    get:
      description: Gets a document workflows; ONLY available with FormKiQ Pro and
        Enterprise
      operationId: GetDocumentWorkflows
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentWorkflowsResponse'
          description: 200 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: 400 BAD REQUEST
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document workflows
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Creates a document workflow; ONLY available with FormKiQ Pro and
        Enterprise
      operationId: AddDocumentWorkflow
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocumentWorkflowRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDocumentWorkflowResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: 400 BAD REQUEST
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add document workflow
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/workflows/{workflowId}:
    get:
      description: Gets a document workflow; ONLY available with FormKiQ Pro and Enterprise
      operationId: GetDocumentWorkflow
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Workflow Identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentWorkflowResponse'
          description: 200 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: 400 BAD REQUEST
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document workflow
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /documents/{documentId}/workflow/{workflowId}/decisions:
    post:
      description: Approve/Reject document in approval queue; ONLY available with
        FormKiQ Pro and Enterprise
      operationId: AddDocumentWorkflowDecisions
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Workflow Identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocumentWorkflowDecisionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDocumentWorkflowDecisionsResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: 400 BAD REQUEST
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Approve/Reject document in approval queue
      tags:
      - Document Workflows
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/antivirus:
    put:
      description: Perform an Anti-Malware / Antivirus scan on a document; ONLY available
        with FormKiQ Pro and Enterprise
      operationId: SetAntivirus
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAntivirusRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAntivirusResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Antivirus document scan
      tags:
      - Antivirus
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/antivirusLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/fulltext:
    delete:
      description: Remove full text search for a document from OpenSearch; ONLY available
        with FormKiQ Enterprise
      operationId: DeleteDocumentFulltext
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFulltextResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete document full-text
      tags:
      - Advanced Document Search
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200'
      x-accepts:
      - application/json
    get:
      description: "Retrieve an OpenSearch document's details, i.e., metadata"
      operationId: GetDocumentFulltext
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentFulltextResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document's full-text
      tags:
      - Advanced Document Search
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200'
      x-accepts:
      - application/json
    patch:
      description: Update a document in OpenSearch; ONLY available with FormKiQ Enterprise
      operationId: UpdateDocumentFulltext
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentFulltextRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDocumentFulltextResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Update document's full-text
      tags:
      - Advanced Document Search
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      description: Adde a document to OpenSearch; ONLY available with FormKiQ Enterprise
      operationId: AddDocumentFulltext
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocumentFulltextRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDocumentFulltextResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add document's full-text
      tags:
      - Advanced Document Search
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Set all text/tags found within a document to OpenSearch; ONLY available
        with FormKiQ Enterprise
      operationId: SetDocumentFulltext
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDocumentFulltextRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetDocumentFulltextResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Set document's full-text
      tags:
      - Advanced Document Search
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}/fulltext/tags/{tagKey}:
    delete:
      description: Remove document tags from OpenSearch; ONLY available with FormKiQ
        Enterprise
      operationId: DeleteDocumentFulltextTag
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Tag Key
        explode: false
        in: path
        name: tagKey
        required: true
        schema:
          type: string
        style: simple
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete document full-text tag
      tags:
      - Advanced Document Search
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200'
      x-accepts:
      - application/json
  /documents/{documentId}/fulltext/tags/{tagKey}/{tagValue}:
    delete:
      description: Remove document tag/value from OpenSearch; ONLY available with
        FormKiQ Enterprise
      operationId: DeleteDocumentFulltextTagAndValue
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Tag Key
        explode: false
        in: path
        name: tagKey
        required: true
        schema:
          type: string
        style: simple
      - description: Tag Key Value
        explode: false
        in: path
        name: tagValue
        required: true
        schema:
          type: string
        style: simple
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete document full-text tag/value
      tags:
      - Advanced Document Search
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200'
      x-accepts:
      - application/json
  /documents/{documentId}/syncs:
    get:
      description: Retrieve the document syncs with external services status
      operationId: GetDocumentSyncs
      parameters:
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Share Identifier
        explode: true
        in: query
        name: shareKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentSyncResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get document syncs
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /userActivities:
    get:
      description: Retrieve a user's activities
      operationId: GetUserActivities
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Fetch specific user activities
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserActivitesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get user activities
      tags:
      - User Activities
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /documents/{documentId}/userActivities:
    get:
      description: Retrieve a user's activities for a document
      operationId: GetDocumentUserActivities
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserActivitesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get user activities for a document
      tags:
      - User Activities
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /public/documents:
    post:
      description: |-
        Allow unauthenticated creation of new documents; must be enabled during installation (disabled by default)

        See POST /documents/{documentId}/tags for adding tags to document schema

        See POST /documents/{documentId}/actions for adding actions to document schema
      operationId: PublicAddDocument
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocumentRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDocumentResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      summary: Public add document
      tags:
      - Public
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /public/webhooks/{webhooks+}:
    post:
      description: Receive an incoming public post to a specified webhook and creates
        a document based on the data sent; must be enabled during installation (disabled
        by default)
      operationId: PublicAddWebhook
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Web Hook Param
        explode: false
        in: path
        name: webhooks+
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentId'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      summary: Public add webhook
      tags:
      - Public
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /private/webhooks/{webhooks+}:
    post:
      description: Receive an incoming private webhook and creates a document based
        on the webhook's body; requires authentication
      operationId: AddWebhookDocument
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Web Hook Param
        explode: false
        in: path
        name: webhooks+
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentId'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add webhook
      tags:
      - Webhooks
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /webhooks:
    get:
      description: "Return a list of webhooks; each webhook's id can be provided to\
        \ an external service, allowing data to be sent, received, and processed via\
        \ that webhook"
      operationId: GetWebhooks
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWebhooksResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get webhooks
      tags:
      - Webhooks
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: "Create a new webhook; once created, a webhook's id can be provided\
        \ to an external service, allowing data to be sent, received, and processed\
        \ via that webhook"
      operationId: AddWebhook
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWebhookRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddWebhookResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add webhook
      tags:
      - Webhooks
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /webhooks/{webhookId}:
    delete:
      description: "Delete a webhook; this will disable sending, receiving, or processing\
        \ of data from external services to this webhook"
      operationId: DeleteWebhook
      parameters:
      - description: Web Hook Param
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete webhook
      tags:
      - Webhooks
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: "Return a webhook's details, i.e., its metadata"
      operationId: GetWebhook
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Web Hook Param
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWebhookResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get webhook
      tags:
      - Webhooks
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    patch:
      description: "Updates a webhook's details, i.e., its metadata"
      operationId: UpdateWebhook
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Web Hook Param
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWebhookRequest'
        required: true
      responses:
        "200":
          content: {}
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Update webhook
      tags:
      - Webhooks
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /webhooks/{webhookId}/tags:
    get:
      description: Get a webhook's tags
      operationId: GetWebhookTags
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Web Hook Param
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWebhookTagsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get webhook tags
      tags:
      - Webhooks
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Add a tag to a webhook
      operationId: AddWebhookTag
      parameters:
      - description: Web Hook Param
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              Add_Key_Only_Tag:
                value:
                  key: category
              Add_Key_and_Value_Tag:
                value:
                  key: category
                  value: person
            schema:
              $ref: '#/components/schemas/AddWebhookTagRequest'
        required: true
      responses:
        "201":
          content: {}
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add webhook tag
      tags:
      - Webhooks
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /onlyoffice/{documentId}/edit:
    post:
      description: Provide ONLYOFFICE integration for editing documents; ONLY available
        with FormKiQ Enterprise
      operationId: OnlyOfficeDocumentEdit
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnlyOfficeDocumentEditRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnlyOfficeDocumentResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Edit onlyoffice document
      tags:
      - Onlyoffice
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/onlyOfficeLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /onlyoffice/new:
    post:
      description: Provide ONLYOFFICE integration for the creation of new documents;
        ONLY available with FormKiQ Enterprise
      operationId: OnlyOfficeDocumentNew
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnlyOfficeDocumentNewRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnlyOfficeDocumentResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Create onlyoffice document
      tags:
      - Onlyoffice
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/onlyOfficeLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /onlyoffice/{documentId}/save:
    post:
      description: Save an updated document for ONLYOFFICE integration. ONLY available
        with FormKiQ Enterprise
      operationId: OnlyOfficeDocumentSave
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnlyOfficeDocumentSaveResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      summary: Save onlyoffice document
      tags:
      - Onlyoffice
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/onlyOfficeLambdaApi200'
      x-accepts:
      - application/json
  /indices/{indexType}/move:
    post:
      description: Perform an Folder Index Move
      operationId: IndexFolderMove
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Index Type
        explode: false
        in: path
        name: indexType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexFolderMoveRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexFolderMoveResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      tags:
      - Custom Index
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /indices/{indexType}/{indexKey}:
    delete:
      description: Perform a delete on the Folder Index
      operationId: DeleteIndex
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Index Key Identifier
        explode: false
        in: path
        name: indexKey
        required: true
        schema:
          type: string
        style: simple
      - description: Index Type
        explode: false
        in: path
        name: indexType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteIndicesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      tags:
      - Custom Index
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /indices/search:
    post:
      description: Perform a search on a index; this is currently available for both
        folder and tag indices
      operationId: IndexSearch
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Previous page of results token
        explode: true
        in: query
        name: previous
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexSearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexSearchResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      tags:
      - Custom Index
      - Tag Index
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /esignature/docusign/{documentId}/envelopes:
    post:
      description: DocuSign create Docusign Envelope request; ONLY available with
        FormKiQ Enterprise
      operationId: AddDocusignEnvelopes
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocusignEnvelopesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDocusignEnvelopesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Create Docusign Envelope request
      tags:
      - E-Signature
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/esignatureLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /esignature/docusign/{documentId}/envelopes/{envelopeId}/views/recipient:
    post:
      description: DocuSign create Docusign Recipient View request; ONLY available
        with FormKiQ Enterprise
      operationId: AddDocusignRecipientView
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      - description: Docusign Envelope Id
        explode: false
        in: path
        name: envelopeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocusignRecipientViewRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDocusignRecipientViewResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Create Docusign Recipient View request
      tags:
      - E-Signature
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/esignatureLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /esignature/docusign/events:
    post:
      description: DocuSign callback URL handler; ONLY available with FormKiQ Enterprise
      operationId: AddEsignatureDocusignEvents
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      summary: Add E-signature event
      tags:
      - E-Signature
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/esignatureLambdaApi200'
      x-accepts:
      - application/json
  /groups:
    get:
      description: Returns the list of user groups
      operationId: GetGroups
      parameters:
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get list of user group(s)
      tags:
      - User Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Add a new group
      operationId: AddGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add a group
      tags:
      - User Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /groups/{groupName}:
    delete:
      description: Delete Group
      operationId: DeleteGroup
      parameters:
      - description: Group Name
        explode: false
        in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete Group
      tags:
      - User Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Returns a user group
      operationId: GetGroup
      parameters:
      - description: Group Name
        explode: false
        in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get a user group
      tags:
      - User Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /groups/{groupName}/users:
    get:
      description: Returns the list of users in a group
      operationId: GetUsersInGroup
      parameters:
      - description: Group Name
        explode: false
        in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersInGroupResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get users in a group
      tags:
      - User Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Adds a user to a group
      operationId: AddUserToGroup
      parameters:
      - description: Group Name
        explode: false
        in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add User to a group
      tags:
      - User Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /groups/{groupName}/users/{username}:
    delete:
      description: Remove Username From Group
      operationId: RemoveUsernameFromGroup
      parameters:
      - description: Group Name
        explode: false
        in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Remove Username From Group
      tags:
      - User Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /users:
    get:
      description: Returns the list of users
      operationId: GetUsers
      parameters:
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get list of user(s)
      tags:
      - User Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Adds a user
      operationId: AddUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add User
      tags:
      - User Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{username}:
    delete:
      description: Delete Username
      operationId: DeleteUsername
      parameters:
      - description: Username
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete Username
      tags:
      - User Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Returns a user
      operationId: GetUser
      parameters:
      - description: Username
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get a user
      tags:
      - User Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /users/{username}/groups:
    get:
      description: Returns a list of group user belongs to
      operationId: GetListOfUserGroups
      parameters:
      - description: Username
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserGroupsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Returns a list of group user belongs to
      tags:
      - User Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /users/{username}/{userOperation}:
    put:
      description: "Set User Operation (disable, enable, reset-password)"
      operationId: SetUserOperation
      parameters:
      - description: Username
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: Username Operation
        explode: false
        in: path
        name: userOperation
        required: true
        schema:
          enum:
          - DISABLE
          - ENABLE
          - RESET_PASSWORD
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Set User Operation
      tags:
      - User Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /cases:
    get:
      description: Returns a list of the Cases; ONLY available with FormKiQ Enterprise
      operationId: GetCases
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCasesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Case listing
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Adds new case; ONLY available with FormKiQ Enterprise
      operationId: AddCase
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCaseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCaseResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add New Case
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /cases/{caseId}:
    delete:
      description: Delete Case
      operationId: DeleteCase
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCaseResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete Case
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Returns a Case; ONLY available with FormKiQ Enterprise
      operationId: GetCase
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCaseResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Case details
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
    patch:
      description: Updates existing case; ONLY available with FormKiQ Enterprise
      operationId: UpdateCase
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCaseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCaseResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Update existing Case
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /cases/{caseId}/documents:
    get:
      description: Returns documents in a Case; ONLY available with FormKiQ Enterprise
      operationId: GetCaseDocuments
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCaseDocumentsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get list of document in a case
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
  /cases/{caseId}/documents/{documentId}:
    delete:
      description: Delete Document from Case
      operationId: DeleteCaseDocument
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCaseDocumentResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete Document from Case
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
  /cases/{caseId}/tasks/{taskId}:
    delete:
      description: Delete Task
      operationId: DeleteTask
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Task Identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCaseTaskResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete Task
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Returns a Task in Case; ONLY available with FormKiQ Enterprise
      operationId: GetCaseTask
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Task Identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCaseTaskResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get task in a case
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
    patch:
      description: Updates existing task; ONLY available with FormKiQ Enterprise
      operationId: UpdateTask
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Task Identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTaskResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Update existing Task
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /cases/{caseId}/tasks/{taskId}/documents:
    get:
      description: Returns a list documents in a Case; ONLY available with FormKiQ
        Enterprise
      operationId: GetTaskDocuments
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Task Identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCaseDocumentsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get list of document in a task
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
  /cases/{caseId}/tasks/{taskId}/documents/{documentId}:
    delete:
      description: Delete Document from Task
      operationId: DeleteTaskDocument
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Task Identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCaseTaskDocumentResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete Document from Task
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
  /cases/{caseId}/nigos/{nigoId}:
    delete:
      description: Delete Nigo
      operationId: DeleteNigo
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Nigo Identifier
        explode: false
        in: path
        name: nigoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCaseNigoResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete Nigo
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Returns a Nigo in Case; ONLY available with FormKiQ Enterprise
      operationId: GetCaseNigo
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Nigo Identifier
        explode: false
        in: path
        name: nigoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCaseNigoResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get nigo in a case
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
    patch:
      description: Updates existing nigo; ONLY available with FormKiQ Enterprise
      operationId: UpdateNigo
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Nigo Identifier
        explode: false
        in: path
        name: nigoId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNigoRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNigoResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Update existing Nigo
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /cases/{caseId}/nigos/{nigoId}/documents:
    get:
      description: Returns a list documents in a Case; ONLY available with FormKiQ
        Enterprise
      operationId: GetNigoDocuments
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Nigo Identifier
        explode: false
        in: path
        name: nigoId
        required: true
        schema:
          type: string
        style: simple
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCaseDocumentsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get list of document in a task
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
  /cases/{caseId}/nigos/{nigoId}/documents/{documentId}:
    delete:
      description: Delete Document from Nigo
      operationId: DeleteNigoDocument
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Nigo Identifier
        explode: false
        in: path
        name: nigoId
        required: true
        schema:
          type: string
        style: simple
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCaseNigoDocumentResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete Document from Nigo
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
  /cases/{caseId}/tasks:
    get:
      description: Returns a Case; ONLY available with FormKiQ Enterprise
      operationId: GetCaseTasks
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCaseTasksResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get list of tasks in a case
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Adds new task; ONLY available with FormKiQ Enterprise
      operationId: AddTask
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTaskRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTaskResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add New Task
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /cases/{caseId}/nigos:
    get:
      description: Returns a Nigos of Case; ONLY available with FormKiQ Enterprise
      operationId: GetCaseNigos
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCaseNigosResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get list of Nigos in a case
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Adds new nigo; ONLY available with FormKiQ Enterprise
      operationId: AddNigo
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Case Identifier
        explode: false
        in: path
        name: caseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNigoRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNigoResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add New Nigo
      tags:
      - Case Management
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200'
      x-content-type: application/json
      x-accepts:
      - application/json
  /mappings:
    get:
      description: Returns a list of mappings; ONLY available with FormKiQ Enterprise
      operationId: GetMappings
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMappingsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Mappings
      tags:
      - Mappings
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Creates a new mapping; ONLY available with FormKiQ Enterprise
      operationId: AddMapping
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddMappingResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Add New Mapping
      tags:
      - Mappings
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /mappings/{mappingId}:
    delete:
      description: Delete Mapping; ONLY available with FormKiQ Enterprise
      operationId: DeleteMapping
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Mapping Identifier
        explode: false
        in: path
        name: mappingId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete Mapping
      tags:
      - Mappings
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Get a mapping; ONLY available with FormKiQ Enterprise
      operationId: GetMapping
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Mapping Identifier
        explode: false
        in: path
        name: mappingId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMappingResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Mapping
      tags:
      - Mappings
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    put:
      description: Sets an mapping; ONLY available with FormKiQ Enterprise
      operationId: SetMapping
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Mapping Identifier
        explode: false
        in: path
        name: mappingId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetResponse'
          description: 200 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Set Mapping
      tags:
      - Mappings
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /rulesets:
    get:
      description: Returns a list of rule sets; ONLY available with FormKiQ Enterprise
      operationId: GetRulesets
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRulesetsResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Rulesets
      tags:
      - Rulesets
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Creates a new ruleset; ONLY available with FormKiQ Enterprise
      operationId: AddRuleset
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRulesetRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddRulesetResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Add New Ruleset
      tags:
      - Rulesets
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /rulesets/{rulesetId}:
    delete:
      description: Delete Ruleset; ONLY available with FormKiQ Enterprise
      operationId: DeleteRuleset
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Ruleset Identifier
        explode: false
        in: path
        name: rulesetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRulesetResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete Ruleset
      tags:
      - Rulesets
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Get a rule sets; ONLY available with FormKiQ Enterprise
      operationId: GetRuleset
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Ruleset Identifier
        explode: false
        in: path
        name: rulesetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRulesetResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Ruleset
      tags:
      - Rulesets
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    patch:
      description: Updates an existing ruleset; ONLY available with FormKiQ Enterprise
      operationId: UpdateRuleset
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Ruleset Identifier
        explode: false
        in: path
        name: rulesetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRulesetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRulesetResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Update Ruleset
      tags:
      - Rulesets
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /rulesets/{rulesetId}/rules:
    get:
      description: Returns a list of rules in a ruleset; ONLY available with FormKiQ
        Enterprise
      operationId: GetRules
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Ruleset Identifier
        explode: false
        in: path
        name: rulesetId
        required: true
        schema:
          type: string
        style: simple
      - description: Next page of results token
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Limit Results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRulesResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Rules
      tags:
      - Rulesets
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    post:
      description: Creates a new rule; ONLY available with FormKiQ Enterprise
      operationId: AddRule
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Ruleset Identifier
        explode: false
        in: path
        name: rulesetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRuleRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddRuleResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Add New Rule
      tags:
      - Rulesets
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /rulesets/{rulesetId}/rules/{ruleId}:
    delete:
      description: Delete Rule; ONLY available with FormKiQ Enterprise
      operationId: DeleteRule
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Ruleset Identifier
        explode: false
        in: path
        name: rulesetId
        required: true
        schema:
          type: string
        style: simple
      - description: Rule Identifier
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRuleResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete Rule
      tags:
      - Rulesets
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: Returns a rule in a ruleset; ONLY available with FormKiQ Enterprise
      operationId: GetRule
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Ruleset Identifier
        explode: false
        in: path
        name: rulesetId
        required: true
        schema:
          type: string
        style: simple
      - description: Rule Identifier
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRuleResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Get Rule
      tags:
      - Rulesets
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    patch:
      description: Update Rule; ONLY available with FormKiQ Enterprise
      operationId: UpdateRule
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Ruleset Identifier
        explode: false
        in: path
        name: rulesetId
        required: true
        schema:
          type: string
        style: simple
      - description: Rule Identifier
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRuleResponse'
          description: 200 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Update Rule
      tags:
      - Rulesets
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /objects/examine/pdf:
    get:
      description: "Get Signed URL for PDF Object Upload of a document to be examined\
        \ by calling GET /objects/examine/{id}/pdf"
      operationId: GetExaminePdfUrl
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExaminePdfUrlResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add Examine Pdf
      tags:
      - Examine Objects
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/ocrObjectsLambdaApi200'
      x-accepts:
      - application/json
  /objects/examine/{id}/pdf:
    get:
      description: |-
        Get PDF details

        File must have been uploaded previously using the GET /objects/examine/pdf API.
      operationId: GetExaminePdf
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExaminePdfResponse'
          description: 201 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Add Examine Pdf
      tags:
      - Examine Objects
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/ocrObjectsLambdaApi200'
      x-accepts:
      - application/json
  /publications/{documentId}:
    delete:
      description: "Delete a published document's contents. Certain content types,\
        \ text/*, application/json, and application/x-www-form-urlencoded. return\
        \ the  \"content\" field, while all other content types return a 'contentUrl'\
        \ for retrieving the content."
      operationId: DeletePublishedDocumentContent
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: 200 OK
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
      security:
      - ApiAuthorization: []
      summary: Delete published document's contents
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
    get:
      description: "Get a published document's contents. Certain content types, text/*,\
        \ application/json, and application/x-www-form-urlencoded. return the  \"\
        content\" field, while all other content types return a 'contentUrl' for retrieving\
        \ the content."
      operationId: GetPublishedDocumentContent
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "307":
          description: Temporary Redirect
          headers:
            Location:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - ApiAuthorization: []
      summary: Get published document's contents
      tags:
      - Documents
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi200'
      x-accepts:
      - application/json
  /documents/{documentId}/generate:
    post:
      description: |-
        Generates a new document using a specified template file and data sources. This operation allows users to merge data from multiple documents into a template to create a new document in the desired output format (e.g., DOCX).

        By Default data source must include a `data` object, which contains key-value pairs that will be merged into the template. The value can be any valid JSON object. { "data":{}}. The data path can be adjusted via the "dataRoot" field.

        ; ONLY available with FormKiQ Enterprise
      operationId: AddDocumentGenerate
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocumentGenerateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDocumentGenerateResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Add Document Generate
      tags:
      - Document Generation
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/documentGenerationLambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /integrations/google/drive/documents/{documentId}/export:
    post:
      description: Exports a Google Document; ONLY available with FormKiQ Enterprise
      operationId: AddGoogleDocumentExport
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGoogleDocumentExportRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddGoogleDocumentExportResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Add Google Document Export
      tags:
      - Google Integration
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/googleLambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
  /reindex/documents/{documentId}:
    post:
      description: |-
        The API allows for the reindexing of a document's metadata determined by the target.

        ATTRIBUTE target will regenerate the composite keys for a document based on the Classification / SiteSchema
      operationId: AddReindexDocument
      parameters:
      - description: Site Identifier
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: Document Identifier
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddReindexDocumentRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: 201 CREATED
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/AccessControlAllowOrigin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/AccessControlAllowMethods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/AccessControlAllowHeaders'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorsResponse'
          description: 400 OK
      security:
      - ApiAuthorization: []
      summary: Reindex metadata on a document
      tags:
      - Reindex
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  headers:
    AccessControlAllowOrigin:
      explode: false
      schema:
        type: string
      style: simple
    AccessControlAllowMethods:
      explode: false
      schema:
        type: string
      style: simple
    AccessControlAllowHeaders:
      explode: false
      schema:
        type: string
      style: simple
    Location:
      explode: false
      schema:
        type: string
      style: simple
  parameters:
    usernamePath:
      description: Username
      explode: false
      in: path
      name: username
      required: true
      schema:
        type: string
      style: simple
    usernameOperationPath:
      description: Username Operation
      explode: false
      in: path
      name: userOperation
      required: true
      schema:
        enum:
        - DISABLE
        - ENABLE
        - RESET_PASSWORD
        type: string
      style: simple
    groupNamePath:
      description: Group Name
      explode: false
      in: path
      name: groupName
      required: true
      schema:
        type: string
      style: simple
    versionKeyPath:
      description: Version Key (version key required URL encoding)
      explode: false
      in: path
      name: versionKey
      required: true
      schema:
        type: string
      style: simple
    versionParam:
      description: Version
      explode: true
      in: query
      name: version
      required: false
      schema:
        type: string
      style: form
    versionKeyParam:
      description: Version Key (version key required URL encoding)
      explode: true
      in: query
      name: versionKey
      required: false
      schema:
        type: string
      style: form
    webhooksParam:
      description: Web Hook Param
      explode: false
      in: path
      name: webhooks+
      required: true
      schema:
        type: string
      style: simple
    webhookIdParam:
      description: Web Hook Param
      explode: false
      in: path
      name: webhookId
      required: true
      schema:
        type: string
      style: simple
    keyParam:
      description: Key Identifier
      explode: false
      in: path
      name: key
      required: true
      schema:
        type: string
      style: simple
    shareKey:
      description: Share Identifier
      explode: false
      in: path
      name: shareKey
      required: true
      schema:
        type: string
      style: simple
    shareKeyParam:
      description: Share Identifier
      explode: true
      in: query
      name: shareKey
      required: false
      schema:
        type: string
      style: form
    siteIdParam:
      description: Site Identifier
      explode: true
      in: query
      name: siteId
      required: false
      schema:
        type: string
      style: form
    policyItemIdPathParam:
      description: Policy Item Identifier
      explode: false
      in: path
      name: policyItemId
      required: true
      schema:
        type: string
      style: simple
    siteIdPathParam:
      description: Site Identifier
      explode: false
      in: path
      name: siteId
      required: true
      schema:
        type: string
      style: simple
    idParam:
      description: Identifier
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    caseIdParam:
      description: Case Identifier
      explode: false
      in: path
      name: caseId
      required: true
      schema:
        type: string
      style: simple
    taskIdParam:
      description: Task Identifier
      explode: false
      in: path
      name: taskId
      required: true
      schema:
        type: string
      style: simple
    nigoIdParam:
      description: Nigo Identifier
      explode: false
      in: path
      name: nigoId
      required: true
      schema:
        type: string
      style: simple
    documentSearchDeleted:
      description: Fetch soft deleted documents
      explode: true
      in: query
      name: deleted
      required: false
      schema:
        type: boolean
      style: form
    wsParam:
      description: Whether to enable WebSocket real-time communication with the request
      explode: true
      in: query
      name: ws
      required: false
      schema:
        type: string
      style: form
    groupParam:
      description: Group Identifier
      explode: true
      in: query
      name: group
      required: false
      schema:
        type: string
      style: form
    providerParam:
      description: Provider Identifier
      explode: true
      in: query
      name: provider
      required: true
      schema:
        type: string
      style: form
    statusParam:
      description: Filters Status
      explode: true
      in: query
      name: status
      required: false
      schema:
        enum:
        - ACTIVE
        - INACTIVE
        type: string
      style: form
    ocrOutputTypeParam:
      description: Output Format Type
      explode: true
      in: query
      name: outputType
      required: false
      schema:
        enum:
        - TEXT
        - KEY_VALUE
        - CONTENT_URL
        type: string
      style: form
    limitParam:
      description: Limit Results
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: "10"
        type: string
      style: form
    nextParam:
      description: Next page of results token
      explode: true
      in: query
      name: next
      required: false
      schema:
        type: string
      style: form
    apiKeyParam:
      description: API Key
      explode: false
      in: path
      name: apiKey
      required: true
      schema:
        type: string
      style: simple
    folderIdParam:
      description: Folder Identifier
      explode: false
      in: path
      name: folderId
      required: true
      schema:
        type: string
      style: simple
    checksumParam:
      description: Checksum value
      explode: true
      in: query
      name: checksum
      required: false
      schema:
        type: string
      style: form
    checksumTypeParam:
      description: Checksum Type
      explode: true
      in: query
      name: checksumType
      required: false
      schema:
        enum:
        - SHA1
        - SHA256
        type: string
      style: form
    classificationIdParam:
      description: Classification Identifier
      explode: false
      in: path
      name: classificationId
      required: true
      schema:
        type: string
      style: simple
    documentIdParam:
      description: Document Identifier
      explode: false
      in: path
      name: documentId
      required: true
      schema:
        type: string
      style: simple
    docusignEnvelopeIdParam:
      description: Docusign Envelope Id
      explode: false
      in: path
      name: envelopeId
      required: true
      schema:
        type: string
      style: simple
    mappingIdParam:
      description: Mapping Identifier
      explode: false
      in: path
      name: mappingId
      required: true
      schema:
        type: string
      style: simple
    rulesetIdParam:
      description: Ruleset Identifier
      explode: false
      in: path
      name: rulesetId
      required: true
      schema:
        type: string
      style: simple
    ruleIdParam:
      description: Rule Identifier
      explode: false
      in: path
      name: ruleId
      required: true
      schema:
        type: string
      style: simple
    permissionKeyParam:
      description: Permission Identifier
      explode: false
      in: path
      name: permissionKey
      required: true
      schema:
        type: string
      style: simple
    queueIdParam:
      description: Queue Id
      explode: false
      in: path
      name: queueId
      required: true
      schema:
        type: string
      style: simple
    workflowIdParam:
      description: Workflow Identifier
      explode: false
      in: path
      name: workflowId
      required: true
      schema:
        type: string
      style: simple
    attributeKeyParam:
      description: Attribute Key
      explode: false
      in: path
      name: attributeKey
      required: true
      schema:
        type: string
      style: simple
    attributeValueParam:
      description: Attribute Value
      explode: false
      in: path
      name: attributeValue
      required: true
      schema:
        type: string
      style: simple
    tagkeyParam:
      description: Tag Key
      explode: false
      in: path
      name: tagKey
      required: true
      schema:
        type: string
      style: simple
    tagvalueParam:
      description: Tag Key Value
      explode: false
      in: path
      name: tagValue
      required: true
      schema:
        type: string
      style: simple
    contentLengthParam:
      description: Indicates the size of the entity-body
      explode: true
      in: query
      name: contentLength
      required: false
      schema:
        type: integer
      style: form
    durationParam:
      description: Indicates the number of hours request is valid for
      explode: true
      in: query
      name: duration
      required: false
      schema:
        type: integer
      style: form
    contentUrlParam:
      description: "Whether to return a \"contentUrl\", set value to 'true' (deprecated)"
      explode: true
      in: query
      name: contentUrl
      required: false
      schema:
        type: string
      style: form
    textParam:
      description: "Returns raw 'text' of OCR content. e.g. AWS Textract returns JSON,\
        \ setting parameter to 'true' converts JSON to Text (deprecated)"
      explode: true
      in: query
      name: text
      required: false
      schema:
        type: string
      style: form
    indexKeyQueryParam:
      description: Index Key Identifier
      explode: true
      in: query
      name: indexKey
      required: false
      schema:
        type: string
      style: form
    pathQueryParam:
      description: Path query parameter (must be URL Encoded)
      explode: true
      in: query
      name: path
      required: false
      schema:
        type: string
      style: form
    indexKeyParam:
      description: Index Key Identifier
      explode: false
      in: path
      name: indexKey
      required: true
      schema:
        type: string
      style: simple
    indexTypeParam:
      description: Index Type
      explode: false
      in: path
      name: indexType
      required: true
      schema:
        type: string
      style: simple
  responses:
    "201CorsAddResponse":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddResponse'
      description: 200 OK
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/AccessControlAllowOrigin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/AccessControlAllowMethods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/AccessControlAllowHeaders'
    "200CorsSetResponse":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SetResponse'
      description: 200 OK
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/AccessControlAllowOrigin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/AccessControlAllowMethods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/AccessControlAllowHeaders'
    "200CorsDeleteResponse":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteResponse'
      description: 200 OK
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/AccessControlAllowOrigin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/AccessControlAllowMethods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/AccessControlAllowHeaders'
    "200Cors":
      content: {}
      description: 200 OK
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/AccessControlAllowOrigin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/AccessControlAllowMethods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/AccessControlAllowHeaders'
  schemas:
    ValidationErrorsResponse:
      example:
        errors:
        - error: error
          key: key
        - error: error
          key: key
      properties:
        errors:
          description: List of errors
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      type: object
    ValidationError:
      example:
        error: error
        key: key
      properties:
        key:
          description: Error Key
          type: string
        error:
          description: Error Message
          type: string
      type: object
    IndexFolderMoveRequest:
      example:
        source: source
        target: target
      properties:
        source:
          description: Source path
          type: string
        target:
          description: Target path
          type: string
      type: object
    SetDocumentTagKeyRequest:
      example:
        values:
        - values
        - values
        value: value
      properties:
        value:
          description: Tag value
          type: string
        values:
          description: Tag values
          items:
            type: string
          type: array
      type: object
    DeleteIndicesResponse:
      example:
        message: message
      properties:
        message:
          description: response message
          type: string
      type: object
    UpdateMatchingDocumentTagsResponse:
      example:
        message: message
      properties:
        message:
          description: response message
          type: string
      type: object
    IndexFolderMoveResponse:
      example:
        message: message
      properties:
        message:
          description: Folder move message
          type: string
      type: object
    IndexSearchRequest:
      example:
        indexType: indexType
      properties:
        indexType:
          description: The name of the index to search
          type: string
      type: object
    IndexSearchResponse:
      example:
        next: next
        previous: previous
        values:
        - value: value
        - value: value
      properties:
        next:
          description: Next page of results token
          type: string
        previous:
          description: Previous page of results token
          type: string
        values:
          description: List of search results
          items:
            $ref: '#/components/schemas/IndexSearch'
          type: array
      type: object
    IndexSearch:
      example:
        value: value
      properties:
        value:
          description: value of index
          type: string
      type: object
    GetDocumentContentResponse:
      example:
        contentUrl: contentUrl
        contentType: contentType
        isBase64: true
        content: content
      properties:
        content:
          description: Document content
          type: string
        contentUrl:
          description: URL to retrieve document content
          type: string
        contentType:
          description: Document Content-Type
          type: string
        isBase64:
          description: Is the content Base64-encoded?
          type: boolean
      type: object
    GetDocumentAttributeVersionsResponse:
      example:
        next: next
        attributes:
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          insertedDate: insertedDate
          valueType: BOOLEAN
          booleanValue: true
          numberValue: 0.8008281904610115
          userId: userId
          key: key
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          insertedDate: insertedDate
          valueType: BOOLEAN
          booleanValue: true
          numberValue: 0.8008281904610115
          userId: userId
          key: key
      properties:
        next:
          description: Next page of results token
          type: string
        attributes:
          description: List of document attribute versions
          items:
            $ref: '#/components/schemas/DocumentAttribute'
          type: array
      type: object
    GetDocumentVersionsResponse:
      example:
        next: next
        documents:
        - insertedDate: insertedDate
          s3version: s3version
          checksum: checksum
          checksumType: SHA1
          contentLength: 0
          contentType: contentType
          userId: userId
          versionKey: versionKey
        - insertedDate: insertedDate
          s3version: s3version
          checksum: checksum
          checksumType: SHA1
          contentLength: 0
          contentType: contentType
          userId: userId
          versionKey: versionKey
      properties:
        next:
          description: Next page of results token
          type: string
        documents:
          description: List of document versions
          items:
            $ref: '#/components/schemas/DocumentVersion'
          type: array
      type: object
    AddFolderRequest:
      example:
        path: path
      properties:
        path:
          description: Path of Folder to create
          type: string
      type: object
    AddFolderResponse:
      example:
        indexKey: indexKey
        message: message
      properties:
        message:
          description: Response Message
          type: string
        indexKey:
          description: Folder Index Key
          type: string
      type: object
    GetQueuesResponse:
      example:
        next: next
        queues:
        - queueId: queueId
          name: name
        - queueId: queueId
          name: name
      properties:
        next:
          description: Next page of results token
          type: string
        queues:
          description: List of queues
          items:
            $ref: '#/components/schemas/Queue'
          type: array
      type: object
    Queue:
      example:
        queueId: queueId
        name: name
      properties:
        name:
          description: Name of Queue
          type: string
        queueId:
          description: Queue identifier
          type: string
      type: object
    GetWorkflowsResponse:
      example:
        next: next
        workflows:
        - insertedDate: insertedDate
          name: name
          inUse: true
          description: description
          userId: userId
          workflowId: workflowId
          status: ACTIVE
        - insertedDate: insertedDate
          name: name
          inUse: true
          description: description
          userId: userId
          workflowId: workflowId
          status: ACTIVE
      properties:
        next:
          description: Next page of results token
          type: string
        workflows:
          description: List of workflows
          items:
            $ref: '#/components/schemas/WorkflowSummary'
          type: array
      type: object
    GetQueueResponse:
      example:
        name: name
      properties:
        name:
          description: Queue name
          type: string
      type: object
    WorkflowStatus:
      description: Status of the Workflow
      enum:
      - ACTIVE
      - INACTIVE
      type: string
    GetWorkflowResponse:
      example:
        name: name
        inUse: true
        description: description
        steps:
        - stepId: stepId
          action:
            queueId: queueId
            metadata:
              key: metadata
            insertedDate: insertedDate
            type: ANTIVIRUS
            message: message
            userId: userId
            parameters:
              key: parameters
            workflowId: workflowId
            startDate: startDate
            completedDate: completedDate
            status: COMPLETE
            workflowStepId: workflowStepId
          decisions:
          - nextStepId: nextStepId
            type: APPROVE
          - nextStepId: nextStepId
            type: APPROVE
          queue:
            queueId: queueId
            approvalGroups:
            - approvalGroups
            - approvalGroups
        - stepId: stepId
          action:
            queueId: queueId
            metadata:
              key: metadata
            insertedDate: insertedDate
            type: ANTIVIRUS
            message: message
            userId: userId
            parameters:
              key: parameters
            workflowId: workflowId
            startDate: startDate
            completedDate: completedDate
            status: COMPLETE
            workflowStepId: workflowStepId
          decisions:
          - nextStepId: nextStepId
            type: APPROVE
          - nextStepId: nextStepId
            type: APPROVE
          queue:
            queueId: queueId
            approvalGroups:
            - approvalGroups
            - approvalGroups
        status: ACTIVE
      properties:
        name:
          description: Workflow name
          type: string
        description:
          description: Workflow description
          type: string
        inUse:
          description: Whether the Workflow is in use
          type: boolean
        status:
          $ref: '#/components/schemas/WorkflowStatus'
        steps:
          description: Workflow steps
          items:
            $ref: '#/components/schemas/WorkflowStep'
          type: array
      type: object
    WorkflowStep:
      example:
        stepId: stepId
        action:
          queueId: queueId
          metadata:
            key: metadata
          insertedDate: insertedDate
          type: ANTIVIRUS
          message: message
          userId: userId
          parameters:
            key: parameters
          workflowId: workflowId
          startDate: startDate
          completedDate: completedDate
          status: COMPLETE
          workflowStepId: workflowStepId
        decisions:
        - nextStepId: nextStepId
          type: APPROVE
        - nextStepId: nextStepId
          type: APPROVE
        queue:
          queueId: queueId
          approvalGroups:
          - approvalGroups
          - approvalGroups
      properties:
        stepId:
          description: Workflow Step Identifier
          type: string
        action:
          $ref: '#/components/schemas/DocumentAction'
        queue:
          $ref: '#/components/schemas/WorkflowQueue'
        decisions:
          description: Workflow Decisions
          items:
            $ref: '#/components/schemas/WorkflowStepDecision'
          type: array
      type: object
    WorkflowQueue:
      example:
        queueId: queueId
        approvalGroups:
        - approvalGroups
        - approvalGroups
      properties:
        queueId:
          description: Queue Id
          type: string
        approvalGroups:
          items:
            type: string
          type: array
      type: object
    WorkflowSummary:
      example:
        insertedDate: insertedDate
        name: name
        inUse: true
        description: description
        userId: userId
        workflowId: workflowId
        status: ACTIVE
      properties:
        name:
          description: Name of Workflow
          type: string
        workflowId:
          description: Workflow identifier
          type: string
        description:
          description: Description of Workflow
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        userId:
          description: User who created workflow
          type: string
        inUse:
          description: Whether the Workflow is in use
          type: boolean
        status:
          $ref: '#/components/schemas/WorkflowStatus'
      type: object
    GetUserSharesResponse:
      example:
        next: next
        shares:
        - path: path
          permissionType: GROUP
          permissions:
          - READ
          - READ
          siteId: siteId
          shareKey: shareKey
          type: FOLDER
          userId: userId
          group: group
        - path: path
          permissionType: GROUP
          permissions:
          - READ
          - READ
          siteId: siteId
          shareKey: shareKey
          type: FOLDER
          userId: userId
          group: group
      properties:
        next:
          description: Next page of results token
          type: string
        shares:
          description: List of user's shares
          items:
            $ref: '#/components/schemas/UserShare'
          type: array
      type: object
    UserSharePermission:
      description: User Share Permission
      enum:
      - READ
      - WRITE
      - DELETE
      type: string
    UserSharePermissionType:
      description: User Share Permission Type
      enum:
      - GROUP
      type: string
    UserShare:
      example:
        path: path
        permissionType: GROUP
        permissions:
        - READ
        - READ
        siteId: siteId
        shareKey: shareKey
        type: FOLDER
        userId: userId
        group: group
      properties:
        group:
          description: Name of Share Group
          type: string
        shareKey:
          description: Share Identifier
          type: string
        type:
          description: Type of Document
          enum:
          - FOLDER
          type: string
        permissions:
          description: List of share permissions
          items:
            $ref: '#/components/schemas/UserSharePermission'
          type: array
        siteId:
          description: Site Identifier
          type: string
        path:
          description: Path or Name of document
          type: string
        userId:
          description: User who created share
          type: string
        permissionType:
          $ref: '#/components/schemas/UserSharePermissionType'
      type: object
    GetDocumentAttributeResponse:
      example:
        attribute:
          numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          insertedDate: insertedDate
          valueType: BOOLEAN
          booleanValue: true
          numberValue: 0.8008281904610115
          userId: userId
          key: key
      properties:
        attribute:
          $ref: '#/components/schemas/DocumentAttribute'
      type: object
    GetDocumentAttributesResponse:
      example:
        next: next
        attributes:
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          insertedDate: insertedDate
          valueType: BOOLEAN
          booleanValue: true
          numberValue: 0.8008281904610115
          userId: userId
          key: key
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          insertedDate: insertedDate
          valueType: BOOLEAN
          booleanValue: true
          numberValue: 0.8008281904610115
          userId: userId
          key: key
      properties:
        next:
          description: Next page of results token
          type: string
        attributes:
          description: List of attributes
          items:
            $ref: '#/components/schemas/DocumentAttribute'
          type: array
      type: object
    GetDocumentTagsResponse:
      example:
        next: next
        previous: previous
        tags:
        - insertedDate: insertedDate
          values:
          - values
          - values
          documentId: documentId
          type: type
          userId: userId
          value: value
          key: key
        - insertedDate: insertedDate
          values:
          - values
          - values
          documentId: documentId
          type: type
          userId: userId
          value: value
          key: key
      properties:
        next:
          description: Next page of results token
          type: string
        previous:
          description: Previous page of results token
          type: string
        tags:
          description: List of tags
          items:
            $ref: '#/components/schemas/DocumentTag'
          type: array
      type: object
    SetDocumentVersionRequest:
      example:
        versionKey: versionKey
      properties:
        versionKey:
          description: "VersionKey returned by the GET /documents/{documentId}/versions\
            \ to revert to"
          type: string
      type: object
    SetDocumentVersionResponse:
      example:
        message: message
      properties:
        message:
          description: Response Message
          type: string
      type: object
    DocumentSearch:
      description: Document tag search criteria
      example:
        meta:
          path: path
          indexFilterBeginsWith: indexFilterBeginsWith
          indexType: folder
          folder: folder
          eq: eq
        attributes:
        - eqOr:
          - eqOr
          - eqOr
          beginsWith: beginsWith
          range:
            start: start
            end: end
            type: STRING
          eq: eq
          key: key
        - eqOr:
          - eqOr
          - eqOr
          beginsWith: beginsWith
          range:
            start: start
            end: end
            type: STRING
          eq: eq
          key: key
        text: text
        attribute:
          eqOr:
          - eqOr
          - eqOr
          beginsWith: beginsWith
          range:
            start: start
            end: end
            type: STRING
          eq: eq
          key: key
        tag:
          eqOr:
          - eqOr
          - eqOr
          beginsWith: beginsWith
          range:
            start: start
            end: end
            type: STRING
          eq: eq
          key: key
        tags:
        - beginsWith: beginsWith
          range:
            start: start
            end: end
            type: STRING
          eq: eq
          key: key
        - beginsWith: beginsWith
          range:
            start: start
            end: end
            type: STRING
          eq: eq
          key: key
        documentIds:
        - documentIds
        - documentIds
      properties:
        text:
          description: Full text search
          type: string
        meta:
          $ref: '#/components/schemas/DocumentSearchMeta'
        attribute:
          $ref: '#/components/schemas/DocumentSearchAttribute'
        attributes:
          description: List of Composite Key attributes to filter search results on
          items:
            $ref: '#/components/schemas/DocumentSearchAttribute'
          type: array
        tag:
          $ref: '#/components/schemas/DocumentSearchTag'
        tags:
          description: List of Composite Key tags to filter search results on
          items:
            $ref: '#/components/schemas/DocumentSearchTags'
          type: array
        documentIds:
          description: List of DocumentIds to filter search results on
          items:
            type: string
          type: array
      type: object
    DocumentId:
      example:
        siteId: siteId
        documentId: documentId
      properties:
        documentId:
          description: Document Identifier
          type: string
        siteId:
          description: Site Identifier
          type: string
      required:
      - documentId
      type: object
    AddWebhookResponse:
      example:
        webhookId: webhookId
        siteId: siteId
      properties:
        webhookId:
          type: string
        siteId:
          description: Site Identifier
          type: string
      type: object
    AddDocumentResponse:
      example:
        uploadUrl: uploadUrl
        documents:
        - uploadUrl: uploadUrl
          documentId: documentId
        - uploadUrl: uploadUrl
          documentId: documentId
        siteId: siteId
        documentId: documentId
      properties:
        documentId:
          description: Document Identifier
          type: string
        siteId:
          description: Site Identifier
          type: string
        uploadUrl:
          description: Url to upload document to
          type: string
        documents:
          description: List of child documents
          items:
            $ref: '#/components/schemas/AddChildDocumentResponse'
          type: array
      type: object
    AddChildDocumentResponse:
      example:
        uploadUrl: uploadUrl
        documentId: documentId
      properties:
        documentId:
          description: Document Identifier
          type: string
        uploadUrl:
          description: Url to upload document to
          type: string
      type: object
    GetDocumentUrlResponse:
      example:
        headers:
          key: "{}"
        documentId: documentId
        url: url
      properties:
        documentId:
          description: Document Identifier
          type: string
        url:
          description: Document content url
          type: string
        headers:
          additionalProperties:
            type: object
          type: object
      type: object
    GetDocumentResponse:
      example:
        metadata:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
        deepLinkPath: deepLinkPath
        lastModifiedDate: lastModifiedDate
        documents:
        - path: path
          versionId: versionId
          deepLinkPath: deepLinkPath
          insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          checksum: checksum
          documentId: documentId
          contentLength: 6
          contentType: contentType
          userId: userId
        - path: path
          versionId: versionId
          deepLinkPath: deepLinkPath
          insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          checksum: checksum
          documentId: documentId
          contentLength: 6
          contentType: contentType
          userId: userId
        belongsToDocumentId: belongsToDocumentId
        userId: userId
        path: path
        versionId: versionId
        insertedDate: insertedDate
        checksum: checksum
        checksumType: SHA1
        siteId: siteId
        documentId: documentId
        contentLength: 0
        contentType: contentType
      properties:
        siteId:
          description: Site Identifier
          type: string
        path:
          description: Path or Name of document
          type: string
        deepLinkPath:
          description: Path or Name of deep link
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        lastModifiedDate:
          description: Last Modified Timestamp
          type: string
        checksum:
          description: "Document checksum, changes when document file changes"
          type: string
        checksumType:
          $ref: '#/components/schemas/ChecksumType'
        documentId:
          description: Document Identifier
          type: string
        contentType:
          description: Document Content-Type
          type: string
        userId:
          description: User who added document
          type: string
        contentLength:
          description: Document size
          type: integer
        versionId:
          description: Document version
          type: string
        documents:
          description: List of child documents
          items:
            $ref: '#/components/schemas/ChildDocument'
          type: array
        belongsToDocumentId:
          description: Parent Document Identifier
          type: string
        metadata:
          description: List of document Metadata
          items:
            $ref: '#/components/schemas/DocumentMetadata'
          type: array
      required:
      - documentId
      type: object
    ChildDocument:
      example:
        path: path
        versionId: versionId
        deepLinkPath: deepLinkPath
        insertedDate: insertedDate
        lastModifiedDate: lastModifiedDate
        belongsToDocumentId: belongsToDocumentId
        checksum: checksum
        documentId: documentId
        contentLength: 6
        contentType: contentType
        userId: userId
      properties:
        path:
          description: Path or Name of document
          type: string
        deepLinkPath:
          description: Path or Name of deep link
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        lastModifiedDate:
          description: Last Modified Timestamp
          type: string
        checksum:
          description: "Document checksum, changes when document file changes"
          type: string
        documentId:
          description: Document Identifier
          type: string
        contentType:
          description: Document Content-Type
          type: string
        userId:
          description: User who added document
          type: string
        contentLength:
          description: Document size
          type: integer
        versionId:
          description: Document version
          type: string
        belongsToDocumentId:
          description: Parent Document Identifier
          type: string
      required:
      - documentId
      type: object
    DocumentsCompressRequest:
      example:
        documentIds:
        - documentIds
        - documentIds
      properties:
        documentIds:
          description: Documents to compress
          items:
            type: string
          type: array
      required:
      - documentIds
      type: object
    DocumentsCompressResponse:
      example:
        downloadUrl: downloadUrl
      properties:
        downloadUrl:
          description: Archive download URL
          type: string
      type: object
    DocumentFulltextRequest:
      description: Document full text search
      example:
        query:
          attributes:
          - eqOr:
            - stringValue: stringValue
              booleanValue: true
              numberValue: 6.027456183070403
            - stringValue: stringValue
              booleanValue: true
              numberValue: 6.027456183070403
            eq:
              stringValue: stringValue
              booleanValue: true
              numberValue: 6.027456183070403
            key: key
          - eqOr:
            - stringValue: stringValue
              booleanValue: true
              numberValue: 6.027456183070403
            - stringValue: stringValue
              booleanValue: true
              numberValue: 6.027456183070403
            eq:
              stringValue: stringValue
              booleanValue: true
              numberValue: 6.027456183070403
            key: key
          page: 0
          text: text
          tags:
          - eqOr:
            - eqOr
            - eqOr
            eq: eq
            key: key
          - eqOr:
            - eqOr
            - eqOr
            eq: eq
            key: key
        responseFields:
          attributes:
          - attributes
          - attributes
          tags:
          - tags
          - tags
      properties:
        query:
          $ref: '#/components/schemas/DocumentFulltextSearch'
        responseFields:
          $ref: '#/components/schemas/SearchResponseFields'
      required:
      - query
      type: object
    DocumentFulltextSearch:
      description: Document full text search criteria
      example:
        attributes:
        - eqOr:
          - stringValue: stringValue
            booleanValue: true
            numberValue: 6.027456183070403
          - stringValue: stringValue
            booleanValue: true
            numberValue: 6.027456183070403
          eq:
            stringValue: stringValue
            booleanValue: true
            numberValue: 6.027456183070403
          key: key
        - eqOr:
          - stringValue: stringValue
            booleanValue: true
            numberValue: 6.027456183070403
          - stringValue: stringValue
            booleanValue: true
            numberValue: 6.027456183070403
          eq:
            stringValue: stringValue
            booleanValue: true
            numberValue: 6.027456183070403
          key: key
        page: 0
        text: text
        tags:
        - eqOr:
          - eqOr
          - eqOr
          eq: eq
          key: key
        - eqOr:
          - eqOr
          - eqOr
          eq: eq
          key: key
      properties:
        page:
          description: Result page to return (starting at 1)
          type: integer
        text:
          description: Full text search
          type: string
        tags:
          description: List of search tags
          items:
            $ref: '#/components/schemas/DocumentFulltextTag'
          type: array
        attributes:
          description: List of search attributes
          items:
            $ref: '#/components/schemas/DocumentFulltextAttribute'
          type: array
      type: object
    DocumentFulltextAttribute:
      example:
        eqOr:
        - stringValue: stringValue
          booleanValue: true
          numberValue: 6.027456183070403
        - stringValue: stringValue
          booleanValue: true
          numberValue: 6.027456183070403
        eq:
          stringValue: stringValue
          booleanValue: true
          numberValue: 6.027456183070403
        key: key
      properties:
        eq:
          $ref: '#/components/schemas/DocumentFulltextAttributeEq'
        eqOr:
          description: Searches for ANY strings that eq
          items:
            $ref: '#/components/schemas/DocumentFulltextAttributeEq'
          type: array
        key:
          description: Tag key to search
          type: string
      required:
      - key
      type: object
    DocumentFulltextAttributeEq:
      example:
        stringValue: stringValue
        booleanValue: true
        numberValue: 6.027456183070403
      properties:
        stringValue:
          description: Search for string value
          type: string
        numberValue:
          description: Search for number value
          type: number
        booleanValue:
          description: Search for boolean value
          type: boolean
    DocumentFulltextTag:
      example:
        eqOr:
        - eqOr
        - eqOr
        eq: eq
        key: key
      properties:
        eq:
          description: Searches for strings that eq
          type: string
        eqOr:
          description: Searches for ANY strings that eq
          items:
            type: string
          type: array
        key:
          description: Tag key to search
          type: string
      required:
      - key
      type: object
    DocumentSearchRequest:
      description: Document search tag criteria
      example:
        query:
          meta:
            path: path
            indexFilterBeginsWith: indexFilterBeginsWith
            indexType: folder
            folder: folder
            eq: eq
          attributes:
          - eqOr:
            - eqOr
            - eqOr
            beginsWith: beginsWith
            range:
              start: start
              end: end
              type: STRING
            eq: eq
            key: key
          - eqOr:
            - eqOr
            - eqOr
            beginsWith: beginsWith
            range:
              start: start
              end: end
              type: STRING
            eq: eq
            key: key
          text: text
          attribute:
            eqOr:
            - eqOr
            - eqOr
            beginsWith: beginsWith
            range:
              start: start
              end: end
              type: STRING
            eq: eq
            key: key
          tag:
            eqOr:
            - eqOr
            - eqOr
            beginsWith: beginsWith
            range:
              start: start
              end: end
              type: STRING
            eq: eq
            key: key
          tags:
          - beginsWith: beginsWith
            range:
              start: start
              end: end
              type: STRING
            eq: eq
            key: key
          - beginsWith: beginsWith
            range:
              start: start
              end: end
              type: STRING
            eq: eq
            key: key
          documentIds:
          - documentIds
          - documentIds
        responseFields:
          attributes:
          - attributes
          - attributes
          tags:
          - tags
          - tags
      properties:
        query:
          $ref: '#/components/schemas/DocumentSearch'
        responseFields:
          $ref: '#/components/schemas/SearchResponseFields'
      required:
      - query
      type: object
    SearchResponseFields:
      example:
        attributes:
        - attributes
        - attributes
        tags:
        - tags
        - tags
      properties:
        attributes:
          items:
            type: string
          type: array
        tags:
          items:
            type: string
          type: array
    SearchResultDocumentAttribute:
      example:
        numberValues:
        - 1.4658129805029452
        - 1.4658129805029452
        stringValues:
        - stringValues
        - stringValues
        valueType: BOOLEAN
        booleanValue: true
      properties:
        stringValues:
          description: Attribute with string values
          items:
            type: string
          type: array
        numberValues:
          description: Attribute with number values
          items:
            type: number
          type: array
        booleanValue:
          description: Attribute with boolean value
          type: boolean
        valueType:
          $ref: '#/components/schemas/AttributeValueType'
    DocumentSearchMeta:
      example:
        path: path
        indexFilterBeginsWith: indexFilterBeginsWith
        indexType: folder
        folder: folder
        eq: eq
      properties:
        folder:
          description: Searches for a folder
          type: string
        path:
          description: Searches for a Path of document
          type: string
        eq:
          description: Searches for strings that eq
          type: string
        indexType:
          description: Searches in an index
          enum:
          - folder
          type: string
        indexFilterBeginsWith:
          description: Returns index records that begins with a particular substring
          type: string
      type: object
    DocumentSearchTag:
      example:
        eqOr:
        - eqOr
        - eqOr
        beginsWith: beginsWith
        range:
          start: start
          end: end
          type: STRING
        eq: eq
        key: key
      properties:
        beginsWith:
          description: Searches for strings that begin with
          type: string
        eq:
          description: Searches for strings that eq
          type: string
        eqOr:
          description: Searches for ANY strings that eq
          items:
            type: string
          type: array
        range:
          $ref: '#/components/schemas/DocumentSearchRange'
        key:
          description: Tag key to search
          type: string
      required:
      - key
      type: object
    SearchRangeDataType:
      default: STRING
      description: Search Range Data Type
      enum:
      - STRING
      - NUMBER
      type: string
    DocumentSearchRange:
      example:
        start: start
        end: end
        type: STRING
      properties:
        start:
          description: Start of range query
          type: string
        end:
          description: End of range query
          type: string
        type:
          $ref: '#/components/schemas/SearchRangeDataType'
      required:
      - end
      - start
      type: object
    DocumentSearchTags:
      example:
        beginsWith: beginsWith
        range:
          start: start
          end: end
          type: STRING
        eq: eq
        key: key
      properties:
        eq:
          description: Searches for strings that eq
          type: string
        beginsWith:
          description: Searches for strings that begin with
          type: string
        range:
          $ref: '#/components/schemas/DocumentSearchRange'
        key:
          description: Tag key to search
          type: string
      required:
      - key
      type: object
    DocumentSearchAttribute:
      example:
        eqOr:
        - eqOr
        - eqOr
        beginsWith: beginsWith
        range:
          start: start
          end: end
          type: STRING
        eq: eq
        key: key
      properties:
        eq:
          description: Searches for strings that eq
          type: string
        eqOr:
          description: Searches for ANY strings that eq
          items:
            type: string
          type: array
        beginsWith:
          description: Searches for strings that begin with
          type: string
        range:
          $ref: '#/components/schemas/DocumentSearchRange'
        key:
          description: Attribute key to search
          type: string
      required:
      - key
      type: object
    AddWebhookRequest:
      example:
        name: name
        ttl: ttl
        enabled: enabled
        tags:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
      properties:
        name:
          description: Name of webhook
          type: string
        ttl:
          description: Webhook time to live (expiry)
          type: string
        enabled:
          description: Is webhook enabled
          type: string
        tags:
          description: List of document tags
          items:
            $ref: '#/components/schemas/AddDocumentTag'
          type: array
      required:
      - name
      type: object
    AddDocumentUploadRequest:
      example:
        path: path
        deepLinkPath: deepLinkPath
        checksumType: SHA1
        checksum: checksum
        documentId: documentId
        attributes:
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          booleanValue: true
          numberValue: 0.8008281904610115
          key: key
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          booleanValue: true
          numberValue: 0.8008281904610115
          key: key
        contentType: contentType
        actions:
        - queueId: queueId
          type: ANTIVIRUS
          parameters:
            mappingId: mappingId
            characterMax: characterMax
            ocrEngine: TESSERACT
            ocrParseTypes: ocrParseTypes
            ocrOutputType: CSV
            addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
            ocrNumberOfPages: ocrNumberOfPages
            notificationType: email
            notificationToCc: notificationToCc
            notificationToBcc: notificationToBcc
            url: url
            tags: tags
            notificationSubject: notificationSubject
            engine: chatgpt
            notificationText: notificationText
            eventBusName: eventBusName
            notificationHtml: notificationHtml
        - queueId: queueId
          type: ANTIVIRUS
          parameters:
            mappingId: mappingId
            characterMax: characterMax
            ocrEngine: TESSERACT
            ocrParseTypes: ocrParseTypes
            ocrOutputType: CSV
            addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
            ocrNumberOfPages: ocrNumberOfPages
            notificationType: email
            notificationToCc: notificationToCc
            notificationToBcc: notificationToBcc
            url: url
            tags: tags
            notificationSubject: notificationSubject
            engine: chatgpt
            notificationText: notificationText
            eventBusName: eventBusName
            notificationHtml: notificationHtml
        tags:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
      properties:
        documentId:
          description: "optional Document Identifier, if skipped one will be assigned"
          type: string
        path:
          description: Path or Name of document
          type: string
        contentType:
          description: Document media type
          type: string
        deepLinkPath:
          description: Path or Name of deep link
          type: string
        checksumType:
          $ref: '#/components/schemas/ChecksumType'
        checksum:
          description: The checksum value to validate the file against
          type: string
        attributes:
          description: List of Attributes to add to document
          items:
            $ref: '#/components/schemas/AddDocumentAttribute'
          type: array
        tags:
          description: List of document tags
          items:
            $ref: '#/components/schemas/AddDocumentTag'
          type: array
        actions:
          description: List of Actions
          items:
            $ref: '#/components/schemas/AddAction'
          type: array
      type: object
    ChecksumType:
      description: The type of checksum to use for file validation
      enum:
      - SHA1
      - SHA256
      type: string
    AddDocumentRequest:
      example:
        metadata:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
        deepLinkPath: deepLinkPath
        documents:
        - path: path
          metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          checksumType: null
          checksum: checksum
          contentType: contentType
          isBase64: true
          content: content
          tags:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
        - path: path
          metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          checksumType: null
          checksum: checksum
          contentType: contentType
          isBase64: true
          content: content
          tags:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
        isBase64: true
        content: content
        tags:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
        path: path
        checksumType: SHA1
        checksum: checksum
        documentId: documentId
        attributes:
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          booleanValue: true
          numberValue: 0.8008281904610115
          key: key
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          booleanValue: true
          numberValue: 0.8008281904610115
          key: key
        contentType: contentType
        actions:
        - queueId: queueId
          type: ANTIVIRUS
          parameters:
            mappingId: mappingId
            characterMax: characterMax
            ocrEngine: TESSERACT
            ocrParseTypes: ocrParseTypes
            ocrOutputType: CSV
            addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
            ocrNumberOfPages: ocrNumberOfPages
            notificationType: email
            notificationToCc: notificationToCc
            notificationToBcc: notificationToBcc
            url: url
            tags: tags
            notificationSubject: notificationSubject
            engine: chatgpt
            notificationText: notificationText
            eventBusName: eventBusName
            notificationHtml: notificationHtml
        - queueId: queueId
          type: ANTIVIRUS
          parameters:
            mappingId: mappingId
            characterMax: characterMax
            ocrEngine: TESSERACT
            ocrParseTypes: ocrParseTypes
            ocrOutputType: CSV
            addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
            ocrNumberOfPages: ocrNumberOfPages
            notificationType: email
            notificationToCc: notificationToCc
            notificationToBcc: notificationToBcc
            url: url
            tags: tags
            notificationSubject: notificationSubject
            engine: chatgpt
            notificationText: notificationText
            eventBusName: eventBusName
            notificationHtml: notificationHtml
      properties:
        documentId:
          description: "optional Document Identifier (Version 4 UUID), if skipped\
            \ one will be assigned"
          type: string
        path:
          description: Path or Name of document
          type: string
        checksumType:
          $ref: '#/components/schemas/ChecksumType'
        checksum:
          description: The checksum value to validate the file against
          type: string
        deepLinkPath:
          description: Path or Name of deep link
          type: string
        contentType:
          description: Document media type
          type: string
        isBase64:
          description: Is the content Base64-encoded?
          type: boolean
        content:
          description: Document content
          type: string
        tags:
          description: List of document tags
          items:
            $ref: '#/components/schemas/AddDocumentTag'
          type: array
        metadata:
          description: List of document Metadata
          items:
            $ref: '#/components/schemas/AddDocumentMetadata'
          type: array
        actions:
          description: List of Actions
          items:
            $ref: '#/components/schemas/AddAction'
          type: array
        attributes:
          description: List of Attributes to add to document
          items:
            $ref: '#/components/schemas/AddDocumentAttribute'
          type: array
        documents:
          description: List of child documents
          items:
            $ref: '#/components/schemas/AddChildDocument'
          type: array
      required:
      - content
      type: object
    UpdateDocumentRequest:
      example:
        path: path
        metadata:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
        deepLinkPath: deepLinkPath
        documents:
        - path: path
          metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          checksumType: null
          checksum: checksum
          contentType: contentType
          isBase64: true
          content: content
          tags:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
        - path: path
          metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          checksumType: null
          checksum: checksum
          contentType: contentType
          isBase64: true
          content: content
          tags:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
        attributes:
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          booleanValue: true
          numberValue: 0.8008281904610115
          key: key
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          booleanValue: true
          numberValue: 0.8008281904610115
          key: key
        contentType: contentType
        isBase64: true
        actions:
        - queueId: queueId
          type: ANTIVIRUS
          parameters:
            mappingId: mappingId
            characterMax: characterMax
            ocrEngine: TESSERACT
            ocrParseTypes: ocrParseTypes
            ocrOutputType: CSV
            addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
            ocrNumberOfPages: ocrNumberOfPages
            notificationType: email
            notificationToCc: notificationToCc
            notificationToBcc: notificationToBcc
            url: url
            tags: tags
            notificationSubject: notificationSubject
            engine: chatgpt
            notificationText: notificationText
            eventBusName: eventBusName
            notificationHtml: notificationHtml
        - queueId: queueId
          type: ANTIVIRUS
          parameters:
            mappingId: mappingId
            characterMax: characterMax
            ocrEngine: TESSERACT
            ocrParseTypes: ocrParseTypes
            ocrOutputType: CSV
            addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
            ocrNumberOfPages: ocrNumberOfPages
            notificationType: email
            notificationToCc: notificationToCc
            notificationToBcc: notificationToBcc
            url: url
            tags: tags
            notificationSubject: notificationSubject
            engine: chatgpt
            notificationText: notificationText
            eventBusName: eventBusName
            notificationHtml: notificationHtml
        content: content
        tags:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
      properties:
        path:
          description: Path or Name of document
          type: string
        deepLinkPath:
          description: Path or Name of deep link
          type: string
        contentType:
          description: Document media type
          type: string
        isBase64:
          description: Is the content Base64-encoded?
          type: boolean
        content:
          description: Document content
          type: string
        tags:
          description: List of document tags
          items:
            $ref: '#/components/schemas/AddDocumentTag'
          type: array
        metadata:
          description: List of document Metadata
          items:
            $ref: '#/components/schemas/AddDocumentMetadata'
          type: array
        attributes:
          description: List of document attributes
          items:
            $ref: '#/components/schemas/AddDocumentAttribute'
          type: array
        actions:
          description: List of Actions
          items:
            $ref: '#/components/schemas/AddAction'
          type: array
        documents:
          description: List of child documents
          items:
            $ref: '#/components/schemas/AddChildDocument'
          type: array
      type: object
    AddFolderShareRequest:
      example:
        share:
          permissions:
          - READ
          - READ
          group: group
      properties:
        share:
          $ref: '#/components/schemas/AddShare'
      type: object
    AddShare:
      example:
        permissions:
        - READ
        - READ
        group: group
      properties:
        group:
          description: Share with Group
          type: string
        permissions:
          description: List of share permissions
          items:
            $ref: '#/components/schemas/UserSharePermission'
          type: array
      type: object
    SetDocumentRestoreResponse:
      example:
        message: message
      properties:
        message:
          description: Document Document restore message
          type: string
      type: object
    AddFolderShareResponse:
      example:
        shareKey: shareKey
        message: message
      properties:
        message:
          description: API Response message
          type: string
        shareKey:
          description: Share Identifier
          type: string
      type: object
    DeleteFolderResponse:
      example:
        message: message
      properties:
        message:
          description: API Response message
          type: string
      type: object
    DeleteShareResponse:
      example:
        message: message
      properties:
        message:
          description: API Response message
          type: string
      type: object
    MatchDocumentTag:
      description: Match Document Tag
      example:
        beginsWith: beginsWith
        eq: eq
        key: key
      properties:
        key:
          description: Tag key
          type: string
        beginsWith:
          description: Searches for strings that begin with
          type: string
        eq:
          description: Searches for strings that eq
          type: string
      required:
      - key
      type: object
    UpdateMatchingDocumentTagsRequest:
      description: Add/Update of multiple document tag(s) based on document(s) that
        have the matching tag.
      example:
        match:
          tag:
            beginsWith: beginsWith
            eq: eq
            key: key
        update:
          tags:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
      properties:
        match:
          $ref: '#/components/schemas/UpdateMatchingDocumentTagsRequest_match'
        update:
          $ref: '#/components/schemas/UpdateMatchingDocumentTagsRequest_update'
      required:
      - match
      - update
      type: object
    SetDocumentAttributeRequest:
      description: Set List of document attributes
      example:
        attribute:
          numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          booleanValue: true
          numberValue: 0.8008281904610115
      properties:
        attribute:
          $ref: '#/components/schemas/AddDocumentAttributeValue'
      type: object
    SetDocumentAttributesRequest:
      description: Set List of document attributes
      example:
        attributes:
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          booleanValue: true
          numberValue: 0.8008281904610115
          key: key
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          booleanValue: true
          numberValue: 0.8008281904610115
          key: key
      properties:
        attributes:
          description: List of document attributes
          items:
            $ref: '#/components/schemas/AddDocumentAttribute'
          type: array
      type: object
    AddDocumentAttributesRequest:
      description: Add List of document attributes
      example:
        attributes:
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          booleanValue: true
          numberValue: 0.8008281904610115
          key: key
        - numberValues:
          - 6.027456183070403
          - 6.027456183070403
          stringValue: stringValue
          stringValues:
          - stringValues
          - stringValues
          booleanValue: true
          numberValue: 0.8008281904610115
          key: key
      properties:
        attributes:
          description: List of document attributes
          items:
            $ref: '#/components/schemas/AddDocumentAttribute'
          type: array
      type: object
    AddDocumentTagsRequest:
      description: Add List of document tags
      example:
        tags:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
      properties:
        tags:
          description: List of document tags
          items:
            $ref: '#/components/schemas/AddDocumentTag'
          type: array
      type: object
    DocumentMetadata:
      description: Document Metadata (use either 'value' or 'values' not both)
      example:
        values:
        - values
        - values
        value: value
        key: key
      properties:
        key:
          description: Metadata key
          type: string
        value:
          description: Metadata value
          type: string
        values:
          description: Metadata values
          items:
            description: Metadata value
            type: string
          type: array
      type: object
    AddDocumentMetadata:
      description: Document Metadata (use either 'value' or 'values' not both)
      example:
        values:
        - values
        - values
        value: value
        key: key
      properties:
        key:
          description: Metadata key
          type: string
        value:
          description: Metadata value
          type: string
        values:
          description: Metadata values
          items:
            description: Metadata value
            type: string
          type: array
      required:
      - key
      type: object
    AddDocumentAttributeValue:
      description: Document Attribute Value
      example:
        numberValues:
        - 6.027456183070403
        - 6.027456183070403
        stringValue: stringValue
        stringValues:
        - stringValues
        - stringValues
        booleanValue: true
        numberValue: 0.8008281904610115
      properties:
        stringValue:
          description: Attribute with string value
          type: string
        stringValues:
          description: Attribute with string values
          items:
            type: string
          type: array
        numberValue:
          description: Attribute with number value
          type: number
        numberValues:
          description: Attribute with number values
          items:
            type: number
          type: array
        booleanValue:
          description: Attribute with boolean value
          type: boolean
      type: object
    AddDocumentAttribute:
      oneOf:
      - $ref: '#/components/schemas/AddDocumentAttributeStandard'
      - $ref: '#/components/schemas/AddDocumentAttributeClassification'
      - $ref: '#/components/schemas/AddDocumentAttributeRelationship'
    DocumentRelationshipType:
      description: Document Relationship Type
      enum:
      - PRIMARY
      - ATTACHMENT
      - APPENDIX
      - SUPPLEMENT
      - ASSOCIATED
      - RENDITION
      type: string
    AddDocumentAttributeRelationship:
      description: Document Relationship
      properties:
        documentId:
          description: Relationship To Document Identifier
          type: string
        relationship:
          $ref: '#/components/schemas/DocumentRelationshipType'
        inverseRelationship:
          $ref: '#/components/schemas/DocumentRelationshipType'
      required:
      - documentId
      - relationship
      type: object
    AddDocumentAttributeClassification:
      description: Document Classification
      properties:
        classificationId:
          description: Classification Identifier
          type: string
      required:
      - classificationId
      type: object
    AddDocumentAttributeStandard:
      description: Document Attribute
      example:
        numberValues:
        - 6.027456183070403
        - 6.027456183070403
        stringValue: stringValue
        stringValues:
        - stringValues
        - stringValues
        booleanValue: true
        numberValue: 0.8008281904610115
        key: key
      properties:
        key:
          description: Attribute key
          type: string
        stringValue:
          description: Attribute with string value
          type: string
        stringValues:
          description: Attribute with string values
          items:
            type: string
          type: array
        numberValue:
          description: Attribute with number value
          type: number
        numberValues:
          description: Attribute with number values
          items:
            type: number
          type: array
        booleanValue:
          description: Attribute with boolean value
          type: boolean
      required:
      - key
      type: object
    AddDocumentTag:
      description: List of Document Tags (use either 'value' or 'values' not both)
      example:
        values:
        - values
        - values
        value: value
        key: key
      properties:
        key:
          description: Tag key
          type: string
        value:
          description: Tag value
          type: string
        values:
          description: Tag values
          items:
            description: Tag value
            type: string
          type: array
      required:
      - key
      type: object
    AddChildDocument:
      description: List of related documents
      example:
        path: path
        metadata:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
        deepLinkPath: deepLinkPath
        checksumType: null
        checksum: checksum
        contentType: contentType
        isBase64: true
        content: content
        tags:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
      properties:
        path:
          description: Path or Name of document
          type: string
        deepLinkPath:
          description: Path or Name of deep link
          type: string
        contentType:
          description: Document Content-Type
          type: string
        checksumType:
          $ref: '#/components/schemas/ChecksumType'
        checksum:
          description: The checksum value to validate the file against
          type: string
        isBase64:
          description: Is the content Base64-encoded?
          type: boolean
        content:
          description: Document content
          type: string
        tags:
          description: List of document tags
          items:
            $ref: '#/components/schemas/AddDocumentTag'
          type: array
        metadata:
          description: List of document Metadata
          items:
            $ref: '#/components/schemas/AddDocumentMetadata'
          type: array
      required:
      - content
      type: object
    DocumentVersion:
      example:
        insertedDate: insertedDate
        s3version: s3version
        checksum: checksum
        checksumType: SHA1
        contentLength: 0
        contentType: contentType
        userId: userId
        versionKey: versionKey
      properties:
        insertedDate:
          description: Inserted Timestamp
          type: string
        checksum:
          description: "Document checksum, changes when document file changes"
          type: string
        checksumType:
          $ref: '#/components/schemas/ChecksumType'
        contentType:
          description: Document Content-Type
          type: string
        userId:
          description: User who added document
          type: string
        contentLength:
          description: Document size
          type: integer
        versionKey:
          description: Document Version Identifier
          type: string
        s3version:
          description: Document storage version
          type: string
      type: object
    DocumentAttribute:
      example:
        numberValues:
        - 6.027456183070403
        - 6.027456183070403
        stringValue: stringValue
        stringValues:
        - stringValues
        - stringValues
        insertedDate: insertedDate
        valueType: BOOLEAN
        booleanValue: true
        numberValue: 0.8008281904610115
        userId: userId
        key: key
      properties:
        key:
          description: Attribute key
          type: string
        stringValue:
          description: Attribute with string value
          type: string
        stringValues:
          description: Attribute with string values
          items:
            type: string
          type: array
        numberValue:
          description: Attribute with number value
          type: number
        numberValues:
          description: Attribute with number values
          items:
            type: number
          type: array
        booleanValue:
          description: Attribute with boolean value
          type: boolean
        insertedDate:
          description: Inserted Timestamp
          type: string
        userId:
          description: User who added attribute
          type: string
        valueType:
          $ref: '#/components/schemas/AttributeValueType'
      type: object
    DocumentTag:
      example:
        insertedDate: insertedDate
        values:
        - values
        - values
        documentId: documentId
        type: type
        userId: userId
        value: value
        key: key
      properties:
        insertedDate:
          description: Inserted Timestamp
          type: string
        documentId:
          description: Document Identifier
          type: string
        type:
          description: Tag type
          type: string
        userId:
          description: User who added document
          type: string
        value:
          description: Tag value
          type: string
        values:
          description: Tag values
          items:
            description: Tag value
            type: string
          type: array
        key:
          description: Tag key
          type: string
      type: object
    AddWebhookTagRequest:
      example:
        values:
        - values
        - values
        value: value
        key: key
      properties:
        value:
          description: Tag value
          type: string
        values:
          description: Tag values
          items:
            description: Tag value
            type: string
          type: array
        key:
          description: Tag key
          type: string
      type: object
    GetDocumentTagResponse:
      example:
        insertedDate: insertedDate
        values:
        - values
        - values
        documentId: documentId
        type: type
        userId: userId
        value: value
        key: key
      properties:
        insertedDate:
          description: Inserted Timestamp
          type: string
        documentId:
          description: Document Identifier
          type: string
        type:
          description: Tag type
          type: string
        userId:
          description: User who added document
          type: string
        value:
          description: Tag value
          type: string
        values:
          description: Tag values
          items:
            description: Tag value
            type: string
          type: array
        key:
          description: Tag key
          type: string
      type: object
    QueryFulltextRequest:
      description: OpenSearch search API request (https://opensearch.org/docs/latest/opensearch/rest-api/search/)
      example:
        query:
          match:
            title: Wind
      type: object
    QueryFulltextResponse:
      example:
        result:
          hits:
            hits:
            - _index: ""
              _id: ""
              _source:
                documentId: ""
                content: ""
      properties:
        result:
          type: object
      type: object
    DocumentFulltextResponse:
      example:
        documents:
        - path: path
          metadata:
            key: "{}"
          deepLinkPath: deepLinkPath
          insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          createdBy: createdBy
          siteId: siteId
          documentId: documentId
          contentLength: 0
          attributes:
            key:
              numberValues:
              - 6.027456183070403
              - 6.027456183070403
              stringValues:
              - stringValues
              - stringValues
              valueType: BOOLEAN
              booleanValue: true
          tags:
            key: "{}"
        - path: path
          metadata:
            key: "{}"
          deepLinkPath: deepLinkPath
          insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          createdBy: createdBy
          siteId: siteId
          documentId: documentId
          contentLength: 0
          attributes:
            key:
              numberValues:
              - 6.027456183070403
              - 6.027456183070403
              stringValues:
              - stringValues
              - stringValues
              valueType: BOOLEAN
              booleanValue: true
          tags:
            key: "{}"
      properties:
        documents:
          description: List of search result documents
          items:
            $ref: '#/components/schemas/FulltextSearchItem'
          type: array
      type: object
    FulltextSearchItem:
      example:
        path: path
        metadata:
          key: "{}"
        deepLinkPath: deepLinkPath
        insertedDate: insertedDate
        lastModifiedDate: lastModifiedDate
        createdBy: createdBy
        siteId: siteId
        documentId: documentId
        contentLength: 0
        attributes:
          key:
            numberValues:
            - 6.027456183070403
            - 6.027456183070403
            stringValues:
            - stringValues
            - stringValues
            valueType: BOOLEAN
            booleanValue: true
        tags:
          key: "{}"
      properties:
        siteId:
          description: Site Identifier
          type: string
        path:
          description: Path or Name of document
          type: string
        deepLinkPath:
          description: Path or Name of deep link
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        lastModifiedDate:
          description: Last Modified Timestamp
          type: string
        documentId:
          description: Document Identifier
          type: string
        contentLength:
          description: Document size
          type: integer
        createdBy:
          description: User who added document
          type: string
        tags:
          additionalProperties:
            type: object
          type: object
        metadata:
          additionalProperties:
            type: object
          type: object
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/FulltextAttribute'
          type: object
      type: object
    AttributeValueType:
      description: Attribute Value Type
      enum:
      - BOOLEAN
      - KEY_ONLY
      - NUMBER
      - STRING
      - PUBLICATION
      - CLASSIFICATION
      - COMPOSITE_STRING
      - RELATIONSHIPS
      type: string
    FulltextAttribute:
      example:
        numberValues:
        - 6.027456183070403
        - 6.027456183070403
        stringValues:
        - stringValues
        - stringValues
        valueType: BOOLEAN
        booleanValue: true
      properties:
        stringValues:
          description: Attribute with string values
          items:
            type: string
          type: array
        numberValues:
          description: Attribute with number values
          items:
            type: number
          type: array
        booleanValue:
          description: Attribute with boolean value
          type: boolean
        valueType:
          $ref: '#/components/schemas/AttributeValueType'
      type: object
    GetDocumentFulltextResponse:
      example:
        metadata:
          key: "{}"
        deepLinkPath: deepLinkPath
        lastModifiedDate: lastModifiedDate
        content: content
        tags:
          key: "{}"
        path: path
        insertedDate: insertedDate
        createdBy: createdBy
        siteId: siteId
        documentId: documentId
        contentLength: 0
        attributes:
          key:
            numberValues:
            - 6.027456183070403
            - 6.027456183070403
            stringValues:
            - stringValues
            - stringValues
            valueType: BOOLEAN
            booleanValue: true
        contentType: contentType
      properties:
        siteId:
          description: Site Identifier
          type: string
        content:
          description: Content of document
          type: string
        contentType:
          description: Document Content-Type
          type: string
        path:
          description: Path or Name of document
          type: string
        deepLinkPath:
          description: Path or Name of deep link
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        lastModifiedDate:
          description: Last Modified Timestamp
          type: string
        documentId:
          description: Document Identifier
          type: string
        createdBy:
          description: User who added document
          type: string
        contentLength:
          description: Document size
          type: integer
        tags:
          additionalProperties:
            type: object
          type: object
        metadata:
          additionalProperties:
            type: object
          type: object
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/FulltextAttribute'
          type: object
      type: object
    GetDocumentSyncResponse:
      example:
        next: next
        syncs:
        - service: TYPESENSE
          syncDate: syncDate
          type: METADATA
          message: message
          userId: userId
          status: COMPLETE
        - service: TYPESENSE
          syncDate: syncDate
          type: METADATA
          message: message
          userId: userId
          status: COMPLETE
      properties:
        next:
          description: Next page of results token
          type: string
        syncs:
          description: List of document syncs
          items:
            $ref: '#/components/schemas/GetDocumentSync'
          type: array
      type: object
    DocumentSyncService:
      description: Service of Document Sync
      enum:
      - TYPESENSE
      - OPENSEARCH
      type: string
    DocumentSyncStatus:
      description: Status of Document Sync
      enum:
      - COMPLETE
      - FAILED
      type: string
    DocumentSyncType:
      description: Type of Document Sync
      enum:
      - METADATA
      - TAG
      - CONTENT
      type: string
    GetDocumentSync:
      example:
        service: TYPESENSE
        syncDate: syncDate
        type: METADATA
        message: message
        userId: userId
        status: COMPLETE
      properties:
        service:
          $ref: '#/components/schemas/DocumentSyncService'
        status:
          $ref: '#/components/schemas/DocumentSyncStatus'
        type:
          $ref: '#/components/schemas/DocumentSyncType'
        syncDate:
          description: Timestamp of synchronization
          type: string
        userId:
          description: User who added document
          type: string
        message:
          description: Document sync message
          type: string
      type: object
    GetUserActivitesResponse:
      example:
        next: next
        userActivities:
        - insertedDate: insertedDate
          document:
            metadata:
            - values:
              - values
              - values
              value: value
              key: key
            - values:
              - values
              - values
              value: value
              key: key
            deepLinkPath: deepLinkPath
            lastModifiedDate: lastModifiedDate
            belongsToDocumentId: belongsToDocumentId
            userId: userId
            version: version
            versionKey: versionKey
            path: path
            insertedDate: insertedDate
            s3version: s3version
            checksum: checksum
            checksumType: SHA1
            siteId: siteId
            documentId: documentId
            contentLength: 0
            contentType: contentType
          changes:
            key:
              newValue: newValue
              oldValue: oldValue
          type: VIEW
          userId: userId
        - insertedDate: insertedDate
          document:
            metadata:
            - values:
              - values
              - values
              value: value
              key: key
            - values:
              - values
              - values
              value: value
              key: key
            deepLinkPath: deepLinkPath
            lastModifiedDate: lastModifiedDate
            belongsToDocumentId: belongsToDocumentId
            userId: userId
            version: version
            versionKey: versionKey
            path: path
            insertedDate: insertedDate
            s3version: s3version
            checksum: checksum
            checksumType: SHA1
            siteId: siteId
            documentId: documentId
            contentLength: 0
            contentType: contentType
          changes:
            key:
              newValue: newValue
              oldValue: oldValue
          type: VIEW
          userId: userId
      properties:
        next:
          description: Next page of results token
          type: string
        userActivities:
          description: List of user activities syncs
          items:
            $ref: '#/components/schemas/UserActivity'
          type: array
      type: object
    UserActivityType:
      description: The type of the activity
      enum:
      - VIEW
      - CREATE
      - UPDATE
      - DELETE
      - SOFT_DELETE
      - RESTORE
      - NEW_VERSION
      type: string
    UserActivity:
      example:
        insertedDate: insertedDate
        document:
          metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          userId: userId
          version: version
          versionKey: versionKey
          path: path
          insertedDate: insertedDate
          s3version: s3version
          checksum: checksum
          checksumType: SHA1
          siteId: siteId
          documentId: documentId
          contentLength: 0
          contentType: contentType
        changes:
          key:
            newValue: newValue
            oldValue: oldValue
        type: VIEW
        userId: userId
      properties:
        type:
          $ref: '#/components/schemas/UserActivityType'
        insertedDate:
          description: Inserted Timestamp
          type: string
        userId:
          description: User who added document
          type: string
        document:
          $ref: '#/components/schemas/Document'
        changes:
          additionalProperties:
            $ref: '#/components/schemas/UserActivityChanges'
          type: object
      type: object
    UserActivityChanges:
      example:
        newValue: newValue
        oldValue: oldValue
      properties:
        oldValue:
          description: Previous key value
          type: string
        newValue:
          description: New key value
          type: string
      type: object
    GetFoldersResponse:
      example:
        next: next
        previous: previous
        documents:
        - matchedAttribute:
            stringValue: stringValue
            booleanValue: true
            numberValue: 6.027456183070403
            key: key
          metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          matchedTags:
          - type: type
            value: value
            key: key
          - type: type
            value: value
            key: key
          matchedTag:
            type: type
            value: value
            key: key
          userId: userId
          tags:
            key: ""
          path: path
          versionId: versionId
          folder: true
          insertedDate: insertedDate
          checksum: checksum
          checksumType: SHA1
          siteId: siteId
          indexKey: indexKey
          documentId: documentId
          contentLength: 0
          attributes:
            key:
              numberValues:
              - 1.4658129805029452
              - 1.4658129805029452
              stringValues:
              - stringValues
              - stringValues
              valueType: BOOLEAN
              booleanValue: true
          contentType: contentType
        - matchedAttribute:
            stringValue: stringValue
            booleanValue: true
            numberValue: 6.027456183070403
            key: key
          metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          matchedTags:
          - type: type
            value: value
            key: key
          - type: type
            value: value
            key: key
          matchedTag:
            type: type
            value: value
            key: key
          userId: userId
          tags:
            key: ""
          path: path
          versionId: versionId
          folder: true
          insertedDate: insertedDate
          checksum: checksum
          checksumType: SHA1
          siteId: siteId
          indexKey: indexKey
          documentId: documentId
          contentLength: 0
          attributes:
            key:
              numberValues:
              - 1.4658129805029452
              - 1.4658129805029452
              stringValues:
              - stringValues
              - stringValues
              valueType: BOOLEAN
              booleanValue: true
          contentType: contentType
      properties:
        next:
          description: Next page of results token
          type: string
        previous:
          description: Previous page of results token
          type: string
        documents:
          description: List of search result documents
          items:
            $ref: '#/components/schemas/SearchResultDocument'
          type: array
      type: object
    GetWorkflowQueueDocumentsResponse:
      example:
        next: next
        documents:
        - workflow:
            insertedDate: insertedDate
            name: name
            inUse: true
            description: description
            userId: userId
            workflowId: workflowId
            status: ACTIVE
          document:
            metadata:
            - values:
              - values
              - values
              value: value
              key: key
            - values:
              - values
              - values
              value: value
              key: key
            deepLinkPath: deepLinkPath
            lastModifiedDate: lastModifiedDate
            belongsToDocumentId: belongsToDocumentId
            userId: userId
            version: version
            versionKey: versionKey
            path: path
            insertedDate: insertedDate
            s3version: s3version
            checksum: checksum
            checksumType: SHA1
            siteId: siteId
            documentId: documentId
            contentLength: 0
            contentType: contentType
        - workflow:
            insertedDate: insertedDate
            name: name
            inUse: true
            description: description
            userId: userId
            workflowId: workflowId
            status: ACTIVE
          document:
            metadata:
            - values:
              - values
              - values
              value: value
              key: key
            - values:
              - values
              - values
              value: value
              key: key
            deepLinkPath: deepLinkPath
            lastModifiedDate: lastModifiedDate
            belongsToDocumentId: belongsToDocumentId
            userId: userId
            version: version
            versionKey: versionKey
            path: path
            insertedDate: insertedDate
            s3version: s3version
            checksum: checksum
            checksumType: SHA1
            siteId: siteId
            documentId: documentId
            contentLength: 0
            contentType: contentType
      properties:
        next:
          description: Next page of results token
          type: string
        documents:
          description: List of search result documents
          items:
            $ref: '#/components/schemas/WorkflowDocument'
          type: array
      type: object
    GetWorkflowDocumentsResponse:
      example:
        next: next
        documents:
        - metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          userId: userId
          version: version
          versionKey: versionKey
          path: path
          insertedDate: insertedDate
          s3version: s3version
          checksum: checksum
          checksumType: SHA1
          siteId: siteId
          documentId: documentId
          contentLength: 0
          contentType: contentType
        - metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          userId: userId
          version: version
          versionKey: versionKey
          path: path
          insertedDate: insertedDate
          s3version: s3version
          checksum: checksum
          checksumType: SHA1
          siteId: siteId
          documentId: documentId
          contentLength: 0
          contentType: contentType
      properties:
        next:
          description: Next page of results token
          type: string
        documents:
          description: List of workflow documents
          items:
            $ref: '#/components/schemas/Document'
          type: array
      type: object
    WorkflowDocument:
      example:
        workflow:
          insertedDate: insertedDate
          name: name
          inUse: true
          description: description
          userId: userId
          workflowId: workflowId
          status: ACTIVE
        document:
          metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          userId: userId
          version: version
          versionKey: versionKey
          path: path
          insertedDate: insertedDate
          s3version: s3version
          checksum: checksum
          checksumType: SHA1
          siteId: siteId
          documentId: documentId
          contentLength: 0
          contentType: contentType
      properties:
        workflow:
          $ref: '#/components/schemas/WorkflowSummary'
        document:
          $ref: '#/components/schemas/Document'
      type: object
    Document:
      example:
        metadata:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
        deepLinkPath: deepLinkPath
        lastModifiedDate: lastModifiedDate
        belongsToDocumentId: belongsToDocumentId
        userId: userId
        version: version
        versionKey: versionKey
        path: path
        insertedDate: insertedDate
        s3version: s3version
        checksum: checksum
        checksumType: SHA1
        siteId: siteId
        documentId: documentId
        contentLength: 0
        contentType: contentType
      properties:
        siteId:
          description: Site Identifier
          type: string
        path:
          description: Path or Name of document
          type: string
        deepLinkPath:
          description: Path or Name of deep link
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        lastModifiedDate:
          description: Last Modified Timestamp
          type: string
        checksum:
          description: "Document checksum, changes when document file changes"
          type: string
        checksumType:
          $ref: '#/components/schemas/ChecksumType'
        documentId:
          description: Document Identifier
          type: string
        contentType:
          description: Document Content-Type
          type: string
        userId:
          description: User who added document
          type: string
        contentLength:
          description: Document size
          type: integer
        version:
          description: Document version
          type: string
        versionKey:
          description: Document Version Identifier
          type: string
        s3version:
          description: Document storage version
          type: string
        belongsToDocumentId:
          description: Parent Document Identifier
          type: string
        metadata:
          description: List of document Metadata
          items:
            $ref: '#/components/schemas/DocumentMetadata'
          type: array
      type: object
    DocumentSearchResponse:
      example:
        next: next
        previous: previous
        documents:
        - matchedAttribute:
            stringValue: stringValue
            booleanValue: true
            numberValue: 6.027456183070403
            key: key
          metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          matchedTags:
          - type: type
            value: value
            key: key
          - type: type
            value: value
            key: key
          matchedTag:
            type: type
            value: value
            key: key
          userId: userId
          tags:
            key: ""
          path: path
          versionId: versionId
          folder: true
          insertedDate: insertedDate
          checksum: checksum
          checksumType: SHA1
          siteId: siteId
          indexKey: indexKey
          documentId: documentId
          contentLength: 0
          attributes:
            key:
              numberValues:
              - 1.4658129805029452
              - 1.4658129805029452
              stringValues:
              - stringValues
              - stringValues
              valueType: BOOLEAN
              booleanValue: true
          contentType: contentType
        - matchedAttribute:
            stringValue: stringValue
            booleanValue: true
            numberValue: 6.027456183070403
            key: key
          metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          matchedTags:
          - type: type
            value: value
            key: key
          - type: type
            value: value
            key: key
          matchedTag:
            type: type
            value: value
            key: key
          userId: userId
          tags:
            key: ""
          path: path
          versionId: versionId
          folder: true
          insertedDate: insertedDate
          checksum: checksum
          checksumType: SHA1
          siteId: siteId
          indexKey: indexKey
          documentId: documentId
          contentLength: 0
          attributes:
            key:
              numberValues:
              - 1.4658129805029452
              - 1.4658129805029452
              stringValues:
              - stringValues
              - stringValues
              valueType: BOOLEAN
              booleanValue: true
          contentType: contentType
      properties:
        next:
          description: Next page of results token
          type: string
        previous:
          description: Previous page of results token
          type: string
        documents:
          description: List of search result documents
          items:
            $ref: '#/components/schemas/SearchResultDocument'
          type: array
      type: object
    SearchResultDocument:
      example:
        matchedAttribute:
          stringValue: stringValue
          booleanValue: true
          numberValue: 6.027456183070403
          key: key
        metadata:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
        deepLinkPath: deepLinkPath
        lastModifiedDate: lastModifiedDate
        belongsToDocumentId: belongsToDocumentId
        matchedTags:
        - type: type
          value: value
          key: key
        - type: type
          value: value
          key: key
        matchedTag:
          type: type
          value: value
          key: key
        userId: userId
        tags:
          key: ""
        path: path
        versionId: versionId
        folder: true
        insertedDate: insertedDate
        checksum: checksum
        checksumType: SHA1
        siteId: siteId
        indexKey: indexKey
        documentId: documentId
        contentLength: 0
        attributes:
          key:
            numberValues:
            - 1.4658129805029452
            - 1.4658129805029452
            stringValues:
            - stringValues
            - stringValues
            valueType: BOOLEAN
            booleanValue: true
        contentType: contentType
      properties:
        siteId:
          description: Site Identifier
          type: string
        path:
          description: Path or Name of document
          type: string
        deepLinkPath:
          description: Path or Name of deep link
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        lastModifiedDate:
          description: Last Modified Timestamp
          type: string
        folder:
          description: Is Result a Document Folder
          type: boolean
        indexKey:
          description: populated if search result are from an index
          type: string
        checksum:
          description: "Document checksum, changes when document file changes"
          type: string
        checksumType:
          $ref: '#/components/schemas/ChecksumType'
        documentId:
          description: Document Identifier
          type: string
        contentType:
          description: Document Content-Type
          type: string
        userId:
          description: User who added document
          type: string
        contentLength:
          description: Document size
          type: integer
        versionId:
          description: Document version
          type: string
        belongsToDocumentId:
          description: Parent Document Identifier
          type: string
        matchedAttribute:
          $ref: '#/components/schemas/DocumentSearchMatchAttribute'
        matchedTag:
          $ref: '#/components/schemas/DocumentSearchMatchTag'
        matchedTags:
          items:
            $ref: '#/components/schemas/DocumentSearchMatchTag'
          type: array
        tags:
          additionalProperties: true
          type: object
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/SearchResultDocumentAttribute'
          type: object
        metadata:
          description: List of document Metadata
          items:
            $ref: '#/components/schemas/DocumentMetadata'
          type: array
      type: object
    DocumentSearchMatchAttribute:
      example:
        stringValue: stringValue
        booleanValue: true
        numberValue: 6.027456183070403
        key: key
      properties:
        key:
          description: Tag key
          type: string
        stringValue:
          description: Attribute with string value
          type: string
        numberValue:
          description: Attribute with number value
          type: number
        booleanValue:
          description: Attribute with boolean value
          type: boolean
      type: object
    DocumentSearchMatchTag:
      example:
        type: type
        value: value
        key: key
      properties:
        key:
          description: Tag key
          type: string
        value:
          description: Tag value
          type: string
        type:
          description: Tag type
          type: string
      type: object
    AddCaseResponse:
      example:
        caseId: caseId
      properties:
        caseId:
          description: Case Identifier
          type: string
      type: object
    AddTaskResponse:
      example:
        taskId: taskId
      properties:
        taskId:
          description: Task Identifier
          type: string
      type: object
    AddNigoResponse:
      example:
        nigoId: nigoId
      properties:
        nigoId:
          description: Nigo Identifier
          type: string
      type: object
    AddCaseRequest:
      example:
        case:
          metadata:
            key: "{}"
          plannedStartDate: plannedStartDate
          endDate: endDate
          dueDate: dueDate
          documentNumberFormat:
          - padding: 0
            staticValue: staticValue
            type: AUTO_INCREMENT
          - padding: 0
            staticValue: staticValue
            type: AUTO_INCREMENT
          name: name
          description: description
          startDate: startDate
          caseNumberFormat:
          - padding: 0
            staticValue: staticValue
            type: AUTO_INCREMENT
          - padding: 0
            staticValue: staticValue
            type: AUTO_INCREMENT
          status: NEW
          documentIds:
          - documentIds
          - documentIds
      properties:
        case:
          $ref: '#/components/schemas/AddCase'
      required:
      - case
      type: object
    AddCase:
      example:
        metadata:
          key: "{}"
        plannedStartDate: plannedStartDate
        endDate: endDate
        dueDate: dueDate
        documentNumberFormat:
        - padding: 0
          staticValue: staticValue
          type: AUTO_INCREMENT
        - padding: 0
          staticValue: staticValue
          type: AUTO_INCREMENT
        name: name
        description: description
        startDate: startDate
        caseNumberFormat:
        - padding: 0
          staticValue: staticValue
          type: AUTO_INCREMENT
        - padding: 0
          staticValue: staticValue
          type: AUTO_INCREMENT
        status: NEW
        documentIds:
        - documentIds
        - documentIds
      properties:
        name:
          description: Case Name
          type: string
        status:
          $ref: '#/components/schemas/CaseStatus'
        plannedStartDate:
          description: Planned Start Date
          type: string
        startDate:
          description: Start Date
          type: string
        endDate:
          description: End Date
          type: string
        dueDate:
          description: Due Date
          type: string
        description:
          description: Case Description
          type: string
        documentNumberFormat:
          description: Format of Document Number
          items:
            $ref: '#/components/schemas/StringFormat'
          type: array
        caseNumberFormat:
          description: Format of Case Number
          items:
            $ref: '#/components/schemas/StringFormat'
          type: array
        metadata:
          additionalProperties:
            type: object
          type: object
        documentIds:
          items:
            type: string
          type: array
      required:
      - name
      type: object
    StringFormat:
      example:
        padding: 0
        staticValue: staticValue
        type: AUTO_INCREMENT
      properties:
        type:
          $ref: '#/components/schemas/StringGeneratorType'
        staticValue:
          description: Static Value
          type: string
        padding:
          description: Optional padding for AUTO_INCREMENT number
          type: integer
      type: object
    UpdateCaseResponse:
      example:
        caseId: caseId
      properties:
        caseId:
          description: Case Identifier
          type: string
      type: object
    UpdateCaseRequest:
      example:
        case:
          metadata:
            key: "{}"
          plannedStartDate: plannedStartDate
          endDate: endDate
          dueDate: dueDate
          name: name
          description: description
          startDate: startDate
          status: NEW
          documentIds:
          - documentIds
          - documentIds
      properties:
        case:
          $ref: '#/components/schemas/UpdateCase'
      type: object
    UpdateCase:
      example:
        metadata:
          key: "{}"
        plannedStartDate: plannedStartDate
        endDate: endDate
        dueDate: dueDate
        name: name
        description: description
        startDate: startDate
        status: NEW
        documentIds:
        - documentIds
        - documentIds
      properties:
        name:
          description: Case Name
          type: string
        status:
          $ref: '#/components/schemas/CaseStatus'
        description:
          description: Case Description
          type: string
        metadata:
          additionalProperties:
            type: object
          type: object
        plannedStartDate:
          description: Planned Start Date
          type: string
        startDate:
          description: Start Date
          type: string
        endDate:
          description: End Date
          type: string
        dueDate:
          description: Due Date
          type: string
        documentIds:
          items:
            type: string
          type: array
      type: object
    StringGeneratorType:
      description: Generate Strings of Type
      enum:
      - AUTO_INCREMENT
      - STATIC
      - DATE_YYYYMMDD
      type: string
    CaseStatus:
      description: Status of the Case
      enum:
      - NEW
      - ASSIGNED
      - IN_PROGRESS
      - ON_HOLD
      - ESCALATED
      - RESOLVED
      - CLOSED
      - UNDER_REVIEW
      - AWAITING_CLIENT_RESPONSE
      type: string
    TaskStatus:
      description: Status of the Task
      enum:
      - NEW
      - ASSIGNED
      - IN_PROGRESS
      - ON_HOLD
      - ESCALATED
      - RESOLVED
      - CLOSED
      - UNDER_REVIEW
      - AWAITING_CLIENT_RESPONSE
      type: string
    NigoStatus:
      description: Status of the Nigo
      enum:
      - NEW
      - ASSIGNED
      - IN_PROGRESS
      - ON_HOLD
      - ESCALATED
      - RESOLVED
      - CLOSED
      - UNDER_REVIEW
      - AWAITING_CLIENT_RESPONSE
      type: string
    UpdateTaskResponse:
      example:
        taskId: taskId
      properties:
        taskId:
          description: Task Identifier
          type: string
      type: object
    UpdateTaskRequest:
      example:
        task:
          metadata:
            key: "{}"
          plannedStartDate: plannedStartDate
          endDate: endDate
          dueDate: dueDate
          name: name
          description: description
          startDate: startDate
          status: NEW
          documentIds:
          - documentIds
          - documentIds
      properties:
        task:
          $ref: '#/components/schemas/UpdateTask'
      type: object
    UpdateTask:
      example:
        metadata:
          key: "{}"
        plannedStartDate: plannedStartDate
        endDate: endDate
        dueDate: dueDate
        name: name
        description: description
        startDate: startDate
        status: NEW
        documentIds:
        - documentIds
        - documentIds
      properties:
        name:
          description: Name of Task
          type: string
        description:
          description: Description of Task
          type: string
        plannedStartDate:
          description: Planned Start Date
          type: string
        startDate:
          description: Start Date
          type: string
        endDate:
          description: End Date
          type: string
        dueDate:
          description: Due Date
          type: string
        status:
          $ref: '#/components/schemas/TaskStatus'
        metadata:
          additionalProperties:
            type: object
          type: object
        documentIds:
          items:
            type: string
          type: array
      type: object
    AddTaskRequest:
      example:
        task:
          metadata:
            key: "{}"
          plannedStartDate: plannedStartDate
          endDate: endDate
          dueDate: dueDate
          name: name
          description: description
          startDate: startDate
          status: NEW
          documentIds:
          - documentIds
          - documentIds
      properties:
        task:
          $ref: '#/components/schemas/AddTask'
      required:
      - task
      type: object
    AddTask:
      example:
        metadata:
          key: "{}"
        plannedStartDate: plannedStartDate
        endDate: endDate
        dueDate: dueDate
        name: name
        description: description
        startDate: startDate
        status: NEW
        documentIds:
        - documentIds
        - documentIds
      properties:
        name:
          description: Name of Task
          type: string
        description:
          description: Description of Task
          type: string
        status:
          $ref: '#/components/schemas/TaskStatus'
        plannedStartDate:
          description: Planned Start Date
          type: string
        startDate:
          description: Start Date
          type: string
        endDate:
          description: End Date
          type: string
        dueDate:
          description: Due Date
          type: string
        metadata:
          additionalProperties:
            type: object
          type: object
        documentIds:
          items:
            type: string
          type: array
      required:
      - description
      type: object
    UpdateNigoResponse:
      example:
        nigoId: nigoId
      properties:
        nigoId:
          description: Nigo Identifier
          type: string
      type: object
    UpdateNigoRequest:
      example:
        nigo:
          metadata:
            key: "{}"
          plannedStartDate: plannedStartDate
          endDate: endDate
          dueDate: dueDate
          name: name
          description: description
          startDate: startDate
          status: NEW
          documentIds:
          - documentIds
          - documentIds
      properties:
        nigo:
          $ref: '#/components/schemas/UpdateNigo'
      type: object
    UpdateNigo:
      example:
        metadata:
          key: "{}"
        plannedStartDate: plannedStartDate
        endDate: endDate
        dueDate: dueDate
        name: name
        description: description
        startDate: startDate
        status: NEW
        documentIds:
        - documentIds
        - documentIds
      properties:
        name:
          description: Name of Nigo
          type: string
        description:
          description: Description of Nigo
          type: string
        plannedStartDate:
          description: Planned Start Date
          type: string
        startDate:
          description: Start Date
          type: string
        endDate:
          description: End Date
          type: string
        dueDate:
          description: Due Date
          type: string
        status:
          $ref: '#/components/schemas/NigoStatus'
        metadata:
          additionalProperties:
            type: object
          type: object
        documentIds:
          items:
            type: string
          type: array
      type: object
    AddNigoRequest:
      example:
        nigo:
          metadata:
            key: "{}"
          plannedStartDate: plannedStartDate
          endDate: endDate
          dueDate: dueDate
          name: name
          description: description
          startDate: startDate
          status: NEW
          documentIds:
          - documentIds
          - documentIds
      properties:
        nigo:
          $ref: '#/components/schemas/AddNigo'
      required:
      - nigo
      type: object
    AddNigo:
      example:
        metadata:
          key: "{}"
        plannedStartDate: plannedStartDate
        endDate: endDate
        dueDate: dueDate
        name: name
        description: description
        startDate: startDate
        status: NEW
        documentIds:
        - documentIds
        - documentIds
      properties:
        name:
          description: Name of Nigo
          type: string
        description:
          description: Description of Nigo
          type: string
        status:
          $ref: '#/components/schemas/NigoStatus'
        plannedStartDate:
          description: Planned Start Date
          type: string
        startDate:
          description: Start Date
          type: string
        endDate:
          description: End Date
          type: string
        dueDate:
          description: Due Date
          type: string
        metadata:
          additionalProperties:
            type: object
          type: object
        documentIds:
          items:
            type: string
          type: array
      required:
      - name
      type: object
    Task:
      example:
        metadata:
          key: "{}"
        plannedStartDate: plannedStartDate
        insertedDate: insertedDate
        endDate: endDate
        dueDate: dueDate
        name: name
        description: description
        userId: userId
        taskId: taskId
        startDate: startDate
        status: NEW
      properties:
        taskId:
          description: Task Identifier
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        name:
          description: Name of Task
          type: string
        description:
          description: Description of Task
          type: string
        plannedStartDate:
          description: Planned Start Date of Task
          type: string
        startDate:
          description: Start Date of Task
          type: string
        endDate:
          description: End Date of Task
          type: string
        dueDate:
          description: Due Date of Task
          type: string
        userId:
          description: User who added Task
          type: string
        status:
          $ref: '#/components/schemas/TaskStatus'
        metadata:
          additionalProperties:
            type: object
          type: object
      type: object
    Nigo:
      example:
        metadata:
          key: "{}"
        nigoId: nigoId
        plannedStartDate: plannedStartDate
        insertedDate: insertedDate
        endDate: endDate
        dueDate: dueDate
        name: name
        description: description
        userId: userId
        startDate: startDate
        status: NEW
      properties:
        nigoId:
          description: Nigo Identifier
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        name:
          description: Name of Nigo
          type: string
        description:
          description: Description of Nigo
          type: string
        plannedStartDate:
          description: Planned Start Date
          type: string
        startDate:
          description: Start Date
          type: string
        endDate:
          description: End Date
          type: string
        dueDate:
          description: Due Date
          type: string
        userId:
          description: User who added Nigo
          type: string
        status:
          $ref: '#/components/schemas/NigoStatus'
        metadata:
          additionalProperties:
            type: object
          type: object
      type: object
    GetCasesResponse:
      example:
        next: next
        cases:
        - metadata:
            key: "{}"
          endDate: endDate
          documentNumber: documentNumber
          dueDate: dueDate
          description: description
          userId: userId
          plannedStartDate: plannedStartDate
          insertedDate: insertedDate
          caseNumber: caseNumber
          caseId: caseId
          name: name
          startDate: startDate
          status: NEW
        - metadata:
            key: "{}"
          endDate: endDate
          documentNumber: documentNumber
          dueDate: dueDate
          description: description
          userId: userId
          plannedStartDate: plannedStartDate
          insertedDate: insertedDate
          caseNumber: caseNumber
          caseId: caseId
          name: name
          startDate: startDate
          status: NEW
      properties:
        next:
          description: Next page of results token
          type: string
        cases:
          description: List of cases
          items:
            $ref: '#/components/schemas/Case'
          type: array
      type: object
    GetCaseNigosResponse:
      example:
        next: next
        nigos:
        - metadata:
            key: "{}"
          nigoId: nigoId
          plannedStartDate: plannedStartDate
          insertedDate: insertedDate
          endDate: endDate
          dueDate: dueDate
          name: name
          description: description
          userId: userId
          startDate: startDate
          status: NEW
        - metadata:
            key: "{}"
          nigoId: nigoId
          plannedStartDate: plannedStartDate
          insertedDate: insertedDate
          endDate: endDate
          dueDate: dueDate
          name: name
          description: description
          userId: userId
          startDate: startDate
          status: NEW
      properties:
        next:
          description: Next page of results token
          type: string
        nigos:
          description: List of Nigos
          items:
            $ref: '#/components/schemas/Nigo'
          type: array
      type: object
    GetCaseNigoResponse:
      example:
        nigo:
          metadata:
            key: "{}"
          nigoId: nigoId
          plannedStartDate: plannedStartDate
          insertedDate: insertedDate
          endDate: endDate
          dueDate: dueDate
          name: name
          description: description
          userId: userId
          startDate: startDate
          status: NEW
      properties:
        nigo:
          $ref: '#/components/schemas/Nigo'
      type: object
    GetCaseTaskResponse:
      example:
        task:
          metadata:
            key: "{}"
          plannedStartDate: plannedStartDate
          insertedDate: insertedDate
          endDate: endDate
          dueDate: dueDate
          name: name
          description: description
          userId: userId
          taskId: taskId
          startDate: startDate
          status: NEW
      properties:
        task:
          $ref: '#/components/schemas/Task'
      type: object
    GetCaseTasksResponse:
      example:
        next: next
        tasks:
        - metadata:
            key: "{}"
          plannedStartDate: plannedStartDate
          insertedDate: insertedDate
          endDate: endDate
          dueDate: dueDate
          name: name
          description: description
          userId: userId
          taskId: taskId
          startDate: startDate
          status: NEW
        - metadata:
            key: "{}"
          plannedStartDate: plannedStartDate
          insertedDate: insertedDate
          endDate: endDate
          dueDate: dueDate
          name: name
          description: description
          userId: userId
          taskId: taskId
          startDate: startDate
          status: NEW
      properties:
        next:
          description: Next page of results token
          type: string
        tasks:
          description: List of tasks
          items:
            $ref: '#/components/schemas/Task'
          type: array
      type: object
    GetCaseDocumentsResponse:
      example:
        next: next
        documents:
        - metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          userId: userId
          version: version
          versionKey: versionKey
          path: path
          insertedDate: insertedDate
          s3version: s3version
          checksum: checksum
          checksumType: SHA1
          siteId: siteId
          documentId: documentId
          contentLength: 0
          contentType: contentType
        - metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          userId: userId
          version: version
          versionKey: versionKey
          path: path
          insertedDate: insertedDate
          s3version: s3version
          checksum: checksum
          checksumType: SHA1
          siteId: siteId
          documentId: documentId
          contentLength: 0
          contentType: contentType
      properties:
        next:
          description: Next page of results token
          type: string
        documents:
          description: List of documents
          items:
            $ref: '#/components/schemas/Document'
          type: array
      type: object
    GetCaseResponse:
      example:
        case:
          metadata:
            key: "{}"
          endDate: endDate
          documentNumber: documentNumber
          dueDate: dueDate
          description: description
          userId: userId
          plannedStartDate: plannedStartDate
          insertedDate: insertedDate
          caseNumber: caseNumber
          caseId: caseId
          name: name
          startDate: startDate
          status: NEW
      properties:
        case:
          $ref: '#/components/schemas/Case'
      type: object
    Case:
      example:
        metadata:
          key: "{}"
        endDate: endDate
        documentNumber: documentNumber
        dueDate: dueDate
        description: description
        userId: userId
        plannedStartDate: plannedStartDate
        insertedDate: insertedDate
        caseNumber: caseNumber
        caseId: caseId
        name: name
        startDate: startDate
        status: NEW
      properties:
        caseId:
          description: Case Identifier
          type: string
        caseNumber:
          description: Case Number
          type: string
        documentNumber:
          description: Document Number
          type: string
        plannedStartDate:
          description: Planned Start Date
          type: string
        startDate:
          description: Start Date
          type: string
        endDate:
          description: End Date
          type: string
        dueDate:
          description: Due Date
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        name:
          description: Case Name
          type: string
        description:
          description: Case Description
          type: string
        metadata:
          additionalProperties:
            type: object
          type: object
        status:
          $ref: '#/components/schemas/CaseStatus'
        userId:
          description: User who added document
          type: string
      type: object
    RulesetStatus:
      description: Status of the Ruleset
      enum:
      - ACTIVE
      - INACTIVE
      type: string
    AddRulesetResponse:
      example:
        rulesetId: rulesetId
      properties:
        rulesetId:
          description: Ruleset Identifier
          type: string
      type: object
    UpdateRulesetResponse:
      example:
        message: message
      properties:
        message:
          description: Ruleset update message
          type: string
      type: object
    UpdateRuleResponse:
      example:
        message: message
      properties:
        message:
          description: Rule update message
          type: string
      type: object
    AddRuleResponse:
      example:
        ruleId: ruleId
      properties:
        ruleId:
          description: Rule Identifier
          type: string
      type: object
    AddRuleRequest:
      example:
        rule:
          description: description
          priority: 0.8008281904610115
          conditions:
            must:
            - criterion: TEXT
              fieldName: fieldName
              attribute: TEXT
              value: value
              operation: EQ
            - criterion: TEXT
              fieldName: fieldName
              attribute: TEXT
              value: value
              operation: EQ
          workflowId: workflowId
          status: ACTIVE
      properties:
        rule:
          $ref: '#/components/schemas/AddRule'
      required:
      - case
      type: object
    UpdateRuleRequest:
      example:
        rule:
          description: description
          priority: 0.8008281904610115
          conditions:
            must:
            - criterion: TEXT
              fieldName: fieldName
              attribute: TEXT
              value: value
              operation: EQ
            - criterion: TEXT
              fieldName: fieldName
              attribute: TEXT
              value: value
              operation: EQ
          workflowId: workflowId
          status: ACTIVE
      properties:
        rule:
          $ref: '#/components/schemas/UpdateRule'
      required:
      - case
      type: object
    AddRule:
      example:
        description: description
        priority: 0.8008281904610115
        conditions:
          must:
          - criterion: TEXT
            fieldName: fieldName
            attribute: TEXT
            value: value
            operation: EQ
          - criterion: TEXT
            fieldName: fieldName
            attribute: TEXT
            value: value
            operation: EQ
        workflowId: workflowId
        status: ACTIVE
      properties:
        priority:
          description: Rule priority
          type: number
        description:
          description: Rule description
          type: string
        workflowId:
          description: Workflow to start on matching of conditions
          type: string
        status:
          $ref: '#/components/schemas/RulesetStatus'
        conditions:
          $ref: '#/components/schemas/RuleCondition'
      type: object
    UpdateRule:
      example:
        description: description
        priority: 0.8008281904610115
        conditions:
          must:
          - criterion: TEXT
            fieldName: fieldName
            attribute: TEXT
            value: value
            operation: EQ
          - criterion: TEXT
            fieldName: fieldName
            attribute: TEXT
            value: value
            operation: EQ
        workflowId: workflowId
        status: ACTIVE
      properties:
        priority:
          description: Rule priority
          type: number
        description:
          description: Rule description
          type: string
        status:
          $ref: '#/components/schemas/RulesetStatus'
        workflowId:
          description: Workflow to start on matching of conditions
          type: string
        conditions:
          $ref: '#/components/schemas/RuleCondition'
      type: object
    AddRulesetRequest:
      example:
        ruleset:
          description: description
          priority: 0.8008281904610115
          version: 6.027456183070403
          status: ACTIVE
      properties:
        ruleset:
          $ref: '#/components/schemas/AddRuleset'
      required:
      - ruleset
      type: object
    UpdateRulesetRequest:
      example:
        ruleset:
          description: description
          priority: 0.8008281904610115
          version: 6.027456183070403
          status: ACTIVE
      properties:
        ruleset:
          $ref: '#/components/schemas/UpdateRuleset'
      required:
      - ruleset
      type: object
    AddRuleset:
      example:
        description: description
        priority: 0.8008281904610115
        version: 6.027456183070403
        status: ACTIVE
      properties:
        description:
          description: Ruleset description
          type: string
        priority:
          description: Ruleset priority
          type: number
        version:
          description: Ruleset version
          type: number
        status:
          $ref: '#/components/schemas/RulesetStatus'
      type: object
    UpdateRuleset:
      example:
        description: description
        priority: 0.8008281904610115
        version: 6.027456183070403
        status: ACTIVE
      properties:
        description:
          description: Ruleset description
          type: string
        priority:
          description: Ruleset priority
          type: number
        version:
          description: Ruleset version
          type: number
        status:
          $ref: '#/components/schemas/RulesetStatus'
      type: object
    GetRulesResponse:
      example:
        next: next
        rules:
        - description: description
          ruleId: ruleId
          priority: 0.8008281904610115
          conditions:
            must:
            - criterion: TEXT
              fieldName: fieldName
              attribute: TEXT
              value: value
              operation: EQ
            - criterion: TEXT
              fieldName: fieldName
              attribute: TEXT
              value: value
              operation: EQ
          workflowId: workflowId
          status: ACTIVE
        - description: description
          ruleId: ruleId
          priority: 0.8008281904610115
          conditions:
            must:
            - criterion: TEXT
              fieldName: fieldName
              attribute: TEXT
              value: value
              operation: EQ
            - criterion: TEXT
              fieldName: fieldName
              attribute: TEXT
              value: value
              operation: EQ
          workflowId: workflowId
          status: ACTIVE
      properties:
        next:
          description: Next page of results token
          type: string
        rules:
          description: List of rules
          items:
            $ref: '#/components/schemas/Rule'
          type: array
      type: object
    GetRuleResponse:
      example:
        rule:
          description: description
          ruleId: ruleId
          priority: 0.8008281904610115
          conditions:
            must:
            - criterion: TEXT
              fieldName: fieldName
              attribute: TEXT
              value: value
              operation: EQ
            - criterion: TEXT
              fieldName: fieldName
              attribute: TEXT
              value: value
              operation: EQ
          workflowId: workflowId
          status: ACTIVE
      properties:
        rule:
          $ref: '#/components/schemas/Rule'
      type: object
    GetRulesetsResponse:
      example:
        next: next
        rulesets:
        - rulesetId: rulesetId
          insertedDate: insertedDate
          description: description
          priority: 0.8008281904610115
          version: 6.027456183070403
          status: ACTIVE
        - rulesetId: rulesetId
          insertedDate: insertedDate
          description: description
          priority: 0.8008281904610115
          version: 6.027456183070403
          status: ACTIVE
      properties:
        next:
          description: Next page of results token
          type: string
        rulesets:
          description: List of rulesets
          items:
            $ref: '#/components/schemas/Ruleset'
          type: array
      type: object
    GetRulesetResponse:
      example:
        ruleset:
          rulesetId: rulesetId
          insertedDate: insertedDate
          description: description
          priority: 0.8008281904610115
          version: 6.027456183070403
          status: ACTIVE
      properties:
        ruleset:
          $ref: '#/components/schemas/Ruleset'
      type: object
    Ruleset:
      example:
        rulesetId: rulesetId
        insertedDate: insertedDate
        description: description
        priority: 0.8008281904610115
        version: 6.027456183070403
        status: ACTIVE
      properties:
        rulesetId:
          description: Ruleset identifier
          type: string
        description:
          description: Ruleset description
          type: string
        priority:
          description: Ruleset priority
          type: number
        version:
          description: Ruleset version
          type: number
        insertedDate:
          description: Inserted Timestamp
          type: string
        status:
          $ref: '#/components/schemas/RulesetStatus'
      type: object
    Rule:
      example:
        description: description
        ruleId: ruleId
        priority: 0.8008281904610115
        conditions:
          must:
          - criterion: TEXT
            fieldName: fieldName
            attribute: TEXT
            value: value
            operation: EQ
          - criterion: TEXT
            fieldName: fieldName
            attribute: TEXT
            value: value
            operation: EQ
        workflowId: workflowId
        status: ACTIVE
      properties:
        ruleId:
          description: Workflow to start on matching of conditions
          type: string
        priority:
          description: Rule priority
          type: number
        description:
          description: Ruleset description
          type: string
        workflowId:
          description: Workflow to start on matching of conditions
          type: string
        status:
          $ref: '#/components/schemas/RulesetStatus'
        conditions:
          $ref: '#/components/schemas/RuleCondition'
      type: object
    RuleCondition:
      example:
        must:
        - criterion: TEXT
          fieldName: fieldName
          attribute: TEXT
          value: value
          operation: EQ
        - criterion: TEXT
          fieldName: fieldName
          attribute: TEXT
          value: value
          operation: EQ
      properties:
        must:
          description: List of rule conditions
          items:
            $ref: '#/components/schemas/RuleConditionMust'
          type: array
      type: object
    RuleConditionCriterion:
      description: Rule condition attribute
      enum:
      - TEXT
      - CONTENT_TYPE
      - BARCODE
      - FIELD
      type: string
    RuleConditionAttribute:
      description: "Rule condition attribute (deprecated, use Criterion)"
      enum:
      - TEXT
      - CONTENT_TYPE
      - BARCODE
      - FIELD
      type: string
    RuleConditionOperation:
      description: Rule condition attribute
      enum:
      - EQ
      - CONTAINS
      type: string
    RuleConditionMust:
      example:
        criterion: TEXT
        fieldName: fieldName
        attribute: TEXT
        value: value
        operation: EQ
      properties:
        attribute:
          $ref: '#/components/schemas/RuleConditionAttribute'
        criterion:
          $ref: '#/components/schemas/RuleConditionCriterion'
        fieldName:
          description: Rule field name (only required for FIELD criterion)
          type: string
        value:
          description: Rule condition value
          type: string
        operation:
          $ref: '#/components/schemas/RuleConditionOperation'
      type: object
    GoogleExportOutputType:
      description: Google Export Output Type
      enum:
      - PDF
      type: string
    AddGoogleDocumentExportRequest:
      example:
        path: path
        outputType: PDF
      properties:
        path:
          description: Path of exported file
          type: string
        outputType:
          $ref: '#/components/schemas/GoogleExportOutputType'
      type: object
    AddGoogleDocumentExportResponse:
      example:
        documentId: documentId
      properties:
        documentId:
          description: Exported document identifier
          type: string
      type: object
    ReindexTarget:
      description: Reindex object target
      enum:
      - ATTRIBUTES
      type: string
    AddReindexDocumentRequest:
      example:
        target: ATTRIBUTES
      properties:
        target:
          $ref: '#/components/schemas/ReindexTarget'
      type: object
    AddDocumentGenerateRequest:
      example:
        path: path
        datasources:
        - name: name
          documentId: documentId
          dataRoot: data
        - name: name
          documentId: documentId
          dataRoot: data
        outputType: DOCX
        saveAsDocumentId: saveAsDocumentId
      properties:
        datasources:
          description: List of data sources
          items:
            $ref: '#/components/schemas/DocumentGenerateDataSource'
          type: array
        outputType:
          $ref: '#/components/schemas/DocumentGenerateOutputType'
        saveAsDocumentId:
          description: Save the generated document with a specific documentId
          type: string
        path:
          description: The path of the generated document
          type: string
      type: object
    DocumentGenerateDataSource:
      example:
        name: name
        documentId: documentId
        dataRoot: data
      properties:
        name:
          description: The data source name
          type: string
        documentId:
          description: Document Identifier of the data source document
          type: string
        dataRoot:
          default: data
          description: The default JSON object path for the data object
          type: string
      required:
      - documentId
      type: object
    DocumentGenerateOutputType:
      description: Document Generate Output Type
      enum:
      - DOCX
      - PDF
      type: string
    AddDocumentGenerateResponse:
      example:
        documentId: documentId
      properties:
        documentId:
          description: Generated document identifier
          type: string
      type: object
    GetExaminePdfUrlResponse:
      example:
        uploadUrl: uploadUrl
        id: id
      properties:
        id:
          description: Uploaded document identifier
          type: string
        uploadUrl:
          description: Url to upload document to
          type: string
      type: object
    GetExaminePdfResponse:
      example:
        fileinfo:
          fields:
          - field: field
            value: value
          - field: field
            value: value
      properties:
        fileinfo:
          $ref: '#/components/schemas/PdfDocument'
      type: object
    PdfDocument:
      example:
        fields:
        - field: field
          value: value
        - field: field
          value: value
      properties:
        fields:
          description: List of document fields
          items:
            $ref: '#/components/schemas/PdfDocumentField'
          type: array
      type: object
    PdfDocumentField:
      example:
        field: field
        value: value
      properties:
        field:
          description: Name of Field
          type: string
        value:
          description: Value of Field
          type: string
      type: object
    AddMappingResponse:
      example:
        mappingId: mappingId
      properties:
        mappingId:
          description: Mapping Identifier
          type: string
      type: object
    SetMappingRequest:
      example:
        mapping:
          name: name
          description: description
          attributes:
          - labelMatchingType: FUZZY
            sourceType: CONTENT
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
            metadataField: USERNAME
            validationRegex: validationRegex
            labelTexts:
            - labelTexts
            - labelTexts
          - labelMatchingType: FUZZY
            sourceType: CONTENT
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
            metadataField: USERNAME
            validationRegex: validationRegex
            labelTexts:
            - labelTexts
            - labelTexts
      properties:
        mapping:
          $ref: '#/components/schemas/AddMapping'
      type: object
    AddMappingRequest:
      example:
        mapping:
          name: name
          description: description
          attributes:
          - labelMatchingType: FUZZY
            sourceType: CONTENT
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
            metadataField: USERNAME
            validationRegex: validationRegex
            labelTexts:
            - labelTexts
            - labelTexts
          - labelMatchingType: FUZZY
            sourceType: CONTENT
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
            metadataField: USERNAME
            validationRegex: validationRegex
            labelTexts:
            - labelTexts
            - labelTexts
      properties:
        mapping:
          $ref: '#/components/schemas/AddMapping'
      type: object
    AddMapping:
      example:
        name: name
        description: description
        attributes:
        - labelMatchingType: FUZZY
          sourceType: CONTENT
          defaultValue: defaultValue
          defaultValues:
          - defaultValues
          - defaultValues
          attributeKey: attributeKey
          metadataField: USERNAME
          validationRegex: validationRegex
          labelTexts:
          - labelTexts
          - labelTexts
        - labelMatchingType: FUZZY
          sourceType: CONTENT
          defaultValue: defaultValue
          defaultValues:
          - defaultValues
          - defaultValues
          attributeKey: attributeKey
          metadataField: USERNAME
          validationRegex: validationRegex
          labelTexts:
          - labelTexts
          - labelTexts
      properties:
        name:
          description: Name of Mapping
          type: string
        description:
          description: Description of Mapping
          type: string
        attributes:
          description: List of attributes
          items:
            $ref: '#/components/schemas/MappingAttribute'
          type: array
      type: object
    GetMappingsResponse:
      example:
        next: next
        mappings:
        - mappingId: mappingId
          name: name
          description: description
          attributes:
          - labelMatchingType: FUZZY
            sourceType: CONTENT
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
            metadataField: USERNAME
            validationRegex: validationRegex
            labelTexts:
            - labelTexts
            - labelTexts
          - labelMatchingType: FUZZY
            sourceType: CONTENT
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
            metadataField: USERNAME
            validationRegex: validationRegex
            labelTexts:
            - labelTexts
            - labelTexts
        - mappingId: mappingId
          name: name
          description: description
          attributes:
          - labelMatchingType: FUZZY
            sourceType: CONTENT
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
            metadataField: USERNAME
            validationRegex: validationRegex
            labelTexts:
            - labelTexts
            - labelTexts
          - labelMatchingType: FUZZY
            sourceType: CONTENT
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
            metadataField: USERNAME
            validationRegex: validationRegex
            labelTexts:
            - labelTexts
            - labelTexts
      properties:
        mappings:
          items:
            $ref: '#/components/schemas/Mapping'
          type: array
        next:
          description: Next page of results token
          type: string
      type: object
    GetMappingResponse:
      example:
        mapping:
          mappingId: mappingId
          name: name
          description: description
          attributes:
          - labelMatchingType: FUZZY
            sourceType: CONTENT
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
            metadataField: USERNAME
            validationRegex: validationRegex
            labelTexts:
            - labelTexts
            - labelTexts
          - labelMatchingType: FUZZY
            sourceType: CONTENT
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
            metadataField: USERNAME
            validationRegex: validationRegex
            labelTexts:
            - labelTexts
            - labelTexts
      properties:
        mapping:
          $ref: '#/components/schemas/Mapping'
      type: object
    Mapping:
      example:
        mappingId: mappingId
        name: name
        description: description
        attributes:
        - labelMatchingType: FUZZY
          sourceType: CONTENT
          defaultValue: defaultValue
          defaultValues:
          - defaultValues
          - defaultValues
          attributeKey: attributeKey
          metadataField: USERNAME
          validationRegex: validationRegex
          labelTexts:
          - labelTexts
          - labelTexts
        - labelMatchingType: FUZZY
          sourceType: CONTENT
          defaultValue: defaultValue
          defaultValues:
          - defaultValues
          - defaultValues
          attributeKey: attributeKey
          metadataField: USERNAME
          validationRegex: validationRegex
          labelTexts:
          - labelTexts
          - labelTexts
      properties:
        mappingId:
          description: Mapping Identifier
          type: string
        name:
          description: Name of Mapping
          type: string
        description:
          description: Description of Mapping
          type: string
        attributes:
          description: List of attributes
          items:
            $ref: '#/components/schemas/MappingAttribute'
          type: array
      type: object
    MappingAttribute:
      example:
        labelMatchingType: FUZZY
        sourceType: CONTENT
        defaultValue: defaultValue
        defaultValues:
        - defaultValues
        - defaultValues
        attributeKey: attributeKey
        metadataField: USERNAME
        validationRegex: validationRegex
        labelTexts:
        - labelTexts
        - labelTexts
      properties:
        attributeKey:
          description: Attribute Key
          type: string
        sourceType:
          $ref: '#/components/schemas/MappingAttributeSourceType'
        defaultValue:
          description: Default value
          type: string
        defaultValues:
          description: Default values
          items:
            type: string
          type: array
        labelTexts:
          items:
            description: Label Text
            type: string
          type: array
        labelMatchingType:
          $ref: '#/components/schemas/MappingAttributeLabelMatchingType'
        metadataField:
          $ref: '#/components/schemas/MappingAttributeMetadataField'
        validationRegex:
          description: Attribute Value Regex Validation
          type: string
      type: object
    MappingAttributeMetadataField:
      description: Attribute Metadata Field
      enum:
      - USERNAME
      - PATH
      - CONTENT_TYPE
      type: string
    MappingAttributeLabelMatchingType:
      description: Attribute Label Matching Type
      enum:
      - FUZZY
      - EXACT
      - BEGINS_WITH
      - CONTAINS
      type: string
    MappingAttributeSourceType:
      description: Attribute Source Type
      enum:
      - CONTENT
      - CONTENT_KEY_VALUE
      - METADATA
      type: string
    GetAttributeAllowedValuesResponse:
      example:
        allowedValues:
        - allowedValues
        - allowedValues
      properties:
        allowedValues:
          description: Attribute's allowed values
          items:
            type: string
          type: array
      type: object
    GetAttributeResponse:
      example:
        attribute:
          dataType: STRING
          type: STANDARD
          key: key
      properties:
        attribute:
          $ref: '#/components/schemas/Attribute'
      type: object
    GetAttributesResponse:
      example:
        next: next
        attributes:
        - dataType: STRING
          type: STANDARD
          key: key
        - dataType: STRING
          type: STANDARD
          key: key
      properties:
        next:
          description: Next page of results token
          type: string
        attributes:
          description: List of attributes
          items:
            $ref: '#/components/schemas/Attribute'
          type: array
      type: object
    Attribute:
      example:
        dataType: STRING
        type: STANDARD
        key: key
      properties:
        type:
          $ref: '#/components/schemas/AttributeType'
        key:
          description: Attribute Key
          type: string
        dataType:
          $ref: '#/components/schemas/AttributeDataType'
      type: object
    AttributeType:
      default: STANDARD
      description: Type of Attribute
      enum:
      - STANDARD
      - OPA
      type: string
    AttributeDataType:
      default: STRING
      description: Data Type of Attribute
      enum:
      - STRING
      - NUMBER
      - BOOLEAN
      - KEY_ONLY
      - PUBLICATION
      type: string
    AddAttributeRequest:
      example:
        attribute:
          dataType: STRING
          type: STANDARD
          key: key
      properties:
        attribute:
          $ref: '#/components/schemas/AddAttribute'
      required:
      - attribute
      type: object
    AddAttribute:
      example:
        dataType: STRING
        type: STANDARD
        key: key
      properties:
        key:
          description: Attribute Key
          type: string
        dataType:
          $ref: '#/components/schemas/AttributeDataType'
        type:
          $ref: '#/components/schemas/AttributeType'
      required:
      - key
      type: object
    AddAttributeResponse:
      example:
        message: message
      properties:
        message:
          description: Response Message
          type: string
      type: object
    GetDocumentsResponse:
      example:
        next: next
        previous: previous
        documents:
        - metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          userId: userId
          version: version
          versionKey: versionKey
          path: path
          insertedDate: insertedDate
          s3version: s3version
          checksum: checksum
          checksumType: SHA1
          siteId: siteId
          documentId: documentId
          contentLength: 0
          contentType: contentType
        - metadata:
          - values:
            - values
            - values
            value: value
            key: key
          - values:
            - values
            - values
            value: value
            key: key
          deepLinkPath: deepLinkPath
          lastModifiedDate: lastModifiedDate
          belongsToDocumentId: belongsToDocumentId
          userId: userId
          version: version
          versionKey: versionKey
          path: path
          insertedDate: insertedDate
          s3version: s3version
          checksum: checksum
          checksumType: SHA1
          siteId: siteId
          documentId: documentId
          contentLength: 0
          contentType: contentType
      properties:
        next:
          description: Next page of results token
          type: string
        previous:
          description: Previous page of results token
          type: string
        documents:
          description: List of documents
          items:
            $ref: '#/components/schemas/Document'
          type: array
      type: object
    GetWebhooksResponse:
      example:
        webhooks:
        - webhookId: webhookId
          insertedDate: insertedDate
          name: name
          siteId: siteId
          userId: userId
          url: url
          enabled: enabled
        - webhookId: webhookId
          insertedDate: insertedDate
          name: name
          siteId: siteId
          userId: userId
          url: url
          enabled: enabled
      properties:
        webhooks:
          description: List of webhooks
          items:
            $ref: '#/components/schemas/GetWebhookResponse'
          type: array
      type: object
    GetWebhookResponse:
      example:
        webhookId: webhookId
        insertedDate: insertedDate
        name: name
        siteId: siteId
        userId: userId
        url: url
        enabled: enabled
      properties:
        siteId:
          description: Site Identifier
          type: string
        name:
          description: Webhook name
          type: string
        url:
          description: Webhook url
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        webhookId:
          description: Webhook Identifier
          type: string
        userId:
          description: User who added document
          type: string
        enabled:
          description: Is webhook enabled
          type: string
      type: object
    GetWebhookTagsResponse:
      example:
        next: next
        previous: previous
        tags:
        - webhookId: webhookId
          insertedDate: insertedDate
          type: type
          userId: userId
          value: value
          key: key
        - webhookId: webhookId
          insertedDate: insertedDate
          type: type
          userId: userId
          value: value
          key: key
      properties:
        next:
          description: Next page of results token
          type: string
        previous:
          description: Previous page of results token
          type: string
        tags:
          description: List of webhook tags
          items:
            $ref: '#/components/schemas/WebhookTag'
          type: array
      type: object
    WebhookTag:
      example:
        webhookId: webhookId
        insertedDate: insertedDate
        type: type
        userId: userId
        value: value
        key: key
      properties:
        insertedDate:
          description: Inserted Timestamp
          type: string
        webhookId:
          description: Webhook Identifier
          type: string
        type:
          description: Tag type
          type: string
        userId:
          description: User who added document
          type: string
        value:
          description: Tag value
          type: string
        key:
          description: Tag key
          type: string
      required:
      - key
      - value
      type: object
    GetDocumentActionsResponse:
      example:
        next: next
        actions:
        - queueId: queueId
          metadata:
            key: metadata
          insertedDate: insertedDate
          type: ANTIVIRUS
          message: message
          userId: userId
          parameters:
            key: parameters
          workflowId: workflowId
          startDate: startDate
          completedDate: completedDate
          status: COMPLETE
          workflowStepId: workflowStepId
        - queueId: queueId
          metadata:
            key: metadata
          insertedDate: insertedDate
          type: ANTIVIRUS
          message: message
          userId: userId
          parameters:
            key: parameters
          workflowId: workflowId
          startDate: startDate
          completedDate: completedDate
          status: COMPLETE
          workflowStepId: workflowStepId
      properties:
        next:
          description: Next page of results token
          type: string
        actions:
          description: List of document actions
          items:
            $ref: '#/components/schemas/DocumentAction'
          type: array
      type: object
    DocumentActionStatus:
      description: Status of the Document Action
      enum:
      - COMPLETE
      - FAILED
      - IN_QUEUE
      - PENDING
      - RUNNING
      - SKIPPED
      - FAILED_RETRY
      type: string
    DocumentActionType:
      description: Type of the Document Action
      enum:
      - ANTIVIRUS
      - DOCUMENTTAGGING
      - FULLTEXT
      - NOTIFICATION
      - OCR
      - QUEUE
      - WEBHOOK
      - IDP
      - PUBLISH
      - PDFEXPORT
      - EVENTBRIDGE
      type: string
    DocumentAction:
      example:
        queueId: queueId
        metadata:
          key: metadata
        insertedDate: insertedDate
        type: ANTIVIRUS
        message: message
        userId: userId
        parameters:
          key: parameters
        workflowId: workflowId
        startDate: startDate
        completedDate: completedDate
        status: COMPLETE
        workflowStepId: workflowStepId
      properties:
        status:
          $ref: '#/components/schemas/DocumentActionStatus'
        type:
          $ref: '#/components/schemas/DocumentActionType'
        queueId:
          description: Queue Id
          type: string
        workflowId:
          description: Workflow Id
          type: string
        workflowStepId:
          description: Workflow Step Id
          type: string
        message:
          description: Action message information
          type: string
        userId:
          description: User who requested the Action
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        startDate:
          description: Started Timestamp
          type: string
        completedDate:
          description: Completed Timestamp
          type: string
        parameters:
          additionalProperties:
            type: string
          description: Action parameters
          type: object
        metadata:
          additionalProperties:
            type: string
          description: Action metadata
          type: object
      type: object
    OcrKeyValues:
      example:
        values:
        - values
        - values
        key: key
      properties:
        key:
          description: Ocr Key
          type: string
        values:
          items:
            type: string
          type: array
      type: object
    GetDocumentOcrResponse:
      example:
        contentUrls:
        - contentUrls
        - contentUrls
        ocrEngine: ocrEngine
        data: data
        insertedDate: insertedDate
        ocrStatus: ocrStatus
        documentId: documentId
        keyValues:
        - values:
          - values
          - values
          key: key
        - values:
          - values
          - values
          key: key
        contentType: contentType
        isBase64: true
        userId: userId
      properties:
        contentUrls:
          description: Presigned S3 Urls for the OCR content
          items:
            type: string
          type: array
        keyValues:
          description: List of ocr key / values
          items:
            $ref: '#/components/schemas/OcrKeyValues'
          type: array
        data:
          description: OCR text result
          type: string
        ocrEngine:
          description: The OCR technique used
          type: string
        ocrStatus:
          description: The status of the OCR request
          type: string
        contentType:
          description: Document Content-Type
          type: string
        isBase64:
          description: Is the content Base64-encoded?
          type: boolean
        userId:
          description: User who requested the OCR
          type: string
        documentId:
          description: Document Identifier
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
      type: object
    AddDocumentActionsResponse:
      example:
        message: message
      properties:
        message:
          description: Document Action message
          type: string
      type: object
    AddDocumentActionsRetryResponse:
      example:
        message: message
      properties:
        message:
          description: Document Action message
          type: string
      type: object
    AddDocumentOcrResponse:
      example:
        message: message
      properties:
        message:
          description: OCR processing message
          type: string
      type: object
    AddDocumentFulltextResponse:
      example:
        message: message
      properties:
        message:
          description: Full text processing message
          type: string
      type: object
    UpdateDocumentFulltextResponse:
      example:
        message: message
      properties:
        message:
          description: Full text processing message
          type: string
      type: object
    SetDocumentFulltextResponse:
      example:
        message: message
      properties:
        message:
          description: Full text processing message
          type: string
      type: object
    SetDocumentFulltextRequest:
      example:
        path: path
        metadata:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
        contentUrls:
        - contentUrls
        - contentUrls
        deepLinkPath: deepLinkPath
        contentType: contentType
        content: content
        tags:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
      properties:
        contentType:
          description: Document Content-Type
          type: string
        content:
          description: Document content
          type: string
        contentUrls:
          description: URL(s) which contain document content
          items:
            type: string
          type: array
        path:
          description: Path or Name of document
          type: string
        deepLinkPath:
          description: Path or Name of deep link
          type: string
        tags:
          description: List of document tags
          items:
            $ref: '#/components/schemas/AddDocumentTag'
          type: array
        metadata:
          description: List of document Metadata
          items:
            $ref: '#/components/schemas/AddDocumentMetadata'
          type: array
      type: object
    AddDocumentFulltextRequest:
      example:
        path: path
        metadata:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
        contentUrls:
        - contentUrls
        - contentUrls
        deepLinkPath: deepLinkPath
        contentType: contentType
        content: content
        tags:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
      properties:
        contentType:
          description: Document Content-Type
          type: string
        content:
          description: Document content
          type: string
        contentUrls:
          description: URL(s) which contain document content
          items:
            type: string
          type: array
        path:
          description: Path or Name of document
          type: string
        deepLinkPath:
          description: Path or Name of deep link
          type: string
        tags:
          description: List of document tags
          items:
            $ref: '#/components/schemas/AddDocumentTag'
          type: array
        metadata:
          description: List of document Metadata
          items:
            $ref: '#/components/schemas/AddDocumentMetadata'
          type: array
      type: object
    UpdateDocumentFulltextRequest:
      example:
        path: path
        metadata:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
        contentUrls:
        - contentUrls
        - contentUrls
        deepLinkPath: deepLinkPath
        contentType: contentType
        content: content
        tags:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
      properties:
        contentType:
          description: Document Content-Type
          type: string
        content:
          description: Document content
          type: string
        contentUrls:
          description: URL(s) which contain document content
          items:
            type: string
          type: array
        path:
          description: Path or Name of document
          type: string
        deepLinkPath:
          description: Path or Name of deep link
          type: string
        tags:
          description: List of document tags
          items:
            $ref: '#/components/schemas/AddDocumentTag'
          type: array
        metadata:
          description: List of document Metadata
          items:
            $ref: '#/components/schemas/AddDocumentMetadata'
          type: array
      type: object
    SetAntivirusRequest:
      type: object
    SetAntivirusResponse:
      example:
        message: message
      properties:
        message:
          description: Antivirus processing message
          type: string
      type: object
    AddDocumentActionsRequest:
      example:
        actions:
        - queueId: queueId
          type: ANTIVIRUS
          parameters:
            mappingId: mappingId
            characterMax: characterMax
            ocrEngine: TESSERACT
            ocrParseTypes: ocrParseTypes
            ocrOutputType: CSV
            addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
            ocrNumberOfPages: ocrNumberOfPages
            notificationType: email
            notificationToCc: notificationToCc
            notificationToBcc: notificationToBcc
            url: url
            tags: tags
            notificationSubject: notificationSubject
            engine: chatgpt
            notificationText: notificationText
            eventBusName: eventBusName
            notificationHtml: notificationHtml
        - queueId: queueId
          type: ANTIVIRUS
          parameters:
            mappingId: mappingId
            characterMax: characterMax
            ocrEngine: TESSERACT
            ocrParseTypes: ocrParseTypes
            ocrOutputType: CSV
            addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
            ocrNumberOfPages: ocrNumberOfPages
            notificationType: email
            notificationToCc: notificationToCc
            notificationToBcc: notificationToBcc
            url: url
            tags: tags
            notificationSubject: notificationSubject
            engine: chatgpt
            notificationText: notificationText
            eventBusName: eventBusName
            notificationHtml: notificationHtml
      properties:
        actions:
          description: List of Actions
          items:
            $ref: '#/components/schemas/AddAction'
          type: array
      type: object
    AddAction:
      example:
        queueId: queueId
        type: ANTIVIRUS
        parameters:
          mappingId: mappingId
          characterMax: characterMax
          ocrEngine: TESSERACT
          ocrParseTypes: ocrParseTypes
          ocrOutputType: CSV
          addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
          ocrNumberOfPages: ocrNumberOfPages
          notificationType: email
          notificationToCc: notificationToCc
          notificationToBcc: notificationToBcc
          url: url
          tags: tags
          notificationSubject: notificationSubject
          engine: chatgpt
          notificationText: notificationText
          eventBusName: eventBusName
          notificationHtml: notificationHtml
      properties:
        type:
          $ref: '#/components/schemas/DocumentActionType'
        parameters:
          $ref: '#/components/schemas/AddActionParameters'
        queueId:
          description: Id of Queue
          type: string
      required:
      - type
      type: object
    OcrEngine:
      description: Type of OCR Engine to use
      enum:
      - TESSERACT
      - TEXTRACT
      type: string
    OcrOutputType:
      description: OCR Engine output format (textract table only)
      enum:
      - CSV
      type: string
    AddActionParameters:
      example:
        mappingId: mappingId
        characterMax: characterMax
        ocrEngine: TESSERACT
        ocrParseTypes: ocrParseTypes
        ocrOutputType: CSV
        addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
        ocrNumberOfPages: ocrNumberOfPages
        notificationType: email
        notificationToCc: notificationToCc
        notificationToBcc: notificationToBcc
        url: url
        tags: tags
        notificationSubject: notificationSubject
        engine: chatgpt
        notificationText: notificationText
        eventBusName: eventBusName
        notificationHtml: notificationHtml
      properties:
        ocrParseTypes:
          description: "OCR: Parse types - TEXT, FORMS, TABLES"
          type: string
        ocrEngine:
          $ref: '#/components/schemas/OcrEngine'
        ocrOutputType:
          $ref: '#/components/schemas/OcrOutputType'
        ocrNumberOfPages:
          description: Number of pages to OCR (from start) (-1 all)
          type: string
        addPdfDetectedCharactersAsText:
          description: "OCR: For the rewriting of the PDF document, converting any\
            \ image text to searchable text"
          type: string
        url:
          description: "Webhook: Callback URL"
          type: string
        characterMax:
          description: "Fulltext: Maximum number of characters (-1 unlimited, Typesense\
            \ defaults to 2048 characters)"
          type: string
        engine:
          description: "DocumentTagging: Engine to use for document tagging generation"
          enum:
          - chatgpt
          type: string
        notificationType:
          description: Notification Type
          enum:
          - email
          type: string
        notificationToCc:
          description: Who to carbon copy on the notification to (comma-delimited
            list)
          type: string
        notificationToBcc:
          description: Who to blind carbon copy on the notification to (comma-delimited
            list)
          type: string
        notificationSubject:
          description: Subject of the notification
          type: string
        notificationText:
          description: Text of the notification
          type: string
        notificationHtml:
          description: Html of the notification
          type: string
        tags:
          description: "DocumentTagging: Comma-deliminted list of keywords to generate\
            \ tags for"
          type: string
        mappingId:
          description: Id of Mapping
          type: string
        eventBusName:
          description: The name or ARN of the event bus to receive the event
          type: string
      type: object
    AddDocumentOcrRequest:
      example:
        parseTypes:
        - TEXT
        - FORMS
        - TABLES
      properties:
        parseTypes:
          description: "OCR Parse types - TEXT, FORMS, TABLES"
          items:
            type: string
          type: array
        addPdfDetectedCharactersAsText:
          description: "Rewrite PDF document, converting any Image text to searchable\
            \ text"
          type: boolean
        ocrEngine:
          $ref: '#/components/schemas/OcrEngine'
        ocrNumberOfPages:
          description: Number of pages to OCR (from start) (-1 all)
          type: string
        ocrOutputType:
          $ref: '#/components/schemas/OcrOutputType'
      type: object
    SetDocumentOcrRequest:
      example:
        contentType: contentType
        isBase64: true
        content: content
      properties:
        contentType:
          description: Document Content-Type
          type: string
        isBase64:
          description: Is the content Base64-encoded?
          type: boolean
        content:
          description: Document content
          type: string
      required:
      - content
      type: object
    GetVersionResponse:
      example:
        type: type
        version: version
        appEnvironment: appEnvironment
        modules:
        - modules
        - modules
      properties:
        version:
          description: FormKiQ version
          type: string
        type:
          description: FormKiQ type
          type: string
        appEnvironment:
          description: FormKiQ App Environment
          type: string
        modules:
          description: List of installed modules
          items:
            type: string
          type: array
      type: object
    UpdateConfigurationRequest:
      example:
        maxContentLengthBytes: maxContentLengthBytes
        maxDocuments: maxDocuments
        chatGptApiKey: chatGptApiKey
        docusign:
          rsaPrivateKey: rsaPrivateKey
          userId: userId
          hmacSignature: hmacSignature
          integrationKey: integrationKey
        google:
          workloadIdentityServiceAccount: workloadIdentityServiceAccount
          workloadIdentityAudience: workloadIdentityAudience
        maxWebhooks: maxWebhooks
        notificationEmail: notificationEmail
      properties:
        chatGptApiKey:
          description: ChatGPT Api Key
          type: string
        maxContentLengthBytes:
          description: Set Maximum Document Content Length in Bytes
          type: string
        maxDocuments:
          description: Set Maximum number of Documents allowed
          type: string
        maxWebhooks:
          description: Set Maximum number of Webhooks allowed
          type: string
        notificationEmail:
          description: Email address to use for notifications
          type: string
        google:
          $ref: '#/components/schemas/GoogleConfig'
        docusign:
          $ref: '#/components/schemas/DocusignConfig'
      type: object
    UpdateConfigurationResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    AddApiKeyRequest:
      example:
        permissions:
        - READ
        - READ
        name: name
      properties:
        name:
          description: Name of API Key
          type: string
        permissions:
          description: List of permissions
          items:
            enum:
            - READ
            - WRITE
            - DELETE
            - GOVERN
            type: string
          type: array
      type: object
    AddApiKeyResponse:
      example:
        apiKey: apiKey
      properties:
        apiKey:
          description: API Key Identifier
          type: string
      type: object
    DeleteQueueResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    DeleteWorkflowResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    DeleteFulltextResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    DeleteRulesetResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    DeleteRuleResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    DeleteApiKeyResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    GetOpaAccessPoliciesResponse:
      example:
        next: next
        opaPolicies:
        - siteId: siteId
          policy: policy
        - siteId: siteId
          policy: policy
      properties:
        next:
          description: Next page of results token
          type: string
        opaPolicies:
          description: List of OPA policies
          items:
            $ref: '#/components/schemas/OpaPolicy'
          type: array
      type: object
    OpaPolicy:
      example:
        siteId: siteId
        policy: policy
      properties:
        siteId:
          description: SiteId to apply OPA Policy to
          type: string
        policy:
          description: OPA Policy in REGO format
          type: string
      type: object
    OpaPolicyAttribute:
      example:
        lt:
          numberValue: 5.962133916683182
        gte:
          numberValue: 1.4658129805029452
        neq:
          stringValue: stringValue
        eq:
          input:
            matchUsername: true
          stringValue: stringValue
          booleanValue: true
          numberValue: 0.8008281904610115
        lte:
          numberValue: 5.637376656633329
        gt:
          numberValue: 6.027456183070403
        key: key
      properties:
        key:
          description: Attribute Key
          type: string
        eq:
          $ref: '#/components/schemas/OpaPolicyAttributeEq'
        gt:
          $ref: '#/components/schemas/OpaPolicyAttributeGt'
        gte:
          $ref: '#/components/schemas/OpaPolicyAttributeGte'
        lt:
          $ref: '#/components/schemas/OpaPolicyAttributeLt'
        lte:
          $ref: '#/components/schemas/OpaPolicyAttributeLte'
        neq:
          $ref: '#/components/schemas/OpaPolicyAttributeNeq'
      type: object
    OpaPolicyAttributeEq:
      description: Attribute EQ criteria
      example:
        input:
          matchUsername: true
        stringValue: stringValue
        booleanValue: true
        numberValue: 0.8008281904610115
      properties:
        stringValue:
          description: The value to compare the Attribute Key value to
          type: string
        numberValue:
          description: The value to compare the Attribute Key value to
          type: number
        booleanValue:
          description: The value to compare the Attribute Key value to
          type: boolean
        input:
          $ref: '#/components/schemas/OpaPolicyAttributeInput'
      type: object
    OpaPolicyAttributeGt:
      description: Attribute greater than criteria
      example:
        numberValue: 6.027456183070403
      properties:
        numberValue:
          description: The value to compare the Attribute Key value to
          type: number
      type: object
    OpaPolicyAttributeGte:
      description: Attribute greater than and equals to criteria
      example:
        numberValue: 1.4658129805029452
      properties:
        numberValue:
          description: The value to compare the Attribute Key value to
          type: number
      type: object
    OpaPolicyAttributeLt:
      description: Attribute less than criteria
      example:
        numberValue: 5.962133916683182
      properties:
        numberValue:
          description: The value to compare the Attribute Key value to
          type: number
      type: object
    OpaPolicyAttributeLte:
      description: Attribute less than and equals to criteria
      example:
        numberValue: 5.637376656633329
      properties:
        numberValue:
          description: The value to compare the Attribute Key value to
          type: number
      type: object
    OpaPolicyAttributeNeq:
      description: Attribute not equal to criteria
      example:
        stringValue: stringValue
      properties:
        stringValue:
          description: The value to compare the Attribute Key value to
          type: string
      type: object
    OpaPolicyAttributeInput:
      example:
        matchUsername: true
      properties:
        matchUsername:
          description: Match Input Username
          type: boolean
      type: object
    OpaPolicyItemType:
      description: Type of Opa Policy Item
      enum:
      - ALLOW
      type: string
    OpaPolicyItem:
      example:
        anyRoles:
        - anyRoles
        - anyRoles
        allRoles:
        - allRoles
        - allRoles
        attributes:
        - lt:
            numberValue: 5.962133916683182
          gte:
            numberValue: 1.4658129805029452
          neq:
            stringValue: stringValue
          eq:
            input:
              matchUsername: true
            stringValue: stringValue
            booleanValue: true
            numberValue: 0.8008281904610115
          lte:
            numberValue: 5.637376656633329
          gt:
            numberValue: 6.027456183070403
          key: key
        - lt:
            numberValue: 5.962133916683182
          gte:
            numberValue: 1.4658129805029452
          neq:
            stringValue: stringValue
          eq:
            input:
              matchUsername: true
            stringValue: stringValue
            booleanValue: true
            numberValue: 0.8008281904610115
          lte:
            numberValue: 5.637376656633329
          gt:
            numberValue: 6.027456183070403
          key: key
        type: ALLOW
        policy: policy
      properties:
        type:
          $ref: '#/components/schemas/OpaPolicyItemType'
        policy:
          description: OPA Policy in REGO format
          type: string
        allRoles:
          description: User must match all roles
          items:
            type: string
          type: array
        anyRoles:
          description: User must match any role
          items:
            type: string
          type: array
        attributes:
          items:
            $ref: '#/components/schemas/OpaPolicyAttribute'
          type: array
      type: object
    SetOpaAccessPolicyItemsRequest:
      example:
        policyItems:
        - anyRoles:
          - anyRoles
          - anyRoles
          allRoles:
          - allRoles
          - allRoles
          attributes:
          - lt:
              numberValue: 5.962133916683182
            gte:
              numberValue: 1.4658129805029452
            neq:
              stringValue: stringValue
            eq:
              input:
                matchUsername: true
              stringValue: stringValue
              booleanValue: true
              numberValue: 0.8008281904610115
            lte:
              numberValue: 5.637376656633329
            gt:
              numberValue: 6.027456183070403
            key: key
          - lt:
              numberValue: 5.962133916683182
            gte:
              numberValue: 1.4658129805029452
            neq:
              stringValue: stringValue
            eq:
              input:
                matchUsername: true
              stringValue: stringValue
              booleanValue: true
              numberValue: 0.8008281904610115
            lte:
              numberValue: 5.637376656633329
            gt:
              numberValue: 6.027456183070403
            key: key
          type: ALLOW
          policy: policy
        - anyRoles:
          - anyRoles
          - anyRoles
          allRoles:
          - allRoles
          - allRoles
          attributes:
          - lt:
              numberValue: 5.962133916683182
            gte:
              numberValue: 1.4658129805029452
            neq:
              stringValue: stringValue
            eq:
              input:
                matchUsername: true
              stringValue: stringValue
              booleanValue: true
              numberValue: 0.8008281904610115
            lte:
              numberValue: 5.637376656633329
            gt:
              numberValue: 6.027456183070403
            key: key
          - lt:
              numberValue: 5.962133916683182
            gte:
              numberValue: 1.4658129805029452
            neq:
              stringValue: stringValue
            eq:
              input:
                matchUsername: true
              stringValue: stringValue
              booleanValue: true
              numberValue: 0.8008281904610115
            lte:
              numberValue: 5.637376656633329
            gt:
              numberValue: 6.027456183070403
            key: key
          type: ALLOW
          policy: policy
      properties:
        policyItems:
          description: List of OPA policy items
          items:
            $ref: '#/components/schemas/OpaPolicyItem'
          type: array
      type: object
    GetOpaAccessPolicyResponse:
      example:
        opaPolicy: opaPolicy
      properties:
        opaPolicy:
          description: OPA Policy in REGO format
          type: string
      type: object
    GetOpaAccessPolicyItemsResponse:
      example:
        policyItems:
        - anyRoles:
          - anyRoles
          - anyRoles
          allRoles:
          - allRoles
          - allRoles
          attributes:
          - lt:
              numberValue: 5.962133916683182
            gte:
              numberValue: 1.4658129805029452
            neq:
              stringValue: stringValue
            eq:
              input:
                matchUsername: true
              stringValue: stringValue
              booleanValue: true
              numberValue: 0.8008281904610115
            lte:
              numberValue: 5.637376656633329
            gt:
              numberValue: 6.027456183070403
            key: key
          - lt:
              numberValue: 5.962133916683182
            gte:
              numberValue: 1.4658129805029452
            neq:
              stringValue: stringValue
            eq:
              input:
                matchUsername: true
              stringValue: stringValue
              booleanValue: true
              numberValue: 0.8008281904610115
            lte:
              numberValue: 5.637376656633329
            gt:
              numberValue: 6.027456183070403
            key: key
          type: ALLOW
          policy: policy
        - anyRoles:
          - anyRoles
          - anyRoles
          allRoles:
          - allRoles
          - allRoles
          attributes:
          - lt:
              numberValue: 5.962133916683182
            gte:
              numberValue: 1.4658129805029452
            neq:
              stringValue: stringValue
            eq:
              input:
                matchUsername: true
              stringValue: stringValue
              booleanValue: true
              numberValue: 0.8008281904610115
            lte:
              numberValue: 5.637376656633329
            gt:
              numberValue: 6.027456183070403
            key: key
          - lt:
              numberValue: 5.962133916683182
            gte:
              numberValue: 1.4658129805029452
            neq:
              stringValue: stringValue
            eq:
              input:
                matchUsername: true
              stringValue: stringValue
              booleanValue: true
              numberValue: 0.8008281904610115
            lte:
              numberValue: 5.637376656633329
            gt:
              numberValue: 6.027456183070403
            key: key
          type: ALLOW
          policy: policy
      properties:
        policyItems:
          items:
            $ref: '#/components/schemas/OpaPolicyItem'
          type: array
      type: object
    DeleteCaseResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    DeleteCaseNigoDocumentResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    DeleteCaseNigoResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    DeleteCaseDocumentResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    DeleteCaseTaskDocumentResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    DeleteCaseTaskResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    GetApiKeysResponse:
      example:
        apiKeys:
        - apiKey: apiKey
          insertedDate: insertedDate
          permissions:
          - READ
          - READ
          name: name
          siteId: siteId
          userId: userId
        - apiKey: apiKey
          insertedDate: insertedDate
          permissions:
          - READ
          - READ
          name: name
          siteId: siteId
          userId: userId
      properties:
        apiKeys:
          description: List of ApiKeys
          items:
            $ref: '#/components/schemas/ApiKey'
          type: array
      type: object
    ApiKey:
      example:
        apiKey: apiKey
        insertedDate: insertedDate
        permissions:
        - READ
        - READ
        name: name
        siteId: siteId
        userId: userId
      properties:
        name:
          description: Name of API Key
          type: string
        apiKey:
          description: API Key value
          type: string
        userId:
          type: string
        siteId:
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        permissions:
          description: List of permissions
          items:
            enum:
            - READ
            - WRITE
            - DELETE
            - GOVERN
            type: string
          type: array
      type: object
    GetConfigurationResponse:
      example:
        maxContentLengthBytes: maxContentLengthBytes
        maxDocuments: maxDocuments
        chatGptApiKey: chatGptApiKey
        docusign:
          rsaPrivateKey: rsaPrivateKey
          userId: userId
          hmacSignature: hmacSignature
          integrationKey: integrationKey
        google:
          workloadIdentityServiceAccount: workloadIdentityServiceAccount
          workloadIdentityAudience: workloadIdentityAudience
        maxWebhooks: maxWebhooks
        notificationEmail: notificationEmail
      properties:
        chatGptApiKey:
          description: ChatGPT API Key
          type: string
        maxContentLengthBytes:
          description: Set Maximum Document Content Length in Bytes
          type: string
        maxDocuments:
          description: Set Maximum number of Documents allowed
          type: string
        maxWebhooks:
          description: Set Maximum number of Webhooks allowed
          type: string
        notificationEmail:
          description: Email address to use for notifications (Must be verified identity
            created in AWS SES)
          type: string
        google:
          $ref: '#/components/schemas/GoogleConfig'
        docusign:
          $ref: '#/components/schemas/DocusignConfig'
      type: object
    GoogleConfig:
      example:
        workloadIdentityServiceAccount: workloadIdentityServiceAccount
        workloadIdentityAudience: workloadIdentityAudience
      properties:
        workloadIdentityAudience:
          description: Workload Identity Audience
          type: string
        workloadIdentityServiceAccount:
          description: Workload Service Account
          type: string
      type: object
    DocusignConfig:
      example:
        rsaPrivateKey: rsaPrivateKey
        userId: userId
        hmacSignature: hmacSignature
        integrationKey: integrationKey
      properties:
        userId:
          description: Docusign UserId
          type: string
        integrationKey:
          description: Docusign Integration Key or ClientId
          type: string
        rsaPrivateKey:
          description: Docusign Rsa Private Key
          type: string
        hmacSignature:
          description: "Enabled security with Docusign Connect using HMAC keys. When\
            \ enabled these keys are known only by Docusign and your app, and will\
            \ be used to sign all Connect messages sent from your Docusign account\
            \ to your application."
          type: string
      type: object
    GetUsersInGroupResponse:
      example:
        next: next
        users:
        - userStatus: userStatus
          insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          attributes:
            zoneinfo: zoneinfo
            website: website
            address: address
            birthdate: birthdate
            gender: gender
            preferredUsername: preferredUsername
            givenName: givenName
            profile: profile
            locale: locale
            picture: picture
            phoneNumber: phoneNumber
            familyName: familyName
            name: name
            nickname: nickname
            middleName: middleName
            updatedAt: updatedAt
          email: email
          enabled: true
          username: username
        - userStatus: userStatus
          insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          attributes:
            zoneinfo: zoneinfo
            website: website
            address: address
            birthdate: birthdate
            gender: gender
            preferredUsername: preferredUsername
            givenName: givenName
            profile: profile
            locale: locale
            picture: picture
            phoneNumber: phoneNumber
            familyName: familyName
            name: name
            nickname: nickname
            middleName: middleName
            updatedAt: updatedAt
          email: email
          enabled: true
          username: username
      properties:
        next:
          description: Next page of results token
          type: string
        users:
          description: List of users
          items:
            $ref: '#/components/schemas/User'
          type: array
      type: object
    AddGroupRequest:
      example:
        group:
          name: name
          description: description
      properties:
        group:
          $ref: '#/components/schemas/AddGroup'
      required:
      - group
      type: object
    AddGroup:
      example:
        name: name
        description: description
      properties:
        name:
          description: Name of Group
          type: string
        description:
          description: Description of Group
          type: string
      type: object
    AddUserRequest:
      example:
        user:
          attributes:
            zoneinfo: zoneinfo
            website: website
            address: address
            birthdate: birthdate
            gender: gender
            preferredUsername: preferredUsername
            givenName: givenName
            profile: profile
            locale: locale
            picture: picture
            phoneNumber: phoneNumber
            familyName: familyName
            name: name
            nickname: nickname
            middleName: middleName
            updatedAt: updatedAt
          username: username
      properties:
        user:
          $ref: '#/components/schemas/AddUser'
      required:
      - user
      type: object
    AddUser:
      example:
        attributes:
          zoneinfo: zoneinfo
          website: website
          address: address
          birthdate: birthdate
          gender: gender
          preferredUsername: preferredUsername
          givenName: givenName
          profile: profile
          locale: locale
          picture: picture
          phoneNumber: phoneNumber
          familyName: familyName
          name: name
          nickname: nickname
          middleName: middleName
          updatedAt: updatedAt
        username: username
      properties:
        username:
          description: Email address of user
          type: string
        attributes:
          $ref: '#/components/schemas/UserAttributes'
      type: object
    User:
      example:
        userStatus: userStatus
        insertedDate: insertedDate
        lastModifiedDate: lastModifiedDate
        attributes:
          zoneinfo: zoneinfo
          website: website
          address: address
          birthdate: birthdate
          gender: gender
          preferredUsername: preferredUsername
          givenName: givenName
          profile: profile
          locale: locale
          picture: picture
          phoneNumber: phoneNumber
          familyName: familyName
          name: name
          nickname: nickname
          middleName: middleName
          updatedAt: updatedAt
        email: email
        enabled: true
        username: username
      properties:
        username:
          description: Username of user
          type: string
        email:
          description: Email of user
          type: string
        enabled:
          description: whether the user is enabled
          type: boolean
        userStatus:
          description: Status of user
          type: string
        insertedDate:
          description: Inserted timestamp of user
          type: string
        lastModifiedDate:
          description: Last nodified timestamp of user
          type: string
        attributes:
          $ref: '#/components/schemas/UserAttributes'
      type: object
    UserAttributes:
      example:
        zoneinfo: zoneinfo
        website: website
        address: address
        birthdate: birthdate
        gender: gender
        preferredUsername: preferredUsername
        givenName: givenName
        profile: profile
        locale: locale
        picture: picture
        phoneNumber: phoneNumber
        familyName: familyName
        name: name
        nickname: nickname
        middleName: middleName
        updatedAt: updatedAt
      properties:
        address:
          description: Address of user
          type: string
        birthdate:
          description: Birthdate of user
          type: string
        familyName:
          description: Family name of user
          type: string
        gender:
          description: Gender of user
          type: string
        givenName:
          description: Given name of user
          type: string
        locale:
          description: Locale of user
          type: string
        middleName:
          description: Middle name of user
          type: string
        name:
          description: Name of user
          type: string
        nickname:
          description: Nickname of user
          type: string
        phoneNumber:
          description: Phone number of user
          type: string
        picture:
          description: Picture of user
          type: string
        preferredUsername:
          description: Preferred username of user
          type: string
        profile:
          description: Profile of user
          type: string
        zoneinfo:
          description: Zoneinfo of user
          type: string
        updatedAt:
          description: Updated at date of user
          type: string
        website:
          description: Website of user
          type: string
      type: object
    GetGroupsResponse:
      example:
        next: next
        groups:
        - insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          name: name
          description: description
        - insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          name: name
          description: description
      properties:
        next:
          description: Next page of results token
          type: string
        groups:
          description: List of groups
          items:
            $ref: '#/components/schemas/Group'
          type: array
      type: object
    GetGroupResponse:
      example:
        group:
          insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          name: name
          description: description
      properties:
        group:
          $ref: '#/components/schemas/Group'
      type: object
    GetUserResponse:
      example:
        user:
          userStatus: userStatus
          insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          attributes:
            zoneinfo: zoneinfo
            website: website
            address: address
            birthdate: birthdate
            gender: gender
            preferredUsername: preferredUsername
            givenName: givenName
            profile: profile
            locale: locale
            picture: picture
            phoneNumber: phoneNumber
            familyName: familyName
            name: name
            nickname: nickname
            middleName: middleName
            updatedAt: updatedAt
          email: email
          enabled: true
          username: username
      properties:
        user:
          $ref: '#/components/schemas/User'
      type: object
    GetUserGroupsResponse:
      example:
        next: next
        groups:
        - insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          name: name
          description: description
        - insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          name: name
          description: description
      properties:
        next:
          description: Next page of results token
          type: string
        groups:
          description: List of groups
          items:
            $ref: '#/components/schemas/Group'
          type: array
      type: object
    GetUsersResponse:
      example:
        next: next
        users:
        - userStatus: userStatus
          insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          attributes:
            zoneinfo: zoneinfo
            website: website
            address: address
            birthdate: birthdate
            gender: gender
            preferredUsername: preferredUsername
            givenName: givenName
            profile: profile
            locale: locale
            picture: picture
            phoneNumber: phoneNumber
            familyName: familyName
            name: name
            nickname: nickname
            middleName: middleName
            updatedAt: updatedAt
          email: email
          enabled: true
          username: username
        - userStatus: userStatus
          insertedDate: insertedDate
          lastModifiedDate: lastModifiedDate
          attributes:
            zoneinfo: zoneinfo
            website: website
            address: address
            birthdate: birthdate
            gender: gender
            preferredUsername: preferredUsername
            givenName: givenName
            profile: profile
            locale: locale
            picture: picture
            phoneNumber: phoneNumber
            familyName: familyName
            name: name
            nickname: nickname
            middleName: middleName
            updatedAt: updatedAt
          email: email
          enabled: true
          username: username
      properties:
        next:
          description: Next page of results token
          type: string
        users:
          description: List of users
          items:
            $ref: '#/components/schemas/User'
          type: array
      type: object
    Group:
      example:
        insertedDate: insertedDate
        lastModifiedDate: lastModifiedDate
        name: name
        description: description
      properties:
        name:
          description: Name of group
          type: string
        description:
          description: Description of group
          type: string
        insertedDate:
          description: Inserted timestamp of group
          type: string
        lastModifiedDate:
          description: Last nodified timestamp of group
          type: string
      type: object
    SetGroupPermissionsRequest:
      example:
        permissions:
        - ADMIN
        - ADMIN
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/SiteGroupPermissions'
          type: array
      type: object
    SetOpenSearchIndexRequest:
      example:
        indexSettings:
          numberOfReplicas: numberOfReplicas
          numberOfShards: numberOfShards
      properties:
        indexSettings:
          $ref: '#/components/schemas/OpenSearchIndex'
      type: object
    SetOpenSearchIndexResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    AddResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    UpdateResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    SetResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    DeleteResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    GetSiteGroupsResponse:
      example:
        groupNames:
        - groupNames
        - groupNames
      properties:
        groupNames:
          items:
            type: string
          type: array
      type: object
    GetSiteGroupResponse:
      example:
        group:
          permissions:
          - ADMIN
          - ADMIN
      properties:
        group:
          $ref: '#/components/schemas/SiteGroup'
      type: object
    SiteGroup:
      example:
        permissions:
        - ADMIN
        - ADMIN
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/SiteGroupPermissions'
          type: array
      type: object
    GetOpenSearchIndexResponse:
      example:
        indexSettings:
          numberOfReplicas: numberOfReplicas
          numberOfShards: numberOfShards
      properties:
        indexSettings:
          $ref: '#/components/schemas/OpenSearchIndex'
      type: object
    OpenSearchIndex:
      example:
        numberOfReplicas: numberOfReplicas
        numberOfShards: numberOfShards
      properties:
        numberOfReplicas:
          description: The number of replicas per shard
          type: string
        numberOfShards:
          description: The number of shards in index
          type: string
      type: object
    GetSitesResponse:
      example:
        sites:
        - uploadEmail: uploadEmail
          permissions:
          - ADMIN
          - ADMIN
          siteId: siteId
          permission: READ_WRITE
          title: title
          status: ACTIVE
        - uploadEmail: uploadEmail
          permissions:
          - ADMIN
          - ADMIN
          siteId: siteId
          permission: READ_WRITE
          title: title
          status: ACTIVE
        username: username
      properties:
        username:
          description: Username of request caller
          type: string
        sites:
          description: List of sites
          items:
            $ref: '#/components/schemas/Site'
          type: array
      type: object
    Site:
      example:
        uploadEmail: uploadEmail
        permissions:
        - ADMIN
        - ADMIN
        siteId: siteId
        permission: READ_WRITE
        title: title
        status: ACTIVE
      properties:
        siteId:
          description: Site Identifier
          type: string
        title:
          description: Site Title
          type: string
        status:
          $ref: '#/components/schemas/SiteStatus'
        permission:
          description: SiteId permission level
          enum:
          - READ_WRITE
          - READ_ONLY
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/SiteGroupPermissions'
          type: array
        uploadEmail:
          description: SiteId document upload email address
          type: string
      type: object
    AddClassificationResponse:
      example:
        classificationId: classificationId
      properties:
        classificationId:
          description: Classification Identifier
          type: string
      type: object
    ErrorsResponse:
      example:
        errors:
        - error: error
          key: key
        - error: error
          key: key
      properties:
        errors:
          description: List of errors
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    Error:
      example:
        error: error
        key: key
      properties:
        key:
          description: Error Key
          type: string
        error:
          description: Error Message
          type: string
      type: object
    AddQueueRequest:
      example:
        name: name
      properties:
        name:
          description: Queue name
          type: string
      required:
      - name
      type: object
    UpdateWorkflowRequest:
      example:
        name: name
        description: description
        status: ACTIVE
      properties:
        name:
          description: Workflow name
          type: string
        description:
          description: Workflow description
          type: string
        status:
          $ref: '#/components/schemas/WorkflowStatus'
      type: object
    SetWorkflowRequest:
      example:
        name: name
        description: description
        steps:
        - stepId: stepId
          action:
            queueId: queueId
            type: ANTIVIRUS
            parameters:
              mappingId: mappingId
              characterMax: characterMax
              ocrEngine: TESSERACT
              ocrParseTypes: ocrParseTypes
              ocrOutputType: CSV
              addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
              ocrNumberOfPages: ocrNumberOfPages
              notificationType: email
              notificationToCc: notificationToCc
              notificationToBcc: notificationToBcc
              url: url
              tags: tags
              notificationSubject: notificationSubject
              engine: chatgpt
              notificationText: notificationText
              eventBusName: eventBusName
              notificationHtml: notificationHtml
          decisions:
          - nextStepId: nextStepId
            type: APPROVE
          - nextStepId: nextStepId
            type: APPROVE
          queue:
            queueId: queueId
            approvalGroups:
            - approvalGroups
            - approvalGroups
        - stepId: stepId
          action:
            queueId: queueId
            type: ANTIVIRUS
            parameters:
              mappingId: mappingId
              characterMax: characterMax
              ocrEngine: TESSERACT
              ocrParseTypes: ocrParseTypes
              ocrOutputType: CSV
              addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
              ocrNumberOfPages: ocrNumberOfPages
              notificationType: email
              notificationToCc: notificationToCc
              notificationToBcc: notificationToBcc
              url: url
              tags: tags
              notificationSubject: notificationSubject
              engine: chatgpt
              notificationText: notificationText
              eventBusName: eventBusName
              notificationHtml: notificationHtml
          decisions:
          - nextStepId: nextStepId
            type: APPROVE
          - nextStepId: nextStepId
            type: APPROVE
          queue:
            queueId: queueId
            approvalGroups:
            - approvalGroups
            - approvalGroups
        status: ACTIVE
      properties:
        name:
          description: Workflow name
          type: string
        description:
          description: Workflow description
          type: string
        status:
          $ref: '#/components/schemas/WorkflowStatus'
        steps:
          description: Workflow Steps
          items:
            $ref: '#/components/schemas/AddWorkflowStep'
          type: array
      required:
      - name
      - status
      - steps
      type: object
    AddWorkflowRequest:
      example:
        name: name
        description: description
        steps:
        - stepId: stepId
          action:
            queueId: queueId
            type: ANTIVIRUS
            parameters:
              mappingId: mappingId
              characterMax: characterMax
              ocrEngine: TESSERACT
              ocrParseTypes: ocrParseTypes
              ocrOutputType: CSV
              addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
              ocrNumberOfPages: ocrNumberOfPages
              notificationType: email
              notificationToCc: notificationToCc
              notificationToBcc: notificationToBcc
              url: url
              tags: tags
              notificationSubject: notificationSubject
              engine: chatgpt
              notificationText: notificationText
              eventBusName: eventBusName
              notificationHtml: notificationHtml
          decisions:
          - nextStepId: nextStepId
            type: APPROVE
          - nextStepId: nextStepId
            type: APPROVE
          queue:
            queueId: queueId
            approvalGroups:
            - approvalGroups
            - approvalGroups
        - stepId: stepId
          action:
            queueId: queueId
            type: ANTIVIRUS
            parameters:
              mappingId: mappingId
              characterMax: characterMax
              ocrEngine: TESSERACT
              ocrParseTypes: ocrParseTypes
              ocrOutputType: CSV
              addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
              ocrNumberOfPages: ocrNumberOfPages
              notificationType: email
              notificationToCc: notificationToCc
              notificationToBcc: notificationToBcc
              url: url
              tags: tags
              notificationSubject: notificationSubject
              engine: chatgpt
              notificationText: notificationText
              eventBusName: eventBusName
              notificationHtml: notificationHtml
          decisions:
          - nextStepId: nextStepId
            type: APPROVE
          - nextStepId: nextStepId
            type: APPROVE
          queue:
            queueId: queueId
            approvalGroups:
            - approvalGroups
            - approvalGroups
        status: ACTIVE
      properties:
        name:
          description: Workflow name
          type: string
        description:
          description: Workflow description
          type: string
        status:
          $ref: '#/components/schemas/WorkflowStatus'
        steps:
          description: Workflow Steps
          items:
            $ref: '#/components/schemas/AddWorkflowStep'
          type: array
      required:
      - name
      - status
      - steps
      type: object
    AddWorkflowStep:
      example:
        stepId: stepId
        action:
          queueId: queueId
          type: ANTIVIRUS
          parameters:
            mappingId: mappingId
            characterMax: characterMax
            ocrEngine: TESSERACT
            ocrParseTypes: ocrParseTypes
            ocrOutputType: CSV
            addPdfDetectedCharactersAsText: addPdfDetectedCharactersAsText
            ocrNumberOfPages: ocrNumberOfPages
            notificationType: email
            notificationToCc: notificationToCc
            notificationToBcc: notificationToBcc
            url: url
            tags: tags
            notificationSubject: notificationSubject
            engine: chatgpt
            notificationText: notificationText
            eventBusName: eventBusName
            notificationHtml: notificationHtml
        decisions:
        - nextStepId: nextStepId
          type: APPROVE
        - nextStepId: nextStepId
          type: APPROVE
        queue:
          queueId: queueId
          approvalGroups:
          - approvalGroups
          - approvalGroups
      properties:
        stepId:
          description: Workflow Step Identifier
          type: string
        action:
          $ref: '#/components/schemas/AddAction'
        queue:
          $ref: '#/components/schemas/AddWorkflowStepQueue'
        decisions:
          description: Workflow Decisions
          items:
            $ref: '#/components/schemas/AddWorkflowStepDecision'
          type: array
      type: object
    WorkflowStepDecisionType:
      description: Type of Workflow Step Decision
      enum:
      - APPROVE
      - REJECT
      type: string
    AddWorkflowStepDecision:
      example:
        nextStepId: nextStepId
        type: APPROVE
      properties:
        type:
          $ref: '#/components/schemas/WorkflowStepDecisionType'
        nextStepId:
          description: Workflow Step to move to
          type: string
      required:
      - nextStepId
      - type
      type: object
    WorkflowStepDecision:
      example:
        nextStepId: nextStepId
        type: APPROVE
      properties:
        type:
          $ref: '#/components/schemas/WorkflowStepDecisionType'
        nextStepId:
          description: Workflow Step to move to
          type: string
      type: object
    AddWorkflowStepQueue:
      example:
        queueId: queueId
        approvalGroups:
        - approvalGroups
        - approvalGroups
      properties:
        queueId:
          description: Queue Identifier
          type: string
        approvalGroups:
          items:
            type: string
          type: array
      required:
      - queueId
      type: object
    AddQueueResponse:
      example:
        queueId: queueId
      properties:
        queueId:
          description: Queue Identifier
          type: string
      type: object
    UpdateWorkflowResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    SetWorkflowResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    AddWorkflowResponse:
      example:
        workflowId: workflowId
      properties:
        workflowId:
          description: Workflow Identifier
          type: string
      type: object
    AddDocumentWorkflowRequest:
      example:
        workflowId: workflowId
      properties:
        workflowId:
          description: Workflow Identifier
          type: string
      required:
      - workflowId
      type: object
    GetDocumentWorkflowsResponse:
      example:
        next: next
        workflows:
        - currentStepId: currentStepId
          insertedDate: insertedDate
          name: name
          description: description
          workflowId: workflowId
          status: COMPLETE
        - currentStepId: currentStepId
          insertedDate: insertedDate
          name: name
          description: description
          workflowId: workflowId
          status: COMPLETE
      properties:
        workflows:
          description: List of Document Workflows
          items:
            $ref: '#/components/schemas/DocumentWorkflow'
          type: array
        next:
          type: string
      type: object
    GetDocumentWorkflowResponse:
      example:
        workflow:
          currentStepId: currentStepId
          insertedDate: insertedDate
          name: name
          description: description
          workflowId: workflowId
          status: COMPLETE
      properties:
        workflow:
          $ref: '#/components/schemas/DocumentWorkflow'
      type: object
    DocumentWorkflowStatus:
      description: Status of the Workflow Document
      enum:
      - COMPLETE
      - IN_PROGRESS
      - FAILED
      type: string
    DocumentWorkflow:
      example:
        currentStepId: currentStepId
        insertedDate: insertedDate
        name: name
        description: description
        workflowId: workflowId
        status: COMPLETE
      properties:
        workflowId:
          description: Workflow identifier
          type: string
        name:
          description: Workflow name
          type: string
        description:
          description: Workflow description
          type: string
        currentStepId:
          description: The current step workflow is on
          type: string
        status:
          $ref: '#/components/schemas/DocumentWorkflowStatus'
        insertedDate:
          description: Inserted Timestamp
          type: string
      type: object
    AddDocumentWorkflowResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    AddDocumentWorkflowDecisionsRequest:
      example:
        comments: comments
        decision: APPROVE
        stepId: stepId
      properties:
        stepId:
          description: Workflow Step Identifier
          type: string
        comments:
          description: Workflow decision comments
          type: string
        decision:
          enum:
          - APPROVE
          - REJECT
          type: string
      required:
      - decision
      - queueId
      type: object
    AddDocumentWorkflowDecisionsResponse:
      example:
        message: message
      properties:
        message:
          description: Result message
          type: string
      type: object
    GetSitesSchemaResponse:
      example:
        name: name
        attributes:
          compositeKeys:
          - attributeKeys:
            - attributeKeys
            - attributeKeys
          - attributeKeys:
            - attributeKeys
            - attributeKeys
          allowAdditionalAttributes: true
          optional:
          - allowedValues:
            - allowedValues
            - allowedValues
            attributeKey: attributeKey
          - allowedValues:
            - allowedValues
            - allowedValues
            attributeKey: attributeKey
          required:
          - allowedValues:
            - allowedValues
            - allowedValues
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
          - allowedValues:
            - allowedValues
            - allowedValues
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
      properties:
        name:
          description: Name of schema
          type: string
        attributes:
          $ref: '#/components/schemas/SchemaAttributes'
      type: object
    GetClassificationResponse:
      example:
        classification:
          insertedDate: insertedDate
          name: name
          attributes:
            compositeKeys:
            - attributeKeys:
              - attributeKeys
              - attributeKeys
            - attributeKeys:
              - attributeKeys
              - attributeKeys
            allowAdditionalAttributes: true
            optional:
            - allowedValues:
              - allowedValues
              - allowedValues
              attributeKey: attributeKey
            - allowedValues:
              - allowedValues
              - allowedValues
              attributeKey: attributeKey
            required:
            - allowedValues:
              - allowedValues
              - allowedValues
              defaultValue: defaultValue
              defaultValues:
              - defaultValues
              - defaultValues
              attributeKey: attributeKey
            - allowedValues:
              - allowedValues
              - allowedValues
              defaultValue: defaultValue
              defaultValues:
              - defaultValues
              - defaultValues
              attributeKey: attributeKey
          userId: userId
      properties:
        classification:
          $ref: '#/components/schemas/Classification'
      type: object
    GetClassificationsResponse:
      example:
        next: next
        classifications:
        - insertedDate: insertedDate
          name: name
          classificationId: classificationId
          userId: userId
        - insertedDate: insertedDate
          name: name
          classificationId: classificationId
          userId: userId
      properties:
        next:
          description: Next page of results token
          type: string
        classifications:
          description: List of classifications
          items:
            $ref: '#/components/schemas/ClassificationSummary'
          type: array
      type: object
    ClassificationSummary:
      example:
        insertedDate: insertedDate
        name: name
        classificationId: classificationId
        userId: userId
      properties:
        classificationId:
          description: Classification Identifier
          type: string
        name:
          description: Name of Classification
          type: string
        userId:
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
      type: object
    Classification:
      example:
        insertedDate: insertedDate
        name: name
        attributes:
          compositeKeys:
          - attributeKeys:
            - attributeKeys
            - attributeKeys
          - attributeKeys:
            - attributeKeys
            - attributeKeys
          allowAdditionalAttributes: true
          optional:
          - allowedValues:
            - allowedValues
            - allowedValues
            attributeKey: attributeKey
          - allowedValues:
            - allowedValues
            - allowedValues
            attributeKey: attributeKey
          required:
          - allowedValues:
            - allowedValues
            - allowedValues
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
          - allowedValues:
            - allowedValues
            - allowedValues
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
        userId: userId
      properties:
        name:
          description: Name of Classification
          type: string
        userId:
          type: string
        insertedDate:
          description: Inserted Timestamp
          type: string
        attributes:
          $ref: '#/components/schemas/SchemaAttributes'
      type: object
    AddClassification:
      example:
        name: name
        attributes:
          compositeKeys:
          - attributeKeys:
            - attributeKeys
            - attributeKeys
          - attributeKeys:
            - attributeKeys
            - attributeKeys
          allowAdditionalAttributes: true
          optional:
          - allowedValues:
            - allowedValues
            - allowedValues
            attributeKey: attributeKey
          - allowedValues:
            - allowedValues
            - allowedValues
            attributeKey: attributeKey
          required:
          - allowedValues:
            - allowedValues
            - allowedValues
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
          - allowedValues:
            - allowedValues
            - allowedValues
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
      properties:
        name:
          description: Name of Classification
          type: string
        attributes:
          $ref: '#/components/schemas/SchemaAttributes'
      type: object
    SetClassificationRequest:
      example:
        classification:
          name: name
          attributes:
            compositeKeys:
            - attributeKeys:
              - attributeKeys
              - attributeKeys
            - attributeKeys:
              - attributeKeys
              - attributeKeys
            allowAdditionalAttributes: true
            optional:
            - allowedValues:
              - allowedValues
              - allowedValues
              attributeKey: attributeKey
            - allowedValues:
              - allowedValues
              - allowedValues
              attributeKey: attributeKey
            required:
            - allowedValues:
              - allowedValues
              - allowedValues
              defaultValue: defaultValue
              defaultValues:
              - defaultValues
              - defaultValues
              attributeKey: attributeKey
            - allowedValues:
              - allowedValues
              - allowedValues
              defaultValue: defaultValue
              defaultValues:
              - defaultValues
              - defaultValues
              attributeKey: attributeKey
      properties:
        classification:
          $ref: '#/components/schemas/AddClassification'
      type: object
    AddSiteRequest:
      example:
        site:
          id: id
          title: title
          status: ACTIVE
      properties:
        site:
          $ref: '#/components/schemas/AddSite'
      type: object
    AddSite:
      example:
        id: id
        title: title
        status: ACTIVE
      properties:
        id:
          description: Site Id
          type: string
        title:
          description: Title of Site
          type: string
        status:
          $ref: '#/components/schemas/SiteStatus'
      type: object
    UpdateSiteRequest:
      example:
        site:
          title: title
          status: ACTIVE
      properties:
        site:
          $ref: '#/components/schemas/UpdateSite'
      type: object
    UpdateSite:
      example:
        title: title
        status: ACTIVE
      properties:
        title:
          description: Title of Site
          type: string
        status:
          $ref: '#/components/schemas/SiteStatus'
      type: object
    SiteStatus:
      description: Site status
      enum:
      - ACTIVE
      - INACTIVE
      type: string
    SiteGroupPermissions:
      description: Site Group Permissions
      enum:
      - ADMIN
      - DELETE
      - READ
      - WRITE
      - GOVERN
      type: string
    AddClassificationRequest:
      example:
        classification:
          name: name
          attributes:
            compositeKeys:
            - attributeKeys:
              - attributeKeys
              - attributeKeys
            - attributeKeys:
              - attributeKeys
              - attributeKeys
            allowAdditionalAttributes: true
            optional:
            - allowedValues:
              - allowedValues
              - allowedValues
              attributeKey: attributeKey
            - allowedValues:
              - allowedValues
              - allowedValues
              attributeKey: attributeKey
            required:
            - allowedValues:
              - allowedValues
              - allowedValues
              defaultValue: defaultValue
              defaultValues:
              - defaultValues
              - defaultValues
              attributeKey: attributeKey
            - allowedValues:
              - allowedValues
              - allowedValues
              defaultValue: defaultValue
              defaultValues:
              - defaultValues
              - defaultValues
              attributeKey: attributeKey
      properties:
        classification:
          $ref: '#/components/schemas/AddClassification'
      type: object
    SetSitesSchemaRequest:
      example:
        name: name
        attributes:
          compositeKeys:
          - attributeKeys:
            - attributeKeys
            - attributeKeys
          - attributeKeys:
            - attributeKeys
            - attributeKeys
          allowAdditionalAttributes: true
          optional:
          - allowedValues:
            - allowedValues
            - allowedValues
            attributeKey: attributeKey
          - allowedValues:
            - allowedValues
            - allowedValues
            attributeKey: attributeKey
          required:
          - allowedValues:
            - allowedValues
            - allowedValues
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
          - allowedValues:
            - allowedValues
            - allowedValues
            defaultValue: defaultValue
            defaultValues:
            - defaultValues
            - defaultValues
            attributeKey: attributeKey
      properties:
        name:
          description: Name of schema
          type: string
        attributes:
          $ref: '#/components/schemas/SchemaAttributes'
      type: object
    SchemaAttributes:
      example:
        compositeKeys:
        - attributeKeys:
          - attributeKeys
          - attributeKeys
        - attributeKeys:
          - attributeKeys
          - attributeKeys
        allowAdditionalAttributes: true
        optional:
        - allowedValues:
          - allowedValues
          - allowedValues
          attributeKey: attributeKey
        - allowedValues:
          - allowedValues
          - allowedValues
          attributeKey: attributeKey
        required:
        - allowedValues:
          - allowedValues
          - allowedValues
          defaultValue: defaultValue
          defaultValues:
          - defaultValues
          - defaultValues
          attributeKey: attributeKey
        - allowedValues:
          - allowedValues
          - allowedValues
          defaultValue: defaultValue
          defaultValues:
          - defaultValues
          - defaultValues
          attributeKey: attributeKey
      properties:
        compositeKeys:
          description: List of Composite Keys
          items:
            $ref: '#/components/schemas/AttributeSchemaCompositeKey'
          type: array
        required:
          description: List of Required Attributes
          items:
            $ref: '#/components/schemas/AttributeSchemaRequired'
          type: array
        optional:
          description: List of Optional Attribute
          items:
            $ref: '#/components/schemas/AttributeSchemaOptional'
          type: array
        allowAdditionalAttributes:
          default: true
          type: boolean
      type: object
    AttributeSchemaCompositeKey:
      example:
        attributeKeys:
        - attributeKeys
        - attributeKeys
      properties:
        attributeKeys:
          items:
            type: string
          type: array
      type: object
    AttributeSchemaRequired:
      example:
        allowedValues:
        - allowedValues
        - allowedValues
        defaultValue: defaultValue
        defaultValues:
        - defaultValues
        - defaultValues
        attributeKey: attributeKey
      properties:
        attributeKey:
          type: string
        defaultValue:
          description: Default value
          type: string
        defaultValues:
          description: Default values
          items:
            type: string
          type: array
        allowedValues:
          description: Only valid string values
          items:
            type: string
          type: array
      type: object
    AttributeSchemaOptional:
      example:
        allowedValues:
        - allowedValues
        - allowedValues
        attributeKey: attributeKey
      properties:
        attributeKey:
          type: string
        allowedValues:
          description: Only valid string values
          items:
            type: string
          type: array
      type: object
    OnlyOfficeDocumentNewRequest:
      description: ONLYOFFICE New Document Request
      example:
        extension: DOCX
      properties:
        extension:
          enum:
          - DOCX
          - XLSX
          - PPTX
          type: string
    OnlyOfficeDocumentEditRequest:
      description: ONLYOFFICE Edit Document Request
    OnlyOfficeDocumentResponse:
      example:
        config:
          onlyOfficeUrl: onlyOfficeUrl
          editorConfig:
            callbackUrl: callbackUrl
          documentType: documentType
          document:
            title: title
            url: url
            key: key
            fileType: fileType
          token: token
      properties:
        config:
          $ref: '#/components/schemas/OnlyOfficeConfig'
      type: object
    OnlyOfficeConfig:
      example:
        onlyOfficeUrl: onlyOfficeUrl
        editorConfig:
          callbackUrl: callbackUrl
        documentType: documentType
        document:
          title: title
          url: url
          key: key
          fileType: fileType
        token: token
      properties:
        onlyOfficeUrl:
          description: URL of the ONLYOFFICE application
          type: string
        token:
          description: ONLYOFFICE security token
          type: string
        documentType:
          description: Type of document (https://api.onlyoffice.com/editors/config/)
          type: string
        editorConfig:
          $ref: '#/components/schemas/OnlyOfficeEditorConfig'
        document:
          $ref: '#/components/schemas/OnlyOfficeConfigDocument'
      type: object
    OnlyOfficeEditorConfig:
      example:
        callbackUrl: callbackUrl
      properties:
        callbackUrl:
          type: string
      type: object
    OnlyOfficeConfigDocument:
      example:
        title: title
        url: url
        key: key
        fileType: fileType
      properties:
        url:
          description: Defines the absolute URL where the source viewed or edited
            document is stored
          type: string
        title:
          description: Defines the desired file name for the viewed or edited document
          type: string
        key:
          description: Defines the unique document identifier used by the service
            to recognize the document
          type: string
        fileType:
          description: Defines the type of the file for the source viewed or edited
            document
          type: string
      type: object
    OnlyOfficeDocumentSaveResponse:
      example:
        message: message
      properties:
        message:
          type: string
      type: object
    DocusignEnvironment:
      description: Docusign Environment
      enum:
      - PRODUCTION
      - DEVELOPMENT
      type: string
    DocusignRecipientView:
      example:
        clientUserId: clientUserId
        recipientId: recipientId
        returnUrl: returnUrl
        userName: userName
        frameAncestors:
        - frameAncestors
        - frameAncestors
        messageOrigins:
        - messageOrigins
        - messageOrigins
        email: email
      properties:
        returnUrl:
          description: Identifies the return point after sending the envelope
          type: string
        recipientId:
          description: "A reference used to map recipients to other objects, such\
            \ as specific document tabs."
          type: string
        userName:
          description: The username of the recipient. You can use either email and
            userName.
          type: string
        clientUserId:
          description: Specifies unique identifier for signer
          type: string
        email:
          description: Specifies the email of the recipient
          type: string
        frameAncestors:
          description: An array of ancestors that can embed the frame. Include the
            domain where the envelope will be embedded and the same URL as messageOrigins.
          items:
            type: string
          type: array
        messageOrigins:
          description: The originating domain for the signature request message
          items:
            type: string
          type: array
      type: object
    AddDocusignEnvelopesRequest:
      example:
        signers:
        - clientUserId: clientUserId
          suppressEmails: suppressEmails
          name: name
          tabs:
            signHereTabs:
            - xPosition: xPosition
              anchorXOffset: anchorXOffset
              pageNumber: pageNumber
              yPosition: yPosition
              anchorString: anchorString
              anchorYOffset: anchorYOffset
              anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
              anchorUnits: anchorUnits
            - xPosition: xPosition
              anchorXOffset: anchorXOffset
              pageNumber: pageNumber
              yPosition: yPosition
              anchorString: anchorString
              anchorYOffset: anchorYOffset
              anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
              anchorUnits: anchorUnits
          recipientId: recipientId
          routingOrder: routingOrder
          email: email
        - clientUserId: clientUserId
          suppressEmails: suppressEmails
          name: name
          tabs:
            signHereTabs:
            - xPosition: xPosition
              anchorXOffset: anchorXOffset
              pageNumber: pageNumber
              yPosition: yPosition
              anchorString: anchorString
              anchorYOffset: anchorYOffset
              anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
              anchorUnits: anchorUnits
            - xPosition: xPosition
              anchorXOffset: anchorXOffset
              pageNumber: pageNumber
              yPosition: yPosition
              anchorString: anchorString
              anchorYOffset: anchorYOffset
              anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
              anchorUnits: anchorUnits
          recipientId: recipientId
          routingOrder: routingOrder
          email: email
        notification:
          expirations:
            expireWarn: expireWarn
            expireAfter: expireAfter
            expireEnabled: expireEnabled
          reminders:
            reminderEnabled: reminderEnabled
            reminderFrequency: reminderFrequency
            reminderDelay: reminderDelay
          useAccountDefaults: useAccountDefaults
        environment: PRODUCTION
        inpersonSigners:
        - signerEmail: signerEmail
          hostName: hostName
          suppressEmails: suppressEmails
          tabs:
            signHereTabs:
            - xPosition: xPosition
              anchorXOffset: anchorXOffset
              pageNumber: pageNumber
              yPosition: yPosition
              anchorString: anchorString
              anchorYOffset: anchorYOffset
              anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
              anchorUnits: anchorUnits
            - xPosition: xPosition
              anchorXOffset: anchorXOffset
              pageNumber: pageNumber
              yPosition: yPosition
              anchorString: anchorString
              anchorYOffset: anchorYOffset
              anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
              anchorUnits: anchorUnits
          hostEmail: hostEmail
          recipientId: recipientId
          routingOrder: routingOrder
          signerName: signerName
        - signerEmail: signerEmail
          hostName: hostName
          suppressEmails: suppressEmails
          tabs:
            signHereTabs:
            - xPosition: xPosition
              anchorXOffset: anchorXOffset
              pageNumber: pageNumber
              yPosition: yPosition
              anchorString: anchorString
              anchorYOffset: anchorYOffset
              anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
              anchorUnits: anchorUnits
            - xPosition: xPosition
              anchorXOffset: anchorXOffset
              pageNumber: pageNumber
              yPosition: yPosition
              anchorString: anchorString
              anchorYOffset: anchorYOffset
              anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
              anchorUnits: anchorUnits
          hostEmail: hostEmail
          recipientId: recipientId
          routingOrder: routingOrder
          signerName: signerName
        emailSubject: emailSubject
      properties:
        emailSubject:
          description: The subject line of the email message that is sent to all recipients
          type: string
        environment:
          $ref: '#/components/schemas/DocusignEnvironment'
        signers:
          description: List of DocuSign Signers
          items:
            $ref: '#/components/schemas/DocusignSigner'
          type: array
        inpersonSigners:
          description: List of DocuSign Inperson Signers
          items:
            $ref: '#/components/schemas/DocusignInpersonSigner'
          type: array
        notification:
          $ref: '#/components/schemas/DocusignNotification'
      required:
      - environment
      type: object
    DocusignNotification:
      example:
        expirations:
          expireWarn: expireWarn
          expireAfter: expireAfter
          expireEnabled: expireEnabled
        reminders:
          reminderEnabled: reminderEnabled
          reminderFrequency: reminderFrequency
          reminderDelay: reminderDelay
        useAccountDefaults: useAccountDefaults
      properties:
        useAccountDefaults:
          description: "When true, the account default notification settings are used\
            \ for the envelope, overriding the reminders and expirations settings.\
            \ When false, the reminders and expirations settings specified in this\
            \ request are used. The default value is false."
          type: string
        expirations:
          $ref: '#/components/schemas/DocusignNotificationExpirations'
        reminders:
          $ref: '#/components/schemas/DocusignNotificationReminders'
    DocusignNotificationExpirations:
      example:
        expireWarn: expireWarn
        expireAfter: expireAfter
        expireEnabled: expireEnabled
      properties:
        expireAfter:
          description: "An integer that sets the number of days the envelope is active.\
            \ For this value to be used, expireEnabled must be explicitly set to true."
          type: string
        expireEnabled:
          description: "When true, the envelope expires in the number of days set\
            \ by expireAfter."
          type: string
        expireWarn:
          description: An integer that specifying the number of days before the envelope
            expires that an expiration warning email is sent to the recipient.
          type: string
    DocusignNotificationReminders:
      example:
        reminderEnabled: reminderEnabled
        reminderFrequency: reminderFrequency
        reminderDelay: reminderDelay
      properties:
        reminderDelay:
          description: An integer specifying the number of days after the recipient
            receives the envelope that reminder emails are sent to the recipient.
          type: string
        reminderEnabled:
          description: "When true, reminders are enabled. The default value is false."
          type: string
        reminderFrequency:
          description: An integer specifying the interval in days between reminder
            emails.
          type: string
    DocusignSigner:
      example:
        clientUserId: clientUserId
        suppressEmails: suppressEmails
        name: name
        tabs:
          signHereTabs:
          - xPosition: xPosition
            anchorXOffset: anchorXOffset
            pageNumber: pageNumber
            yPosition: yPosition
            anchorString: anchorString
            anchorYOffset: anchorYOffset
            anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
            anchorUnits: anchorUnits
          - xPosition: xPosition
            anchorXOffset: anchorXOffset
            pageNumber: pageNumber
            yPosition: yPosition
            anchorString: anchorString
            anchorYOffset: anchorYOffset
            anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
            anchorUnits: anchorUnits
        recipientId: recipientId
        routingOrder: routingOrder
        email: email
      properties:
        name:
          description: Name of Signer
          type: string
        email:
          description: Email of Signer
          type: string
        clientUserId:
          description: Specifies unique identifier for signer
          type: string
        recipientId:
          description: "A reference used to map recipients to other objects, such\
            \ as specific document tabs."
          type: string
        routingOrder:
          description: Specifies the routing order of the recipient in the envelope.
          type: string
        suppressEmails:
          description: "When true, email notifications are suppressed for the recipient,\
            \ and they must access envelopes and documents from their Docusign inbox."
          type: string
        tabs:
          $ref: '#/components/schemas/DocusignSigningTabs'
      required:
      - name
      type: object
    DocusignSigningTabs:
      example:
        signHereTabs:
        - xPosition: xPosition
          anchorXOffset: anchorXOffset
          pageNumber: pageNumber
          yPosition: yPosition
          anchorString: anchorString
          anchorYOffset: anchorYOffset
          anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
          anchorUnits: anchorUnits
        - xPosition: xPosition
          anchorXOffset: anchorXOffset
          pageNumber: pageNumber
          yPosition: yPosition
          anchorString: anchorString
          anchorYOffset: anchorYOffset
          anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
          anchorUnits: anchorUnits
      properties:
        signHereTabs:
          description: A list of Sign Here tabs
          items:
            $ref: '#/components/schemas/DocusignSignHereTabs'
          type: array
      type: object
    DocusignSignHereTabs:
      example:
        xPosition: xPosition
        anchorXOffset: anchorXOffset
        pageNumber: pageNumber
        yPosition: yPosition
        anchorString: anchorString
        anchorYOffset: anchorYOffset
        anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
        anchorUnits: anchorUnits
      properties:
        anchorString:
          description: Specifies the string to find in the document and use as the
            basis for tab placement.
          type: string
        anchorXOffset:
          description: Specifies the X axis location of the tab in anchorUnits relative
            to the anchorString.
          type: string
        anchorYOffset:
          description: Specifies the Y axis location of the tab in anchorUnits relative
            to the anchorString.
          type: string
        anchorIgnoreIfNotPresent:
          description: "When true, this tab is ignored if the anchorString is not\
            \ found in the document."
          type: string
        anchorUnits:
          description: Specifies units of the anchorXOffset and anchorYOffset
          type: string
        xPosition:
          description: This property indicates the horizontal offset of the object
            on the page
          type: string
        yPosition:
          description: This property indicates the vertical offset of the object on
            the page
          type: string
        pageNumber:
          description: Specifies the page number on which the tab is located
          type: string
      type: object
    DocusignInpersonSigner:
      example:
        signerEmail: signerEmail
        hostName: hostName
        suppressEmails: suppressEmails
        tabs:
          signHereTabs:
          - xPosition: xPosition
            anchorXOffset: anchorXOffset
            pageNumber: pageNumber
            yPosition: yPosition
            anchorString: anchorString
            anchorYOffset: anchorYOffset
            anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
            anchorUnits: anchorUnits
          - xPosition: xPosition
            anchorXOffset: anchorXOffset
            pageNumber: pageNumber
            yPosition: yPosition
            anchorString: anchorString
            anchorYOffset: anchorYOffset
            anchorIgnoreIfNotPresent: anchorIgnoreIfNotPresent
            anchorUnits: anchorUnits
        hostEmail: hostEmail
        recipientId: recipientId
        routingOrder: routingOrder
        signerName: signerName
      properties:
        hostEmail:
          description: The email of the signing host
          type: string
        hostName:
          description: The name of the signing host
          type: string
        signerName:
          description: The full legal name of a signer
          type: string
        signerEmail:
          description: The in-person signer's email address
          type: string
        recipientId:
          description: "A reference used to map recipients to other objects, such\
            \ as specific document tabs."
          type: string
        routingOrder:
          description: Specifies the routing order of the recipient in the envelope.
          type: string
        suppressEmails:
          description: "When true, email notifications are suppressed for the recipient,\
            \ and they must access envelopes and documents from their Docusign inbox."
          type: string
        tabs:
          $ref: '#/components/schemas/DocusignSigningTabs'
      required:
      - hostEmail
      - hostName
      - signerName
      type: object
    AddDocusignEnvelopesResponse:
      example:
        envelopeId: envelopeId
      properties:
        envelopeId:
          description: Docusign Envelope Identifier
          type: string
      type: object
    AddDocusignRecipientViewRequest:
      example:
        environment: PRODUCTION
        recipientView:
          clientUserId: clientUserId
          recipientId: recipientId
          returnUrl: returnUrl
          userName: userName
          frameAncestors:
          - frameAncestors
          - frameAncestors
          messageOrigins:
          - messageOrigins
          - messageOrigins
          email: email
      properties:
        environment:
          $ref: '#/components/schemas/DocusignEnvironment'
        recipientView:
          $ref: '#/components/schemas/DocusignRecipientView'
      required:
      - environment
      - recipientView
      type: object
    AddDocusignRecipientViewResponse:
      example:
        viewUrl: viewUrl
      properties:
        viewUrl:
          description: The view URL to be navigated to complete DocuSign signing
          type: string
      type: object
    UpdateMatchingDocumentTagsRequest_match:
      example:
        tag:
          beginsWith: beginsWith
          eq: eq
          key: key
      properties:
        tag:
          $ref: '#/components/schemas/MatchDocumentTag'
      type: object
    UpdateMatchingDocumentTagsRequest_update:
      description: Data to update
      example:
        tags:
        - values:
          - values
          - values
          value: value
          key: key
        - values:
          - values
          - values
          value: value
          key: key
      properties:
        tags:
          description: List of document tags
          items:
            $ref: '#/components/schemas/AddDocumentTag'
          type: array
      type: object
  securitySchemes:
    ApiAuthorization:
      flows: {}
      type: oauth2
      x-amazon-apigateway-authorizer:
        type: jwt
        jwtConfiguration:
          issuer:
            Fn::Sub: "https://cognito-idp.${AWS::Region}.amazonaws.com/${CognitoUserPool}"
          audience:
          - Fn::Sub: "${CognitoUserPoolClient}"
        identitySource: $request.header.Authorization
  x-amazon-apigateway-integrations:
    lambdaApi200:
      uri:
        Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
      responses:
        default:
          statusCode: "200"
          responseParameters:
            method.response.header.Access-Control-Allow-Methods: '''*'''
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
            method.response.header.Access-Control-Allow-Origin: '''*'''
      passthroughBehavior: when_no_templates
      httpMethod: POST
      type: aws_proxy
      payloadFormatVersion: "1.0"
    ocrLambdaApi200:
      uri:
        Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
      responses:
        default:
          statusCode: "200"
          responseParameters:
            method.response.header.Access-Control-Allow-Methods: '''*'''
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
            method.response.header.Access-Control-Allow-Origin: '''*'''
      passthroughBehavior: when_no_templates
      httpMethod: POST
      type: aws_proxy
      payloadFormatVersion: "1.0"
    antivirusLambdaApi200:
      uri:
        Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
      responses:
        default:
          statusCode: "200"
          responseParameters:
            method.response.header.Access-Control-Allow-Methods: '''*'''
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
            method.response.header.Access-Control-Allow-Origin: '''*'''
      passthroughBehavior: when_no_templates
      httpMethod: POST
      type: aws_proxy
      payloadFormatVersion: "1.0"
    searchLambdaApi200:
      uri:
        Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
      responses:
        default:
          statusCode: "200"
          responseParameters:
            method.response.header.Access-Control-Allow-Methods: '''*'''
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
            method.response.header.Access-Control-Allow-Origin: '''*'''
      passthroughBehavior: when_no_templates
      httpMethod: POST
      type: aws_proxy
      payloadFormatVersion: "1.0"
    fulltextLambdaApi200:
      uri:
        Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
      responses:
        default:
          statusCode: "200"
          responseParameters:
            method.response.header.Access-Control-Allow-Methods: '''*'''
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
            method.response.header.Access-Control-Allow-Origin: '''*'''
      passthroughBehavior: when_no_templates
      httpMethod: POST
      type: aws_proxy
      payloadFormatVersion: "1.0"
    ocrObjectsLambdaApi200:
      uri:
        Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OcrApiRequestsArn}/invocations"
      responses:
        default:
          statusCode: "200"
          responseParameters:
            method.response.header.Access-Control-Allow-Methods: '''*'''
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
            method.response.header.Access-Control-Allow-Origin: '''*'''
      passthroughBehavior: when_no_templates
      httpMethod: POST
      type: aws_proxy
      payloadFormatVersion: "1.0"
    onlyOfficeLambdaApi200:
      uri:
        Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
      responses:
        default:
          statusCode: "200"
          responseParameters:
            method.response.header.Access-Control-Allow-Methods: '''*'''
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
            method.response.header.Access-Control-Allow-Origin: '''*'''
      passthroughBehavior: when_no_templates
      httpMethod: POST
      type: aws_proxy
      payloadFormatVersion: "1.0"
    esignatureLambdaApi200:
      uri:
        Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
      responses:
        default:
          statusCode: "200"
          responseParameters:
            method.response.header.Access-Control-Allow-Methods: '''*'''
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
            method.response.header.Access-Control-Allow-Origin: '''*'''
      passthroughBehavior: when_no_templates
      httpMethod: POST
      type: aws_proxy
      payloadFormatVersion: "1.0"
    caseManagementLambdaApi200:
      uri:
        Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
      responses:
        default:
          statusCode: "200"
          responseParameters:
            method.response.header.Access-Control-Allow-Methods: '''*'''
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
            method.response.header.Access-Control-Allow-Origin: '''*'''
      passthroughBehavior: when_no_templates
      httpMethod: POST
      type: aws_proxy
      payloadFormatVersion: "1.0"
    googleLambdaApi201:
      uri:
        Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
      responses:
        default:
          statusCode: "201"
          responseParameters:
            method.response.header.Access-Control-Allow-Methods: '''*'''
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
            method.response.header.Access-Control-Allow-Origin: '''*'''
      passthroughBehavior: when_no_templates
      httpMethod: POST
      type: aws_proxy
      payloadFormatVersion: "1.0"
    documentGenerationLambdaApi201:
      uri:
        Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
      responses:
        default:
          statusCode: "201"
          responseParameters:
            method.response.header.Access-Control-Allow-Methods: '''*'''
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
            method.response.header.Access-Control-Allow-Origin: '''*'''
      passthroughBehavior: when_no_templates
      httpMethod: POST
      type: aws_proxy
      payloadFormatVersion: "1.0"
    lambdaApi201:
      uri:
        Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
      responses:
        default:
          statusCode: "201"
          responseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
            method.response.header.Access-Control-Allow-Methods: '''*'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      passthroughBehavior: WHEN_NO_TEMPLATES
      httpMethod: POST
      type: aws_proxy
      payloadFormatVersion: "1.0"
x-amazon-apigateway-gateway-responses:
  UNAUTHORIZED:
    statusCode: 401
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: '''*'''
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
x-amazon-apigateway-cors:
  allowOrigins:
  - '*'
  maxAge: 3600
  allowMethods:
  - '*'
  allowHeaders:
  - '*'

